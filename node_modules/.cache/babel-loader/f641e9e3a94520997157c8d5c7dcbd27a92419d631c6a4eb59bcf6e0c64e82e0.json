{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\nvar _WeakMap = require(\"@babel/runtime-corejs3/core-js-stable/weak-map\");\nvar _Array$isArray2 = require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\");\nvar _getIteratorMethod = require(\"@babel/runtime-corejs3/core-js/get-iterator-method\");\nvar _Array$from = require(\"@babel/runtime-corejs3/core-js-stable/array/from\");\nvar _sliceInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\");\nvar _reverseInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/reverse\");\nvar _Promise2 = require(\"@babel/runtime-corejs3/core-js-stable/promise\");\nvar _Object$setPrototypeOf = require(\"@babel/runtime-corejs3/core-js-stable/object/set-prototype-of\");\nvar _typeof3 = require(\"@babel/runtime-corejs3/helpers/typeof\");\nvar _Object$getPrototypeOf2 = require(\"@babel/runtime-corejs3/core-js-stable/object/get-prototype-of\");\nvar _Object$create2 = require(\"@babel/runtime-corejs3/core-js-stable/object/create\");\nvar _Symbol = require(\"@babel/runtime-corejs3/core-js-stable/symbol\");\nvar _Object$defineProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\nvar _Object$defineProperties = require(\"@babel/runtime-corejs3/core-js-stable/object/define-properties\");\nvar _Object$getOwnPropertyDescriptors = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors\");\nvar _forEachInstanceProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\");\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor\");\nvar _filterInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\");\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols\");\nvar _Object$keys2 = require(\"@babel/runtime-corejs3/core-js-stable/object/keys\");\n_Object$defineProperty2(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/map\"));\nvar _find = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/find\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\"));\nvar _create = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/create\"));\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\nvar _concat = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/concat\"));\nvar _getPrototypeOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/get-prototype-of\"));\nvar _includes = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/includes\"));\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/json/stringify\"));\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\nvar _freeze = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/freeze\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\nvar _defineProperty3 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\nvar _canBeSerialized = _interopRequireDefault(require(\"./canBeSerialized\"));\nvar _decode = _interopRequireDefault(require(\"./decode\"));\nvar _encode = _interopRequireDefault(require(\"./encode\"));\nvar _escape2 = _interopRequireDefault(require(\"./escape\"));\nvar _EventuallyQueue = _interopRequireDefault(require(\"./EventuallyQueue\"));\nvar _ParseACL = _interopRequireDefault(require(\"./ParseACL\"));\nvar _parseDate = _interopRequireDefault(require(\"./parseDate\"));\nvar _ParseError = _interopRequireDefault(require(\"./ParseError\"));\nvar _ParseFile = _interopRequireDefault(require(\"./ParseFile\"));\nvar _promiseUtils = require(\"./promiseUtils\");\nvar _LocalDatastoreUtils = require(\"./LocalDatastoreUtils\");\nvar _ParseOp = require(\"./ParseOp\");\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\nvar _ParseRelation = _interopRequireDefault(require(\"./ParseRelation\"));\nvar SingleInstanceStateController = _interopRequireWildcard(require(\"./SingleInstanceStateController\"));\nvar _unique = _interopRequireDefault(require(\"./unique\"));\nvar UniqueInstanceStateController = _interopRequireWildcard(require(\"./UniqueInstanceStateController\"));\nvar _unsavedChildren = _interopRequireDefault(require(\"./unsavedChildren\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof _WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new _WeakMap();\n  var cacheNodeInterop = new _WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof3(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = _Object$defineProperty2 && _Object$getOwnPropertyDescriptor ? _Object$getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        _Object$defineProperty2(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n  if (!it) {\n    if (_Array$isArray2(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function () {};\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  var _context21;\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = _sliceInstanceProperty(_context21 = Object.prototype.toString.call(o)).call(_context21, 8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _regeneratorRuntime() {\n  \"use strict\";\n\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function () {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    $Symbol = \"function\" == typeof _Symbol ? _Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return _Object$defineProperty2(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function (obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = _Object$create2(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = _Object$getPrototypeOf2,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = _Object$create2(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    var _context19;\n    _forEachInstanceProperty2(_context19 = [\"next\", \"throw\", \"return\"]).call(_context19, function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof3(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n      return ContinueSentinel;\n    }\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], _forEachInstanceProperty2(tryLocsList).call(tryLocsList, pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) {\n              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            }\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return _Object$setPrototypeOf ? _Object$setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = _Object$create2(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = _Promise2);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    return _reverseInstanceProperty(keys).call(keys), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function (skipTempReset) {\n      var _context20;\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, _forEachInstanceProperty2(_context20 = this.tryEntries).call(_context20, resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+_sliceInstanceProperty(name).call(name, 1)) && (this[name] = undefined);\n      }\n    },\n    stop: function () {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function (exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function (type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function (record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function (finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    catch: function (tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = _Object$keys2(object);\n  if (_Object$getOwnPropertySymbols) {\n    var symbols = _Object$getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) {\n      return _Object$getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var _context17, _context18;\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? _forEachInstanceProperty2(_context17 = ownKeys(Object(source), !0)).call(_context17, function (key) {\n      (0, _defineProperty3.default)(target, key, source[key]);\n    }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : _forEachInstanceProperty2(_context18 = ownKeys(Object(source))).call(_context18, function (key) {\n      _Object$defineProperty2(target, key, _Object$getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar uuidv4 = require('./uuid');\n/*:: export type Pointer = {\n  __type: string,\n  className: string,\n  objectId: string,\n};*/\n\n/*:: type SaveParams = {\n  method: string,\n  path: string,\n  body: AttributeMap,\n};*/\n\n/*:: export type SaveOptions = FullOptions & {\n  cascadeSave?: boolean,\n  context?: AttributeMap,\n};*/\n// Mapping of class names to constructors, so we can populate objects from the\n// server with appropriate subclasses of ParseObject\n\nvar classMap = {}; // Global counter for generating unique Ids for non-single-instance objects\n\nvar objectCount = 0; // On web clients, objects are single-instance: any two objects with the same Id\n// will have the same attributes. However, this may be dangerous default\n// behavior in a server scenario\n\nvar singleInstance = !_CoreManager.default.get('IS_NODE');\nif (singleInstance) {\n  _CoreManager.default.setObjectStateController(SingleInstanceStateController);\n} else {\n  _CoreManager.default.setObjectStateController(UniqueInstanceStateController);\n}\nfunction getServerUrlPath() {\n  var serverUrl = _CoreManager.default.get('SERVER_URL');\n  if (serverUrl[serverUrl.length - 1] !== '/') {\n    serverUrl += '/';\n  }\n  var url = serverUrl.replace(/https?:\\/\\//, '');\n  return url.substr((0, _indexOf.default)(url).call(url, '/'));\n}\n/**\n * Creates a new model with defined attributes.\n *\n * <p>You won't normally call this method directly.  It is recommended that\n * you use a subclass of <code>Parse.Object</code> instead, created by calling\n * <code>extend</code>.</p>\n *\n * <p>However, if you don't want to use a subclass, or aren't sure which\n * subclass is appropriate, you can use this form:<pre>\n *     var object = new Parse.Object(\"ClassName\");\n * </pre>\n * That is basically equivalent to:<pre>\n *     var MyClass = Parse.Object.extend(\"ClassName\");\n *     var object = new MyClass();\n * </pre></p>\n *\n * @alias Parse.Object\n */\n\nvar ParseObject = /*#__PURE__*/function () {\n  /**\n   * @param {string} className The class name for the object\n   * @param {object} attributes The initial set of data to store in the object.\n   * @param {object} options The options for this object instance.\n   */\n  function ParseObject(className\n  /*: ?string | { className: string, [attr: string]: mixed }*/, attributes\n  /*:: ?: { [attr: string]: mixed }*/, options\n  /*:: ?: { ignoreValidation: boolean }*/) {\n    (0, _classCallCheck2.default)(this, ParseObject);\n    (0, _defineProperty3.default)(this, \"id\", void 0);\n    (0, _defineProperty3.default)(this, \"_localId\", void 0);\n    (0, _defineProperty3.default)(this, \"_objCount\", void 0);\n    (0, _defineProperty3.default)(this, \"className\", void 0); // Enable legacy initializers\n\n    if (typeof this.initialize === 'function') {\n      this.initialize.apply(this, arguments);\n    }\n    var toSet = null;\n    this._objCount = objectCount++;\n    if (typeof className === 'string') {\n      this.className = className;\n      if (attributes && (0, _typeof2.default)(attributes) === 'object') {\n        toSet = attributes;\n      }\n    } else if (className && (0, _typeof2.default)(className) === 'object') {\n      this.className = className.className;\n      toSet = {};\n      for (var _attr in className) {\n        if (_attr !== 'className') {\n          toSet[_attr] = className[_attr];\n        }\n      }\n      if (attributes && (0, _typeof2.default)(attributes) === 'object') {\n        options = attributes;\n      }\n    }\n    if (toSet && !this.set(toSet, options)) {\n      throw new Error(\"Can't create an invalid Parse Object\");\n    }\n  }\n  /**\n   * The ID of this object, unique within its class.\n   *\n   * @property {string} id\n   */\n\n  (0, _createClass2.default)(ParseObject, [{\n    key: \"attributes\",\n    get: /** Prototype getters / setters **/\n    function () /*: AttributeMap*/\n    {\n      var stateController = _CoreManager.default.getObjectStateController();\n      return (0, _freeze.default)(stateController.estimateAttributes(this._getStateIdentifier()));\n    }\n    /**\n     * The first time this object was saved on the server.\n     *\n     * @property {Date} createdAt\n     * @returns {Date}\n     */\n  }, {\n    key: \"createdAt\",\n    get: function () /*: ?Date*/\n    {\n      return this._getServerData().createdAt;\n    }\n    /**\n     * The last time this object was updated on the server.\n     *\n     * @property {Date} updatedAt\n     * @returns {Date}\n     */\n  }, {\n    key: \"updatedAt\",\n    get: function () /*: ?Date*/\n    {\n      return this._getServerData().updatedAt;\n    }\n    /** Private methods **/\n\n    /**\n     * Returns a local or server Id used uniquely identify this object\n     *\n     * @returns {string}\n     */\n  }, {\n    key: \"_getId\",\n    value: function () /*: string*/\n    {\n      if (typeof this.id === 'string') {\n        return this.id;\n      }\n      if (typeof this._localId === 'string') {\n        return this._localId;\n      }\n      var localId = 'local' + uuidv4();\n      this._localId = localId;\n      return localId;\n    }\n    /**\n     * Returns a unique identifier used to pull data from the State Controller.\n     *\n     * @returns {Parse.Object|object}\n     */\n  }, {\n    key: \"_getStateIdentifier\",\n    value: function () /*: ParseObject | { id: string, className: string }*/\n    {\n      if (singleInstance) {\n        var id = this.id;\n        if (!id) {\n          id = this._getId();\n        }\n        return {\n          id: id,\n          className: this.className\n        };\n      } else {\n        return this;\n      }\n    }\n  }, {\n    key: \"_getServerData\",\n    value: function () /*: AttributeMap*/\n    {\n      var stateController = _CoreManager.default.getObjectStateController();\n      return stateController.getServerData(this._getStateIdentifier());\n    }\n  }, {\n    key: \"_clearServerData\",\n    value: function () {\n      var serverData = this._getServerData();\n      var unset = {};\n      for (var _attr2 in serverData) {\n        unset[_attr2] = undefined;\n      }\n      var stateController = _CoreManager.default.getObjectStateController();\n      stateController.setServerData(this._getStateIdentifier(), unset);\n    }\n  }, {\n    key: \"_getPendingOps\",\n    value: function () /*: Array<OpsMap>*/\n    {\n      var stateController = _CoreManager.default.getObjectStateController();\n      return stateController.getPendingOps(this._getStateIdentifier());\n    }\n    /**\n     * @param {Array<string>} [keysToClear] - if specified, only ops matching\n     * these fields will be cleared\n     */\n  }, {\n    key: \"_clearPendingOps\",\n    value: function (keysToClear\n    /*:: ?: Array<string>*/) {\n      var pending = this._getPendingOps();\n      var latest = pending[pending.length - 1];\n      var keys = keysToClear || (0, _keys.default)(latest);\n      (0, _forEach.default)(keys).call(keys, function (key) {\n        delete latest[key];\n      });\n    }\n  }, {\n    key: \"_getDirtyObjectAttributes\",\n    value: function () /*: AttributeMap*/\n    {\n      var attributes = this.attributes;\n      var stateController = _CoreManager.default.getObjectStateController();\n      var objectCache = stateController.getObjectCache(this._getStateIdentifier());\n      var dirty = {};\n      for (var _attr3 in attributes) {\n        var val = attributes[_attr3];\n        if (val && (0, _typeof2.default)(val) === 'object' && !(val instanceof ParseObject) && !(val instanceof _ParseFile.default) && !(val instanceof _ParseRelation.default)) {\n          // Due to the way browsers construct maps, the key order will not change\n          // unless the object is changed\n          try {\n            var json = (0, _encode.default)(val, false, true);\n            var stringified = (0, _stringify.default)(json);\n            if (objectCache[_attr3] !== stringified) {\n              dirty[_attr3] = val;\n            }\n          } catch (e) {\n            // Error occurred, possibly by a nested unsaved pointer in a mutable container\n            // No matter how it happened, it indicates a change in the attribute\n            dirty[_attr3] = val;\n          }\n        }\n      }\n      return dirty;\n    }\n  }, {\n    key: \"_toFullJSON\",\n    value: function (seen\n    /*:: ?: Array<any>*/, offline\n    /*:: ?: boolean*/) /*: AttributeMap*/\n    {\n      var json\n      /*: { [key: string]: mixed }*/ = this.toJSON(seen, offline);\n      json.__type = 'Object';\n      json.className = this.className;\n      return json;\n    }\n  }, {\n    key: \"_getSaveJSON\",\n    value: function () /*: AttributeMap*/\n    {\n      var pending = this._getPendingOps();\n      var dirtyObjects = this._getDirtyObjectAttributes();\n      var json = {};\n      for (var attr in dirtyObjects) {\n        var isDotNotation = false;\n        for (var i = 0; i < pending.length; i += 1) {\n          for (var field in pending[i]) {\n            // Dot notation operations are handled later\n            if ((0, _includes.default)(field).call(field, '.')) {\n              var fieldName = field.split('.')[0];\n              if (fieldName === attr) {\n                isDotNotation = true;\n                break;\n              }\n            }\n          }\n        }\n        if (!isDotNotation) {\n          json[attr] = new _ParseOp.SetOp(dirtyObjects[attr]).toJSON();\n        }\n      }\n      for (attr in pending[0]) {\n        json[attr] = pending[0][attr].toJSON();\n      }\n      return json;\n    }\n  }, {\n    key: \"_getSaveParams\",\n    value: function () /*: SaveParams*/\n    {\n      var method = this.id ? 'PUT' : 'POST';\n      var body = this._getSaveJSON();\n      var path = 'classes/' + this.className;\n      if (_CoreManager.default.get('ALLOW_CUSTOM_OBJECT_ID')) {\n        if (!this.createdAt) {\n          method = 'POST';\n          body.objectId = this.id;\n        } else {\n          method = 'PUT';\n          path += '/' + this.id;\n        }\n      } else if (this.id) {\n        path += '/' + this.id;\n      } else if (this.className === '_User') {\n        path = 'users';\n      }\n      return {\n        method: method,\n        body: body,\n        path: path\n      };\n    }\n  }, {\n    key: \"_finishFetch\",\n    value: function (serverData\n    /*: AttributeMap*/) {\n      if (!this.id && serverData.objectId) {\n        this.id = serverData.objectId;\n      }\n      var stateController = _CoreManager.default.getObjectStateController();\n      stateController.initializeState(this._getStateIdentifier());\n      var decoded = {};\n      for (var _attr4 in serverData) {\n        if (_attr4 === 'ACL') {\n          decoded[_attr4] = new _ParseACL.default(serverData[_attr4]);\n        } else if (_attr4 !== 'objectId') {\n          decoded[_attr4] = (0, _decode.default)(serverData[_attr4]);\n          if (decoded[_attr4] instanceof _ParseRelation.default) {\n            decoded[_attr4]._ensureParentAndKey(this, _attr4);\n          }\n        }\n      }\n      if (decoded.createdAt && typeof decoded.createdAt === 'string') {\n        decoded.createdAt = (0, _parseDate.default)(decoded.createdAt);\n      }\n      if (decoded.updatedAt && typeof decoded.updatedAt === 'string') {\n        decoded.updatedAt = (0, _parseDate.default)(decoded.updatedAt);\n      }\n      if (!decoded.updatedAt && decoded.createdAt) {\n        decoded.updatedAt = decoded.createdAt;\n      }\n      stateController.commitServerChanges(this._getStateIdentifier(), decoded);\n    }\n  }, {\n    key: \"_setExisted\",\n    value: function (existed\n    /*: boolean*/) {\n      var stateController = _CoreManager.default.getObjectStateController();\n      var state = stateController.getState(this._getStateIdentifier());\n      if (state) {\n        state.existed = existed;\n      }\n    }\n  }, {\n    key: \"_migrateId\",\n    value: function (serverId\n    /*: string*/) {\n      if (this._localId && serverId) {\n        if (singleInstance) {\n          var stateController = _CoreManager.default.getObjectStateController();\n          var oldState = stateController.removeState(this._getStateIdentifier());\n          this.id = serverId;\n          delete this._localId;\n          if (oldState) {\n            stateController.initializeState(this._getStateIdentifier(), oldState);\n          }\n        } else {\n          this.id = serverId;\n          delete this._localId;\n        }\n      }\n    }\n  }, {\n    key: \"_handleSaveResponse\",\n    value: function (response\n    /*: AttributeMap*/, status\n    /*: number*/) {\n      var changes = {};\n      var stateController = _CoreManager.default.getObjectStateController();\n      var pending = stateController.popPendingState(this._getStateIdentifier());\n      for (var attr in pending) {\n        if (pending[attr] instanceof _ParseOp.RelationOp) {\n          changes[attr] = pending[attr].applyTo(undefined, this, attr);\n        } else if (!(attr in response)) {\n          // Only SetOps and UnsetOps should not come back with results\n          changes[attr] = pending[attr].applyTo(undefined);\n        }\n      }\n      for (attr in response) {\n        if ((attr === 'createdAt' || attr === 'updatedAt') && typeof response[attr] === 'string') {\n          changes[attr] = (0, _parseDate.default)(response[attr]);\n        } else if (attr === 'ACL') {\n          changes[attr] = new _ParseACL.default(response[attr]);\n        } else if (attr !== 'objectId') {\n          var val = (0, _decode.default)(response[attr]);\n          if (val && (0, _getPrototypeOf.default)(val) === Object.prototype) {\n            changes[attr] = _objectSpread(_objectSpread({}, this.attributes[attr]), val);\n          } else {\n            changes[attr] = val;\n          }\n          if (changes[attr] instanceof _ParseOp.UnsetOp) {\n            changes[attr] = undefined;\n          }\n        }\n      }\n      if (changes.createdAt && !changes.updatedAt) {\n        changes.updatedAt = changes.createdAt;\n      }\n      this._migrateId(response.objectId);\n      if (status !== 201) {\n        this._setExisted(true);\n      }\n      stateController.commitServerChanges(this._getStateIdentifier(), changes);\n    }\n  }, {\n    key: \"_handleSaveError\",\n    value: function () {\n      var stateController = _CoreManager.default.getObjectStateController();\n      stateController.mergeFirstPendingState(this._getStateIdentifier());\n    }\n  }, {\n    key: \"initialize\",\n    value: /** Public methods **/\n    function () {// NOOP\n    }\n    /**\n     * Returns a JSON version of the object suitable for saving to Parse.\n     *\n     * @param seen\n     * @param offline\n     * @returns {object}\n     */\n  }, {\n    key: \"toJSON\",\n    value: function (seen\n    /*: Array<any> | void*/, offline\n    /*:: ?: boolean*/) /*: AttributeMap*/\n    {\n      var seenEntry = this.id ? this.className + ':' + this.id : this;\n      seen = seen || [seenEntry];\n      var json = {};\n      var attrs = this.attributes;\n      for (var _attr5 in attrs) {\n        if ((_attr5 === 'createdAt' || _attr5 === 'updatedAt') && attrs[_attr5].toJSON) {\n          json[_attr5] = attrs[_attr5].toJSON();\n        } else {\n          json[_attr5] = (0, _encode.default)(attrs[_attr5], false, false, seen, offline);\n        }\n      }\n      var pending = this._getPendingOps();\n      for (var _attr6 in pending[0]) {\n        json[_attr6] = pending[0][_attr6].toJSON(offline);\n      }\n      if (this.id) {\n        json.objectId = this.id;\n      }\n      return json;\n    }\n    /**\n     * Determines whether this ParseObject is equal to another ParseObject\n     *\n     * @param {object} other - An other object ot compare\n     * @returns {boolean}\n     */\n  }, {\n    key: \"equals\",\n    value: function (other\n    /*: mixed*/) /*: boolean*/\n    {\n      if (this === other) {\n        return true;\n      }\n      return other instanceof ParseObject && this.className === other.className && this.id === other.id && typeof this.id !== 'undefined';\n    }\n    /**\n     * Returns true if this object has been modified since its last\n     * save/refresh.  If an attribute is specified, it returns true only if that\n     * particular attribute has been modified since the last save/refresh.\n     *\n     * @param {string} attr An attribute name (optional).\n     * @returns {boolean}\n     */\n  }, {\n    key: \"dirty\",\n    value: function (attr\n    /*:: ?: string*/) /*: boolean*/\n    {\n      if (!this.id) {\n        return true;\n      }\n      var pendingOps = this._getPendingOps();\n      var dirtyObjects = this._getDirtyObjectAttributes();\n      if (attr) {\n        if (dirtyObjects.hasOwnProperty(attr)) {\n          return true;\n        }\n        for (var i = 0; i < pendingOps.length; i++) {\n          if (pendingOps[i].hasOwnProperty(attr)) {\n            return true;\n          }\n        }\n        return false;\n      }\n      if ((0, _keys.default)(pendingOps[0]).length !== 0) {\n        return true;\n      }\n      if ((0, _keys.default)(dirtyObjects).length !== 0) {\n        return true;\n      }\n      return false;\n    }\n    /**\n     * Returns an array of keys that have been modified since last save/refresh\n     *\n     * @returns {string[]}\n     */\n  }, {\n    key: \"dirtyKeys\",\n    value: function () /*: Array<string>*/\n    {\n      var pendingOps = this._getPendingOps();\n      var keys = {};\n      for (var i = 0; i < pendingOps.length; i++) {\n        for (var _attr7 in pendingOps[i]) {\n          keys[_attr7] = true;\n        }\n      }\n      var dirtyObjects = this._getDirtyObjectAttributes();\n      for (var _attr8 in dirtyObjects) {\n        keys[_attr8] = true;\n      }\n      return (0, _keys.default)(keys);\n    }\n    /**\n     * Returns true if the object has been fetched.\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isDataAvailable\",\n    value: function () /*: boolean*/\n    {\n      var serverData = this._getServerData();\n      return !!(0, _keys.default)(serverData).length;\n    }\n    /**\n     * Gets a Pointer referencing this Object.\n     *\n     * @returns {Pointer}\n     */\n  }, {\n    key: \"toPointer\",\n    value: function () /*: Pointer*/\n    {\n      if (!this.id) {\n        throw new Error('Cannot create a pointer to an unsaved ParseObject');\n      }\n      return {\n        __type: 'Pointer',\n        className: this.className,\n        objectId: this.id\n      };\n    }\n    /**\n     * Gets a Pointer referencing this Object.\n     *\n     * @returns {Pointer}\n     */\n  }, {\n    key: \"toOfflinePointer\",\n    value: function () /*: Pointer*/\n    {\n      if (!this._localId) {\n        throw new Error('Cannot create a offline pointer to a saved ParseObject');\n      }\n      return {\n        __type: 'Object',\n        className: this.className,\n        _localId: this._localId\n      };\n    }\n    /**\n     * Gets the value of an attribute.\n     *\n     * @param {string} attr The string name of an attribute.\n     * @returns {*}\n     */\n  }, {\n    key: \"get\",\n    value: function (attr\n    /*: string*/) /*: mixed*/\n    {\n      return this.attributes[attr];\n    }\n    /**\n     * Gets a relation on the given class for the attribute.\n     *\n     * @param {string} attr The attribute to get the relation for.\n     * @returns {Parse.Relation}\n     */\n  }, {\n    key: \"relation\",\n    value: function (attr\n    /*: string*/) /*: ParseRelation*/\n    {\n      var value = this.get(attr);\n      if (value) {\n        if (!(value instanceof _ParseRelation.default)) {\n          throw new Error('Called relation() on non-relation field ' + attr);\n        }\n        value._ensureParentAndKey(this, attr);\n        return value;\n      }\n      return new _ParseRelation.default(this, attr);\n    }\n    /**\n     * Gets the HTML-escaped value of an attribute.\n     *\n     * @param {string} attr The string name of an attribute.\n     * @returns {string}\n     */\n  }, {\n    key: \"escape\",\n    value: function (attr\n    /*: string*/) /*: string*/\n    {\n      var val = this.attributes[attr];\n      if (val == null) {\n        return '';\n      }\n      if (typeof val !== 'string') {\n        if (typeof val.toString !== 'function') {\n          return '';\n        }\n        val = val.toString();\n      }\n      return (0, _escape2.default)(val);\n    }\n    /**\n     * Returns <code>true</code> if the attribute contains a value that is not\n     * null or undefined.\n     *\n     * @param {string} attr The string name of the attribute.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"has\",\n    value: function (attr\n    /*: string*/) /*: boolean*/\n    {\n      var attributes = this.attributes;\n      if (attributes.hasOwnProperty(attr)) {\n        return attributes[attr] != null;\n      }\n      return false;\n    }\n    /**\n     * Sets a hash of model attributes on the object.\n     *\n     * <p>You can call it with an object containing keys and values, with one\n     * key and value, or dot notation.  For example:<pre>\n     *   gameTurn.set({\n     *     player: player1,\n     *     diceRoll: 2\n     *   }, {\n     *     error: function(gameTurnAgain, error) {\n     *       // The set failed validation.\n     *     }\n     *   });\n     *\n     *   game.set(\"currentPlayer\", player2, {\n     *     error: function(gameTurnAgain, error) {\n     *       // The set failed validation.\n     *     }\n     *   });\n     *\n     *   game.set(\"finished\", true);</pre></p>\n     *\n     *   game.set(\"player.score\", 10);</pre></p>\n     *\n     * @param {(string|object)} key The key to set.\n     * @param {(string|object)} value The value to give it.\n     * @param {object} options A set of options for the set.\n     *     The only supported option is <code>error</code>.\n     * @returns {(ParseObject|boolean)} true if the set succeeded.\n     */\n  }, {\n    key: \"set\",\n    value: function (key\n    /*: mixed*/, value\n    /*: mixed*/, options\n    /*:: ?: mixed*/) /*: ParseObject | boolean*/\n    {\n      var changes = {};\n      var newOps = {};\n      if (key && (0, _typeof2.default)(key) === 'object') {\n        changes = key;\n        options = value;\n      } else if (typeof key === 'string') {\n        changes[key] = value;\n      } else {\n        return this;\n      }\n      options = options || {};\n      var readonly = [];\n      if (typeof this.constructor.readOnlyAttributes === 'function') {\n        readonly = (0, _concat.default)(readonly).call(readonly, this.constructor.readOnlyAttributes());\n      }\n      for (var k in changes) {\n        if (k === 'createdAt' || k === 'updatedAt') {\n          // This property is read-only, but for legacy reasons we silently\n          // ignore it\n          continue;\n        }\n        if ((0, _indexOf.default)(readonly).call(readonly, k) > -1) {\n          throw new Error('Cannot modify readonly attribute: ' + k);\n        }\n        if (options.unset) {\n          newOps[k] = new _ParseOp.UnsetOp();\n        } else if (changes[k] instanceof _ParseOp.Op) {\n          newOps[k] = changes[k];\n        } else if (changes[k] && (0, _typeof2.default)(changes[k]) === 'object' && typeof changes[k].__op === 'string') {\n          newOps[k] = (0, _ParseOp.opFromJSON)(changes[k]);\n        } else if (k === 'objectId' || k === 'id') {\n          if (typeof changes[k] === 'string') {\n            this.id = changes[k];\n          }\n        } else if (k === 'ACL' && (0, _typeof2.default)(changes[k]) === 'object' && !(changes[k] instanceof _ParseACL.default)) {\n          newOps[k] = new _ParseOp.SetOp(new _ParseACL.default(changes[k]));\n        } else if (changes[k] instanceof _ParseRelation.default) {\n          var relation = new _ParseRelation.default(this, k);\n          relation.targetClassName = changes[k].targetClassName;\n          newOps[k] = new _ParseOp.SetOp(relation);\n        } else {\n          newOps[k] = new _ParseOp.SetOp(changes[k]);\n        }\n      }\n      var currentAttributes = this.attributes; // Calculate new values\n\n      var newValues = {};\n      for (var _attr9 in newOps) {\n        if (newOps[_attr9] instanceof _ParseOp.RelationOp) {\n          newValues[_attr9] = newOps[_attr9].applyTo(currentAttributes[_attr9], this, _attr9);\n        } else if (!(newOps[_attr9] instanceof _ParseOp.UnsetOp)) {\n          newValues[_attr9] = newOps[_attr9].applyTo(currentAttributes[_attr9]);\n        }\n      } // Validate changes\n\n      if (!options.ignoreValidation) {\n        var validation = this.validate(newValues);\n        if (validation) {\n          if (typeof options.error === 'function') {\n            options.error(this, validation);\n          }\n          return false;\n        }\n      } // Consolidate Ops\n\n      var pendingOps = this._getPendingOps();\n      var last = pendingOps.length - 1;\n      var stateController = _CoreManager.default.getObjectStateController();\n      for (var _attr10 in newOps) {\n        var nextOp = newOps[_attr10].mergeWith(pendingOps[last][_attr10]);\n        stateController.setPendingOp(this._getStateIdentifier(), _attr10, nextOp);\n      }\n      return this;\n    }\n    /**\n     * Remove an attribute from the model. This is a noop if the attribute doesn't\n     * exist.\n     *\n     * @param {string} attr The string name of an attribute.\n     * @param options\n     * @returns {(ParseObject | boolean)}\n     */\n  }, {\n    key: \"unset\",\n    value: function (attr\n    /*: string*/, options\n    /*:: ?: { [opt: string]: mixed }*/) /*: ParseObject | boolean*/\n    {\n      options = options || {};\n      options.unset = true;\n      return this.set(attr, null, options);\n    }\n    /**\n     * Atomically increments the value of the given attribute the next time the\n     * object is saved. If no amount is specified, 1 is used by default.\n     *\n     * @param attr {String} The key.\n     * @param amount {Number} The amount to increment by (optional).\n     * @returns {(ParseObject|boolean)}\n     */\n  }, {\n    key: \"increment\",\n    value: function (attr\n    /*: string*/, amount\n    /*:: ?: number*/) /*: ParseObject | boolean*/\n    {\n      if (typeof amount === 'undefined') {\n        amount = 1;\n      }\n      if (typeof amount !== 'number') {\n        throw new Error('Cannot increment by a non-numeric amount.');\n      }\n      return this.set(attr, new _ParseOp.IncrementOp(amount));\n    }\n    /**\n     * Atomically decrements the value of the given attribute the next time the\n     * object is saved. If no amount is specified, 1 is used by default.\n     *\n     * @param attr {String} The key.\n     * @param amount {Number} The amount to decrement by (optional).\n     * @returns {(ParseObject | boolean)}\n     */\n  }, {\n    key: \"decrement\",\n    value: function (attr\n    /*: string*/, amount\n    /*:: ?: number*/) /*: ParseObject | boolean*/\n    {\n      if (typeof amount === 'undefined') {\n        amount = 1;\n      }\n      if (typeof amount !== 'number') {\n        throw new Error('Cannot decrement by a non-numeric amount.');\n      }\n      return this.set(attr, new _ParseOp.IncrementOp(amount * -1));\n    }\n    /**\n     * Atomically add an object to the end of the array associated with a given\n     * key.\n     *\n     * @param attr {String} The key.\n     * @param item {} The item to add.\n     * @returns {(ParseObject | boolean)}\n     */\n  }, {\n    key: \"add\",\n    value: function (attr\n    /*: string*/, item\n    /*: mixed*/) /*: ParseObject | boolean*/\n    {\n      return this.set(attr, new _ParseOp.AddOp([item]));\n    }\n    /**\n     * Atomically add the objects to the end of the array associated with a given\n     * key.\n     *\n     * @param attr {String} The key.\n     * @param items {Object[]} The items to add.\n     * @returns {(ParseObject | boolean)}\n     */\n  }, {\n    key: \"addAll\",\n    value: function (attr\n    /*: string*/, items\n    /*: Array<mixed>*/) /*: ParseObject | boolean*/\n    {\n      return this.set(attr, new _ParseOp.AddOp(items));\n    }\n    /**\n     * Atomically add an object to the array associated with a given key, only\n     * if it is not already present in the array. The position of the insert is\n     * not guaranteed.\n     *\n     * @param attr {String} The key.\n     * @param item {} The object to add.\n     * @returns {(ParseObject | boolean)}\n     */\n  }, {\n    key: \"addUnique\",\n    value: function (attr\n    /*: string*/, item\n    /*: mixed*/) /*: ParseObject | boolean*/\n    {\n      return this.set(attr, new _ParseOp.AddUniqueOp([item]));\n    }\n    /**\n     * Atomically add the objects to the array associated with a given key, only\n     * if it is not already present in the array. The position of the insert is\n     * not guaranteed.\n     *\n     * @param attr {String} The key.\n     * @param items {Object[]} The objects to add.\n     * @returns {(ParseObject | boolean)}\n     */\n  }, {\n    key: \"addAllUnique\",\n    value: function (attr\n    /*: string*/, items\n    /*: Array<mixed>*/) /*: ParseObject | boolean*/\n    {\n      return this.set(attr, new _ParseOp.AddUniqueOp(items));\n    }\n    /**\n     * Atomically remove all instances of an object from the array associated\n     * with a given key.\n     *\n     * @param attr {String} The key.\n     * @param item {} The object to remove.\n     * @returns {(ParseObject | boolean)}\n     */\n  }, {\n    key: \"remove\",\n    value: function (attr\n    /*: string*/, item\n    /*: mixed*/) /*: ParseObject | boolean*/\n    {\n      return this.set(attr, new _ParseOp.RemoveOp([item]));\n    }\n    /**\n     * Atomically remove all instances of the objects from the array associated\n     * with a given key.\n     *\n     * @param attr {String} The key.\n     * @param items {Object[]} The object to remove.\n     * @returns {(ParseObject | boolean)}\n     */\n  }, {\n    key: \"removeAll\",\n    value: function (attr\n    /*: string*/, items\n    /*: Array<mixed>*/) /*: ParseObject | boolean*/\n    {\n      return this.set(attr, new _ParseOp.RemoveOp(items));\n    }\n    /**\n     * Returns an instance of a subclass of Parse.Op describing what kind of\n     * modification has been performed on this field since the last time it was\n     * saved. For example, after calling object.increment(\"x\"), calling\n     * object.op(\"x\") would return an instance of Parse.Op.Increment.\n     *\n     * @param attr {String} The key.\n     * @returns {Parse.Op} The operation, or undefined if none.\n     */\n  }, {\n    key: \"op\",\n    value: function (attr\n    /*: string*/) /*: ?Op*/\n    {\n      var pending = this._getPendingOps();\n      for (var i = pending.length; i--;) {\n        if (pending[i][attr]) {\n          return pending[i][attr];\n        }\n      }\n    }\n    /**\n     * Creates a new model with identical attributes to this one.\n     *\n     * @returns {Parse.Object}\n     */\n  }, {\n    key: \"clone\",\n    value: function clone() /*: any*/\n    {\n      var clone = new this.constructor(this.className);\n      var attributes = this.attributes;\n      if (typeof this.constructor.readOnlyAttributes === 'function') {\n        var readonly = this.constructor.readOnlyAttributes() || []; // Attributes are frozen, so we have to rebuild an object,\n        // rather than delete readonly keys\n\n        var copy = {};\n        for (var a in attributes) {\n          if ((0, _indexOf.default)(readonly).call(readonly, a) < 0) {\n            copy[a] = attributes[a];\n          }\n        }\n        attributes = copy;\n      }\n      if (clone.set) {\n        clone.set(attributes);\n      }\n      return clone;\n    }\n    /**\n     * Creates a new instance of this object. Not to be confused with clone()\n     *\n     * @returns {Parse.Object}\n     */\n  }, {\n    key: \"newInstance\",\n    value: function () /*: any*/\n    {\n      var clone = new this.constructor(this.className);\n      clone.id = this.id;\n      if (singleInstance) {\n        // Just return an object with the right id\n        return clone;\n      }\n      var stateController = _CoreManager.default.getObjectStateController();\n      if (stateController) {\n        stateController.duplicateState(this._getStateIdentifier(), clone._getStateIdentifier());\n      }\n      return clone;\n    }\n    /**\n     * Returns true if this object has never been saved to Parse.\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isNew\",\n    value: function () /*: boolean*/\n    {\n      return !this.id;\n    }\n    /**\n     * Returns true if this object was created by the Parse server when the\n     * object might have already been there (e.g. in the case of a Facebook\n     * login)\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"existed\",\n    value: function () /*: boolean*/\n    {\n      if (!this.id) {\n        return false;\n      }\n      var stateController = _CoreManager.default.getObjectStateController();\n      var state = stateController.getState(this._getStateIdentifier());\n      if (state) {\n        return state.existed;\n      }\n      return false;\n    }\n    /**\n     * Returns true if this object exists on the Server\n     *\n     * @param {object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     * @returns {Promise<boolean>} A boolean promise that is fulfilled if object exists.\n     */\n  }, {\n    key: \"exists\",\n    value: function () {\n      var _exists = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(options\n      /*:: ?: RequestOptions*/) {\n        var query;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.id) {\n                  _context.next = 2;\n                  break;\n                }\n                return _context.abrupt(\"return\", false);\n              case 2:\n                _context.prev = 2;\n                query = new _ParseQuery.default(this.className);\n                _context.next = 6;\n                return query.get(this.id, options);\n              case 6:\n                return _context.abrupt(\"return\", true);\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](2);\n                if (!(_context.t0.code === _ParseError.default.OBJECT_NOT_FOUND)) {\n                  _context.next = 13;\n                  break;\n                }\n                return _context.abrupt(\"return\", false);\n              case 13:\n                throw _context.t0;\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 9]]);\n      }));\n      function exists(_x) {\n        return _exists.apply(this, arguments);\n      }\n      return exists;\n    }()\n    /**\n     * Checks if the model is currently in a valid state.\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isValid\",\n    value: function isValid() /*: boolean*/\n    {\n      return !this.validate(this.attributes);\n    }\n    /**\n     * You should not call this function directly unless you subclass\n     * <code>Parse.Object</code>, in which case you can override this method\n     * to provide additional validation on <code>set</code> and\n     * <code>save</code>.  Your implementation should return\n     *\n     * @param {object} attrs The current data to validate.\n     * @returns {Parse.Error|boolean} False if the data is valid.  An error object otherwise.\n     * @see Parse.Object#set\n     */\n  }, {\n    key: \"validate\",\n    value: function validate(attrs\n    /*: AttributeMap*/) /*: ParseError | boolean*/\n    {\n      if (attrs.hasOwnProperty('ACL') && !(attrs.ACL instanceof _ParseACL.default)) {\n        return new _ParseError.default(_ParseError.default.OTHER_CAUSE, 'ACL must be a Parse ACL.');\n      }\n      for (var _key in attrs) {\n        if (!/^[A-Za-z][0-9A-Za-z_.]*$/.test(_key)) {\n          return new _ParseError.default(_ParseError.default.INVALID_KEY_NAME);\n        }\n      }\n      return false;\n    }\n    /**\n     * Returns the ACL for this object.\n     *\n     * @returns {Parse.ACL} An instance of Parse.ACL.\n     * @see Parse.Object#get\n     */\n  }, {\n    key: \"getACL\",\n    value: function getACL() /*: ?ParseACL*/\n    {\n      var acl = this.get('ACL');\n      if (acl instanceof _ParseACL.default) {\n        return acl;\n      }\n      return null;\n    }\n    /**\n     * Sets the ACL to be used for this object.\n     *\n     * @param {Parse.ACL} acl An instance of Parse.ACL.\n     * @param {object} options\n     * @returns {(ParseObject | boolean)} Whether the set passed validation.\n     * @see Parse.Object#set\n     */\n  }, {\n    key: \"setACL\",\n    value: function setACL(acl\n    /*: ParseACL*/, options\n    /*:: ?: mixed*/) /*: ParseObject | boolean*/\n    {\n      return this.set('ACL', acl, options);\n    }\n    /**\n     * Clears any (or specific) changes to this object made since the last call to save()\n     *\n     * @param {string} [keys] - specify which fields to revert\n     */\n  }, {\n    key: \"revert\",\n    value: function revert() /*: void*/\n    {\n      var keysToRevert;\n      for (var _len = arguments.length, keys = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n        keys[_key2] = arguments[_key2];\n      }\n      if (keys.length) {\n        keysToRevert = [];\n        var _iterator = _createForOfIteratorHelper(keys),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _key3 = _step.value;\n            if (typeof _key3 === 'string') {\n              keysToRevert.push(_key3);\n            } else {\n              throw new Error('Parse.Object#revert expects either no, or a list of string, arguments.');\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      this._clearPendingOps(keysToRevert);\n    }\n    /**\n     * Clears all attributes on a model\n     *\n     * @returns {(ParseObject | boolean)}\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() /*: ParseObject | boolean*/\n    {\n      var attributes = this.attributes;\n      var erasable = {};\n      var readonly = ['createdAt', 'updatedAt'];\n      if (typeof this.constructor.readOnlyAttributes === 'function') {\n        readonly = (0, _concat.default)(readonly).call(readonly, this.constructor.readOnlyAttributes());\n      }\n      for (var _attr11 in attributes) {\n        if ((0, _indexOf.default)(readonly).call(readonly, _attr11) < 0) {\n          erasable[_attr11] = true;\n        }\n      }\n      return this.set(erasable, {\n        unset: true\n      });\n    }\n    /**\n     * Fetch the model from the server. If the server's representation of the\n     * model differs from its current attributes, they will be overriden.\n     *\n     * @param {object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     *   <li>include: The name(s) of the key(s) to include. Can be a string, an array of strings,\n     *       or an array of array of strings.\n     *   <li>context: A dictionary that is accessible in Cloud Code `beforeFind` trigger.\n     * </ul>\n     * @returns {Promise} A promise that is fulfilled when the fetch\n     *     completes.\n     */\n  }, {\n    key: \"fetch\",\n    value: function fetch(options\n    /*: RequestOptions*/) /*: Promise*/\n    {\n      options = options || {};\n      var fetchOptions = {};\n      if (options.hasOwnProperty('useMasterKey')) {\n        fetchOptions.useMasterKey = options.useMasterKey;\n      }\n      if (options.hasOwnProperty('sessionToken')) {\n        fetchOptions.sessionToken = options.sessionToken;\n      }\n      if (options.hasOwnProperty('context') && (0, _typeof2.default)(options.context) === 'object') {\n        fetchOptions.context = options.context;\n      }\n      if (options.hasOwnProperty('include')) {\n        fetchOptions.include = [];\n        if ((0, _isArray.default)(options.include)) {\n          var _context2;\n          (0, _forEach.default)(_context2 = options.include).call(_context2, function (key) {\n            if ((0, _isArray.default)(key)) {\n              var _context3;\n              fetchOptions.include = (0, _concat.default)(_context3 = fetchOptions.include).call(_context3, key);\n            } else {\n              fetchOptions.include.push(key);\n            }\n          });\n        } else {\n          fetchOptions.include.push(options.include);\n        }\n      }\n      var controller = _CoreManager.default.getObjectController();\n      return controller.fetch(this, true, fetchOptions);\n    }\n    /**\n     * Fetch the model from the server. If the server's representation of the\n     * model differs from its current attributes, they will be overriden.\n     *\n     * Includes nested Parse.Objects for the provided key. You can use dot\n     * notation to specify which fields in the included object are also fetched.\n     *\n     * @param {string | Array<string | Array<string>>} keys The name(s) of the key(s) to include.\n     * @param {object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     * @returns {Promise} A promise that is fulfilled when the fetch\n     *     completes.\n     */\n  }, {\n    key: \"fetchWithInclude\",\n    value: function fetchWithInclude(keys\n    /*: String | Array<string | Array<string>>*/, options\n    /*: RequestOptions*/) /*: Promise*/\n    {\n      options = options || {};\n      options.include = keys;\n      return this.fetch(options);\n    }\n    /**\n     * Saves this object to the server at some unspecified time in the future,\n     * even if Parse is currently inaccessible.\n     *\n     * Use this when you may not have a solid network connection, and don't need to know when the save completes.\n     * If there is some problem with the object such that it can't be saved, it will be silently discarded.\n     *\n     * Objects saved with this method will be stored locally in an on-disk cache until they can be delivered to Parse.\n     * They will be sent immediately if possible. Otherwise, they will be sent the next time a network connection is\n     * available. Objects saved this way will persist even after the app is closed, in which case they will be sent the\n     * next time the app is opened.\n     *\n     * @param {object} [options]\n     * Used to pass option parameters to method if arg1 and arg2 were both passed as strings.\n     * Valid options are:\n     * <ul>\n     * <li>sessionToken: A valid session token, used for making a request on\n     * behalf of a specific user.\n     * <li>cascadeSave: If `false`, nested objects will not be saved (default is `true`).\n     * <li>context: A dictionary that is accessible in Cloud Code `beforeSave` and `afterSave` triggers.\n     * </ul>\n     * @returns {Promise} A promise that is fulfilled when the save\n     * completes.\n     */\n  }, {\n    key: \"saveEventually\",\n    value: function () {\n      var _saveEventually = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(options\n      /*: SaveOptions*/) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return this.save(null, options);\n              case 3:\n                _context4.next = 11;\n                break;\n              case 5:\n                _context4.prev = 5;\n                _context4.t0 = _context4[\"catch\"](0);\n                if (!(_context4.t0.message === 'XMLHttpRequest failed: \"Unable to connect to the Parse API\"')) {\n                  _context4.next = 11;\n                  break;\n                }\n                _context4.next = 10;\n                return _EventuallyQueue.default.save(this, options);\n              case 10:\n                _EventuallyQueue.default.poll();\n              case 11:\n                return _context4.abrupt(\"return\", this);\n              case 12:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee2, this, [[0, 5]]);\n      }));\n      function saveEventually(_x2) {\n        return _saveEventually.apply(this, arguments);\n      }\n      return saveEventually;\n    }()\n    /**\n     * Set a hash of model attributes, and save the model to the server.\n     * updatedAt will be updated when the request returns.\n     * You can either call it as:<pre>\n     * object.save();</pre>\n     * or<pre>\n     * object.save(attrs);</pre>\n     * or<pre>\n     * object.save(null, options);</pre>\n     * or<pre>\n     * object.save(attrs, options);</pre>\n     * or<pre>\n     * object.save(key, value);</pre>\n     * or<pre>\n     * object.save(key, value, options);</pre>\n     *\n     * Example 1: <pre>\n     * gameTurn.save({\n     * player: \"Jake Cutter\",\n     * diceRoll: 2\n     * }).then(function(gameTurnAgain) {\n     * // The save was successful.\n     * }, function(error) {\n     * // The save failed.  Error is an instance of Parse.Error.\n     * });</pre>\n     *\n     * Example 2: <pre>\n     * gameTurn.save(\"player\", \"Jake Cutter\");</pre>\n     *\n     * @param {string | object | null} [arg1]\n     * Valid options are:<ul>\n     * <li>`Object` - Key/value pairs to update on the object.</li>\n     * <li>`String` Key - Key of attribute to update (requires arg2 to also be string)</li>\n     * <li>`null` - Passing null for arg1 allows you to save the object with options passed in arg2.</li>\n     * </ul>\n     * @param {string | object} [arg2]\n     * <ul>\n     * <li>`String` Value - If arg1 was passed as a key, arg2 is the value that should be set on that key.</li>\n     * <li>`Object` Options - Valid options are:\n     * <ul>\n     * <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     * be used for this request.\n     * <li>sessionToken: A valid session token, used for making a request on\n     * behalf of a specific user.\n     * <li>cascadeSave: If `false`, nested objects will not be saved (default is `true`).\n     * <li>context: A dictionary that is accessible in Cloud Code `beforeSave` and `afterSave` triggers.\n     * </ul>\n     * </li>\n     * </ul>\n     * @param {object} [arg3]\n     * Used to pass option parameters to method if arg1 and arg2 were both passed as strings.\n     * Valid options are:\n     * <ul>\n     * <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     * be used for this request.\n     * <li>sessionToken: A valid session token, used for making a request on\n     * behalf of a specific user.\n     * <li>cascadeSave: If `false`, nested objects will not be saved (default is `true`).\n     * <li>context: A dictionary that is accessible in Cloud Code `beforeSave` and `afterSave` triggers.\n     * </ul>\n     * @returns {Promise} A promise that is fulfilled when the save\n     * completes.\n     */\n  }, {\n    key: \"save\",\n    value: function save(arg1\n    /*: ?string | { [attr: string]: mixed }*/, arg2\n    /*: SaveOptions | mixed*/, arg3\n    /*:: ?: SaveOptions*/) /*: Promise*/\n    {\n      var _this = this;\n      var attrs;\n      var options;\n      if ((0, _typeof2.default)(arg1) === 'object' || typeof arg1 === 'undefined') {\n        attrs = arg1;\n        if ((0, _typeof2.default)(arg2) === 'object') {\n          options = arg2;\n        }\n      } else {\n        attrs = {};\n        attrs[arg1] = arg2;\n        options = arg3;\n      }\n      if (attrs) {\n        var validation = this.validate(attrs);\n        if (validation) {\n          return _promise.default.reject(validation);\n        }\n        this.set(attrs, options);\n      }\n      options = options || {};\n      var saveOptions = {};\n      if (options.hasOwnProperty('useMasterKey')) {\n        saveOptions.useMasterKey = !!options.useMasterKey;\n      }\n      if (options.hasOwnProperty('sessionToken') && typeof options.sessionToken === 'string') {\n        saveOptions.sessionToken = options.sessionToken;\n      }\n      if (options.hasOwnProperty('installationId') && typeof options.installationId === 'string') {\n        saveOptions.installationId = options.installationId;\n      }\n      if (options.hasOwnProperty('context') && (0, _typeof2.default)(options.context) === 'object') {\n        saveOptions.context = options.context;\n      }\n      var controller = _CoreManager.default.getObjectController();\n      var unsaved = options.cascadeSave !== false ? (0, _unsavedChildren.default)(this) : null;\n      return controller.save(unsaved, saveOptions).then(function () {\n        return controller.save(_this, saveOptions);\n      });\n    }\n    /**\n     * Deletes this object from the server at some unspecified time in the future,\n     * even if Parse is currently inaccessible.\n     *\n     * Use this when you may not have a solid network connection,\n     * and don't need to know when the delete completes. If there is some problem with the object\n     * such that it can't be deleted, the request will be silently discarded.\n     *\n     * Delete instructions made with this method will be stored locally in an on-disk cache until they can be transmitted\n     * to Parse. They will be sent immediately if possible. Otherwise, they will be sent the next time a network connection\n     * is available. Delete requests will persist even after the app is closed, in which case they will be sent the\n     * next time the app is opened.\n     *\n     * @param {object} [options]\n     * Valid options are:<ul>\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     *   <li>context: A dictionary that is accessible in Cloud Code `beforeDelete` and `afterDelete` triggers.\n     * </ul>\n     * @returns {Promise} A promise that is fulfilled when the destroy\n     *     completes.\n     */\n  }, {\n    key: \"destroyEventually\",\n    value: function () {\n      var _destroyEventually = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(options\n      /*: RequestOptions*/) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return this.destroy(options);\n              case 3:\n                _context5.next = 11;\n                break;\n              case 5:\n                _context5.prev = 5;\n                _context5.t0 = _context5[\"catch\"](0);\n                if (!(_context5.t0.message === 'XMLHttpRequest failed: \"Unable to connect to the Parse API\"')) {\n                  _context5.next = 11;\n                  break;\n                }\n                _context5.next = 10;\n                return _EventuallyQueue.default.destroy(this, options);\n              case 10:\n                _EventuallyQueue.default.poll();\n              case 11:\n                return _context5.abrupt(\"return\", this);\n              case 12:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee3, this, [[0, 5]]);\n      }));\n      function destroyEventually(_x3) {\n        return _destroyEventually.apply(this, arguments);\n      }\n      return destroyEventually;\n    }()\n    /**\n     * Destroy this model on the server if it was already persisted.\n     *\n     * @param {object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     *   <li>context: A dictionary that is accessible in Cloud Code `beforeDelete` and `afterDelete` triggers.\n     * </ul>\n     * @returns {Promise} A promise that is fulfilled when the destroy\n     *     completes.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy(options\n    /*: RequestOptions*/) /*: Promise*/\n    {\n      options = options || {};\n      var destroyOptions = {};\n      if (options.hasOwnProperty('useMasterKey')) {\n        destroyOptions.useMasterKey = options.useMasterKey;\n      }\n      if (options.hasOwnProperty('sessionToken')) {\n        destroyOptions.sessionToken = options.sessionToken;\n      }\n      if (options.hasOwnProperty('context') && (0, _typeof2.default)(options.context) === 'object') {\n        destroyOptions.context = options.context;\n      }\n      if (!this.id) {\n        return _promise.default.resolve();\n      }\n      return _CoreManager.default.getObjectController().destroy(this, destroyOptions);\n    }\n    /**\n     * Asynchronously stores the object and every object it points to in the local datastore,\n     * recursively, using a default pin name: _default.\n     *\n     * If those other objects have not been fetched from Parse, they will not be stored.\n     * However, if they have changed data, all the changes will be retained.\n     *\n     * <pre>\n     * await object.pin();\n     * </pre>\n     *\n     * To retrieve object:\n     * <code>query.fromLocalDatastore()</code> or <code>query.fromPin()</code>\n     *\n     * @returns {Promise} A promise that is fulfilled when the pin completes.\n     */\n  }, {\n    key: \"pin\",\n    value: function pin() /*: Promise<void>*/\n    {\n      return ParseObject.pinAllWithName(_LocalDatastoreUtils.DEFAULT_PIN, [this]);\n    }\n    /**\n     * Asynchronously removes the object and every object it points to in the local datastore,\n     * recursively, using a default pin name: _default.\n     *\n     * <pre>\n     * await object.unPin();\n     * </pre>\n     *\n     * @returns {Promise} A promise that is fulfilled when the unPin completes.\n     */\n  }, {\n    key: \"unPin\",\n    value: function unPin() /*: Promise<void>*/\n    {\n      return ParseObject.unPinAllWithName(_LocalDatastoreUtils.DEFAULT_PIN, [this]);\n    }\n    /**\n     * Asynchronously returns if the object is pinned\n     *\n     * <pre>\n     * const isPinned = await object.isPinned();\n     * </pre>\n     *\n     * @returns {Promise<boolean>} A boolean promise that is fulfilled if object is pinned.\n     */\n  }, {\n    key: \"isPinned\",\n    value: function () {\n      var _isPinned = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var localDatastore, objectKey, pin;\n        return _regeneratorRuntime().wrap(function _callee4$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                localDatastore = _CoreManager.default.getLocalDatastore();\n                if (localDatastore.isEnabled) {\n                  _context6.next = 3;\n                  break;\n                }\n                return _context6.abrupt(\"return\", _promise.default.reject('Parse.enableLocalDatastore() must be called first'));\n              case 3:\n                objectKey = localDatastore.getKeyForObject(this);\n                _context6.next = 6;\n                return localDatastore.fromPinWithName(objectKey);\n              case 6:\n                pin = _context6.sent;\n                return _context6.abrupt(\"return\", pin.length > 0);\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function isPinned() {\n        return _isPinned.apply(this, arguments);\n      }\n      return isPinned;\n    }()\n    /**\n     * Asynchronously stores the objects and every object they point to in the local datastore, recursively.\n     *\n     * If those other objects have not been fetched from Parse, they will not be stored.\n     * However, if they have changed data, all the changes will be retained.\n     *\n     * <pre>\n     * await object.pinWithName(name);\n     * </pre>\n     *\n     * To retrieve object:\n     * <code>query.fromLocalDatastore()</code> or <code>query.fromPinWithName(name)</code>\n     *\n     * @param {string} name Name of Pin.\n     * @returns {Promise} A promise that is fulfilled when the pin completes.\n     */\n  }, {\n    key: \"pinWithName\",\n    value: function pinWithName(name\n    /*: string*/) /*: Promise<void>*/\n    {\n      return ParseObject.pinAllWithName(name, [this]);\n    }\n    /**\n     * Asynchronously removes the object and every object it points to in the local datastore, recursively.\n     *\n     * <pre>\n     * await object.unPinWithName(name);\n     * </pre>\n     *\n     * @param {string} name Name of Pin.\n     * @returns {Promise} A promise that is fulfilled when the unPin completes.\n     */\n  }, {\n    key: \"unPinWithName\",\n    value: function unPinWithName(name\n    /*: string*/) /*: Promise<void>*/\n    {\n      return ParseObject.unPinAllWithName(name, [this]);\n    }\n    /**\n     * Asynchronously loads data from the local datastore into this object.\n     *\n     * <pre>\n     * await object.fetchFromLocalDatastore();\n     * </pre>\n     *\n     * You can create an unfetched pointer with <code>Parse.Object.createWithoutData()</code>\n     * and then call <code>fetchFromLocalDatastore()</code> on it.\n     *\n     * @returns {Promise} A promise that is fulfilled when the fetch completes.\n     */\n  }, {\n    key: \"fetchFromLocalDatastore\",\n    value: function () {\n      var _fetchFromLocalDatastore = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var localDatastore, objectKey, pinned, result;\n        return _regeneratorRuntime().wrap(function _callee5$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                localDatastore = _CoreManager.default.getLocalDatastore();\n                if (localDatastore.isEnabled) {\n                  _context7.next = 3;\n                  break;\n                }\n                throw new Error('Parse.enableLocalDatastore() must be called first');\n              case 3:\n                objectKey = localDatastore.getKeyForObject(this);\n                _context7.next = 6;\n                return localDatastore._serializeObject(objectKey);\n              case 6:\n                pinned = _context7.sent;\n                if (pinned) {\n                  _context7.next = 9;\n                  break;\n                }\n                throw new Error('Cannot fetch an unsaved ParseObject');\n              case 9:\n                result = ParseObject.fromJSON(pinned);\n                this._finishFetch(result.toJSON());\n                return _context7.abrupt(\"return\", this);\n              case 12:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n      function fetchFromLocalDatastore() {\n        return _fetchFromLocalDatastore.apply(this, arguments);\n      }\n      return fetchFromLocalDatastore;\n    }()\n    /** Static methods **/\n  }], [{\n    key: \"_getClassMap\",\n    value: function _getClassMap() {\n      return classMap;\n    }\n  }, {\n    key: \"_clearAllState\",\n    value: function _clearAllState() {\n      var stateController = _CoreManager.default.getObjectStateController();\n      stateController.clearAllState();\n    }\n    /**\n     * Fetches the given list of Parse.Object.\n     * If any error is encountered, stops and calls the error handler.\n     *\n     * <pre>\n     *   Parse.Object.fetchAll([object1, object2, ...])\n     *    .then((list) => {\n     *      // All the objects were fetched.\n     *    }, (error) => {\n     *      // An error occurred while fetching one of the objects.\n     *    });\n     * </pre>\n     *\n     * @param {Array} list A list of <code>Parse.Object</code>.\n     * @param {object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     *   <li>include: The name(s) of the key(s) to include. Can be a string, an array of strings,\n     *       or an array of array of strings.\n     * </ul>\n     * @static\n     * @returns {Parse.Object[]}\n     */\n  }, {\n    key: \"fetchAll\",\n    value: function fetchAll(list\n    /*: Array<ParseObject>*/) {\n      var options\n      /*: RequestOptions*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var queryOptions = {};\n      if (options.hasOwnProperty('useMasterKey')) {\n        queryOptions.useMasterKey = options.useMasterKey;\n      }\n      if (options.hasOwnProperty('sessionToken')) {\n        queryOptions.sessionToken = options.sessionToken;\n      }\n      if (options.hasOwnProperty('include')) {\n        queryOptions.include = ParseObject.handleIncludeOptions(options);\n      }\n      return _CoreManager.default.getObjectController().fetch(list, true, queryOptions);\n    }\n    /**\n     * Fetches the given list of Parse.Object.\n     *\n     * Includes nested Parse.Objects for the provided key. You can use dot\n     * notation to specify which fields in the included object are also fetched.\n     *\n     * If any error is encountered, stops and calls the error handler.\n     *\n     * <pre>\n     *   Parse.Object.fetchAllWithInclude([object1, object2, ...], [pointer1, pointer2, ...])\n     *    .then((list) => {\n     *      // All the objects were fetched.\n     *    }, (error) => {\n     *      // An error occurred while fetching one of the objects.\n     *    });\n     * </pre>\n     *\n     * @param {Array} list A list of <code>Parse.Object</code>.\n     * @param {string | Array<string | Array<string>>} keys The name(s) of the key(s) to include.\n     * @param {object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     * @static\n     * @returns {Parse.Object[]}\n     */\n  }, {\n    key: \"fetchAllWithInclude\",\n    value: function fetchAllWithInclude(list\n    /*: Array<ParseObject>*/, keys\n    /*: String | Array<string | Array<string>>*/, options\n    /*: RequestOptions*/) {\n      options = options || {};\n      options.include = keys;\n      return ParseObject.fetchAll(list, options);\n    }\n    /**\n     * Fetches the given list of Parse.Object if needed.\n     * If any error is encountered, stops and calls the error handler.\n     *\n     * Includes nested Parse.Objects for the provided key. You can use dot\n     * notation to specify which fields in the included object are also fetched.\n     *\n     * If any error is encountered, stops and calls the error handler.\n     *\n     * <pre>\n     *   Parse.Object.fetchAllIfNeededWithInclude([object1, object2, ...], [pointer1, pointer2, ...])\n     *    .then((list) => {\n     *      // All the objects were fetched.\n     *    }, (error) => {\n     *      // An error occurred while fetching one of the objects.\n     *    });\n     * </pre>\n     *\n     * @param {Array} list A list of <code>Parse.Object</code>.\n     * @param {string | Array<string | Array<string>>} keys The name(s) of the key(s) to include.\n     * @param {object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     * @static\n     * @returns {Parse.Object[]}\n     */\n  }, {\n    key: \"fetchAllIfNeededWithInclude\",\n    value: function fetchAllIfNeededWithInclude(list\n    /*: Array<ParseObject>*/, keys\n    /*: String | Array<string | Array<string>>*/, options\n    /*: RequestOptions*/) {\n      options = options || {};\n      options.include = keys;\n      return ParseObject.fetchAllIfNeeded(list, options);\n    }\n    /**\n     * Fetches the given list of Parse.Object if needed.\n     * If any error is encountered, stops and calls the error handler.\n     *\n     * <pre>\n     *   Parse.Object.fetchAllIfNeeded([object1, ...])\n     *    .then((list) => {\n     *      // Objects were fetched and updated.\n     *    }, (error) => {\n     *      // An error occurred while fetching one of the objects.\n     *    });\n     * </pre>\n     *\n     * @param {Array} list A list of <code>Parse.Object</code>.\n     * @param {object} options\n     * @static\n     * @returns {Parse.Object[]}\n     */\n  }, {\n    key: \"fetchAllIfNeeded\",\n    value: function fetchAllIfNeeded(list\n    /*: Array<ParseObject>*/, options) {\n      options = options || {};\n      var queryOptions = {};\n      if (options.hasOwnProperty('useMasterKey')) {\n        queryOptions.useMasterKey = options.useMasterKey;\n      }\n      if (options.hasOwnProperty('sessionToken')) {\n        queryOptions.sessionToken = options.sessionToken;\n      }\n      if (options.hasOwnProperty('include')) {\n        queryOptions.include = ParseObject.handleIncludeOptions(options);\n      }\n      return _CoreManager.default.getObjectController().fetch(list, false, queryOptions);\n    }\n  }, {\n    key: \"handleIncludeOptions\",\n    value: function handleIncludeOptions(options) {\n      var include = [];\n      if ((0, _isArray.default)(options.include)) {\n        var _context8;\n        (0, _forEach.default)(_context8 = options.include).call(_context8, function (key) {\n          if ((0, _isArray.default)(key)) {\n            include = (0, _concat.default)(include).call(include, key);\n          } else {\n            include.push(key);\n          }\n        });\n      } else {\n        include.push(options.include);\n      }\n      return include;\n    }\n    /**\n     * Destroy the given list of models on the server if it was already persisted.\n     *\n     * <p>Unlike saveAll, if an error occurs while deleting an individual model,\n     * this method will continue trying to delete the rest of the models if\n     * possible, except in the case of a fatal error like a connection error.\n     *\n     * <p>In particular, the Parse.Error object returned in the case of error may\n     * be one of two types:\n     *\n     * <ul>\n     * <li>A Parse.Error.AGGREGATE_ERROR. This object's \"errors\" property is an\n     * array of other Parse.Error objects. Each error object in this array\n     * has an \"object\" property that references the object that could not be\n     * deleted (for instance, because that object could not be found).</li>\n     * <li>A non-aggregate Parse.Error. This indicates a serious error that\n     * caused the delete operation to be aborted partway through (for\n     * instance, a connection failure in the middle of the delete).</li>\n     * </ul>\n     *\n     * <pre>\n     * Parse.Object.destroyAll([object1, object2, ...])\n     * .then((list) => {\n     * // All the objects were deleted.\n     * }, (error) => {\n     * // An error occurred while deleting one or more of the objects.\n     * // If this is an aggregate error, then we can inspect each error\n     * // object individually to determine the reason why a particular\n     * // object was not deleted.\n     * if (error.code === Parse.Error.AGGREGATE_ERROR) {\n     * for (var i = 0; i < error.errors.length; i++) {\n     * console.log(\"Couldn't delete \" + error.errors[i].object.id +\n     * \"due to \" + error.errors[i].message);\n     * }\n     * } else {\n     * console.log(\"Delete aborted because of \" + error.message);\n     * }\n     * });\n     * </pre>\n     *\n     * @param {Array} list A list of <code>Parse.Object</code>.\n     * @param {object} options\n     * @static\n     * @returns {Promise} A promise that is fulfilled when the destroyAll\n     * completes.\n     */\n  }, {\n    key: \"destroyAll\",\n    value: function destroyAll(list\n    /*: Array<ParseObject>*/) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var destroyOptions = {};\n      if (options.hasOwnProperty('useMasterKey')) {\n        destroyOptions.useMasterKey = options.useMasterKey;\n      }\n      if (options.hasOwnProperty('sessionToken')) {\n        destroyOptions.sessionToken = options.sessionToken;\n      }\n      if (options.hasOwnProperty('batchSize') && typeof options.batchSize === 'number') {\n        destroyOptions.batchSize = options.batchSize;\n      }\n      if (options.hasOwnProperty('context') && (0, _typeof2.default)(options.context) === 'object') {\n        destroyOptions.context = options.context;\n      }\n      return _CoreManager.default.getObjectController().destroy(list, destroyOptions);\n    }\n    /**\n     * Saves the given list of Parse.Object.\n     * If any error is encountered, stops and calls the error handler.\n     *\n     * <pre>\n     * Parse.Object.saveAll([object1, object2, ...])\n     * .then((list) => {\n     * // All the objects were saved.\n     * }, (error) => {\n     * // An error occurred while saving one of the objects.\n     * });\n     * </pre>\n     *\n     * @param {Array} list A list of <code>Parse.Object</code>.\n     * @param {object} options\n     * @static\n     * @returns {Parse.Object[]}\n     */\n  }, {\n    key: \"saveAll\",\n    value: function saveAll(list\n    /*: Array<ParseObject>*/) {\n      var options\n      /*: RequestOptions*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var saveOptions = {};\n      if (options.hasOwnProperty('useMasterKey')) {\n        saveOptions.useMasterKey = options.useMasterKey;\n      }\n      if (options.hasOwnProperty('sessionToken')) {\n        saveOptions.sessionToken = options.sessionToken;\n      }\n      if (options.hasOwnProperty('batchSize') && typeof options.batchSize === 'number') {\n        saveOptions.batchSize = options.batchSize;\n      }\n      if (options.hasOwnProperty('context') && (0, _typeof2.default)(options.context) === 'object') {\n        saveOptions.context = options.context;\n      }\n      return _CoreManager.default.getObjectController().save(list, saveOptions);\n    }\n    /**\n     * Creates a reference to a subclass of Parse.Object with the given id. This\n     * does not exist on Parse.Object, only on subclasses.\n     *\n     * <p>A shortcut for: <pre>\n     *  var Foo = Parse.Object.extend(\"Foo\");\n     *  var pointerToFoo = new Foo();\n     *  pointerToFoo.id = \"myObjectId\";\n     * </pre>\n     *\n     * @param {string} id The ID of the object to create a reference to.\n     * @static\n     * @returns {Parse.Object} A Parse.Object reference.\n     */\n  }, {\n    key: \"createWithoutData\",\n    value: function createWithoutData(id\n    /*: string*/) {\n      var obj = new this();\n      obj.id = id;\n      return obj;\n    }\n    /**\n     * Creates a new instance of a Parse Object from a JSON representation.\n     *\n     * @param {object} json The JSON map of the Object's data\n     * @param {boolean} override In single instance mode, all old server data\n     *   is overwritten if this is set to true\n     * @param {boolean} dirty Whether the Parse.Object should set JSON keys to dirty\n     * @static\n     * @returns {Parse.Object} A Parse.Object reference\n     */\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json\n    /*: any*/, override\n    /*:: ?: boolean*/, dirty\n    /*:: ?: boolean*/) {\n      if (!json.className) {\n        throw new Error('Cannot create an object without a className');\n      }\n      var constructor = classMap[json.className];\n      var o = constructor ? new constructor(json.className) : new ParseObject(json.className);\n      var otherAttributes = {};\n      for (var _attr12 in json) {\n        if (_attr12 !== 'className' && _attr12 !== '__type') {\n          otherAttributes[_attr12] = json[_attr12];\n          if (dirty) {\n            o.set(_attr12, json[_attr12]);\n          }\n        }\n      }\n      if (override) {\n        // id needs to be set before clearServerData can work\n        if (otherAttributes.objectId) {\n          o.id = otherAttributes.objectId;\n        }\n        var preserved = null;\n        if (typeof o._preserveFieldsOnFetch === 'function') {\n          preserved = o._preserveFieldsOnFetch();\n        }\n        o._clearServerData();\n        if (preserved) {\n          o._finishFetch(preserved);\n        }\n      }\n      o._finishFetch(otherAttributes);\n      if (json.objectId) {\n        o._setExisted(true);\n      }\n      return o;\n    }\n    /**\n     * Registers a subclass of Parse.Object with a specific class name.\n     * When objects of that class are retrieved from a query, they will be\n     * instantiated with this subclass.\n     * This is only necessary when using ES6 subclassing.\n     *\n     * @param {string} className The class name of the subclass\n     * @param {Function} constructor The subclass\n     */\n  }, {\n    key: \"registerSubclass\",\n    value: function registerSubclass(className\n    /*: string*/, constructor\n    /*: any*/) {\n      if (typeof className !== 'string') {\n        throw new TypeError('The first argument must be a valid class name.');\n      }\n      if (typeof constructor === 'undefined') {\n        throw new TypeError('You must supply a subclass constructor.');\n      }\n      if (typeof constructor !== 'function') {\n        throw new TypeError('You must register the subclass constructor. ' + 'Did you attempt to register an instance of the subclass?');\n      }\n      classMap[className] = constructor;\n      if (!constructor.className) {\n        constructor.className = className;\n      }\n    }\n    /**\n     * Unegisters a subclass of Parse.Object with a specific class name.\n     *\n     * @param {string} className The class name of the subclass\n     */\n  }, {\n    key: \"unregisterSubclass\",\n    value: function unregisterSubclass(className\n    /*: string*/) {\n      if (typeof className !== 'string') {\n        throw new TypeError('The first argument must be a valid class name.');\n      }\n      delete classMap[className];\n    }\n    /**\n     * Creates a new subclass of Parse.Object for the given Parse class name.\n     *\n     * <p>Every extension of a Parse class will inherit from the most recent\n     * previous extension of that class. When a Parse.Object is automatically\n     * created by parsing JSON, it will use the most recent extension of that\n     * class.</p>\n     *\n     * <p>You should call either:<pre>\n     *     var MyClass = Parse.Object.extend(\"MyClass\", {\n     *         <i>Instance methods</i>,\n     *         initialize: function(attrs, options) {\n     *             this.someInstanceProperty = [],\n     *             <i>Other instance properties</i>\n     *         }\n     *     }, {\n     *         <i>Class properties</i>\n     *     });</pre>\n     * or, for Backbone compatibility:<pre>\n     *     var MyClass = Parse.Object.extend({\n     *         className: \"MyClass\",\n     *         <i>Instance methods</i>,\n     *         initialize: function(attrs, options) {\n     *             this.someInstanceProperty = [],\n     *             <i>Other instance properties</i>\n     *         }\n     *     }, {\n     *         <i>Class properties</i>\n     *     });</pre></p>\n     *\n     * @param {string} className The name of the Parse class backing this model.\n     * @param {object} protoProps Instance properties to add to instances of the\n     *     class returned from this method.\n     * @param {object} classProps Class properties to add the class returned from\n     *     this method.\n     * @returns {Parse.Object} A new subclass of Parse.Object.\n     */\n  }, {\n    key: \"extend\",\n    value: function extend(className\n    /*: any*/, protoProps\n    /*: any*/, classProps\n    /*: any*/) {\n      if (typeof className !== 'string') {\n        if (className && typeof className.className === 'string') {\n          return ParseObject.extend(className.className, className, protoProps);\n        } else {\n          throw new Error(\"Parse.Object.extend's first argument should be the className.\");\n        }\n      }\n      var adjustedClassName = className;\n      if (adjustedClassName === 'User' && _CoreManager.default.get('PERFORM_USER_REWRITE')) {\n        adjustedClassName = '_User';\n      }\n      var parentProto = ParseObject.prototype;\n      if (this.hasOwnProperty('__super__') && this.__super__) {\n        parentProto = this.prototype;\n      }\n      var ParseObjectSubclass = function ParseObjectSubclass(attributes, options) {\n        this.className = adjustedClassName;\n        this._objCount = objectCount++; // Enable legacy initializers\n\n        if (typeof this.initialize === 'function') {\n          this.initialize.apply(this, arguments);\n        }\n        if (this._initializers) {\n          var _iterator2 = _createForOfIteratorHelper(this._initializers),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var initializer = _step2.value;\n              initializer.apply(this, arguments);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n        if (attributes && (0, _typeof2.default)(attributes) === 'object') {\n          if (!this.set(attributes || {}, options)) {\n            throw new Error(\"Can't create an invalid Parse Object\");\n          }\n        }\n      };\n      if (classMap[adjustedClassName]) {\n        ParseObjectSubclass = classMap[adjustedClassName];\n      } else {\n        ParseObjectSubclass.extend = function (name, protoProps, classProps) {\n          if (typeof name === 'string') {\n            return ParseObject.extend.call(ParseObjectSubclass, name, protoProps, classProps);\n          }\n          return ParseObject.extend.call(ParseObjectSubclass, adjustedClassName, name, protoProps);\n        };\n        ParseObjectSubclass.createWithoutData = ParseObject.createWithoutData;\n        ParseObjectSubclass.className = adjustedClassName;\n        ParseObjectSubclass.__super__ = parentProto;\n        ParseObjectSubclass.prototype = (0, _create.default)(parentProto, {\n          constructor: {\n            value: ParseObjectSubclass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n      }\n      if (protoProps) {\n        for (var prop in protoProps) {\n          if (prop === 'initialize') {\n            var _context9;\n            (0, _defineProperty2.default)(ParseObjectSubclass.prototype, '_initializers', {\n              value: (0, _concat.default)(_context9 = []).call(_context9, (0, _toConsumableArray2.default)(ParseObjectSubclass.prototype._initializers || []), [protoProps[prop]]),\n              enumerable: false,\n              writable: true,\n              configurable: true\n            });\n            continue;\n          }\n          if (prop !== 'className') {\n            (0, _defineProperty2.default)(ParseObjectSubclass.prototype, prop, {\n              value: protoProps[prop],\n              enumerable: false,\n              writable: true,\n              configurable: true\n            });\n          }\n        }\n      }\n      if (classProps) {\n        for (var _prop in classProps) {\n          if (_prop !== 'className') {\n            (0, _defineProperty2.default)(ParseObjectSubclass, _prop, {\n              value: classProps[_prop],\n              enumerable: false,\n              writable: true,\n              configurable: true\n            });\n          }\n        }\n      }\n      classMap[adjustedClassName] = ParseObjectSubclass;\n      return ParseObjectSubclass;\n    }\n    /**\n     * Enable single instance objects, where any local objects with the same Id\n     * share the same attributes, and stay synchronized with each other.\n     * This is disabled by default in server environments, since it can lead to\n     * security issues.\n     *\n     * @static\n     */\n  }, {\n    key: \"enableSingleInstance\",\n    value: function enableSingleInstance() {\n      singleInstance = true;\n      _CoreManager.default.setObjectStateController(SingleInstanceStateController);\n    }\n    /**\n     * Disable single instance objects, where any local objects with the same Id\n     * share the same attributes, and stay synchronized with each other.\n     * When disabled, you can have two instances of the same object in memory\n     * without them sharing attributes.\n     *\n     * @static\n     */\n  }, {\n    key: \"disableSingleInstance\",\n    value: function disableSingleInstance() {\n      singleInstance = false;\n      _CoreManager.default.setObjectStateController(UniqueInstanceStateController);\n    }\n    /**\n     * Asynchronously stores the objects and every object they point to in the local datastore,\n     * recursively, using a default pin name: _default.\n     *\n     * If those other objects have not been fetched from Parse, they will not be stored.\n     * However, if they have changed data, all the changes will be retained.\n     *\n     * <pre>\n     * await Parse.Object.pinAll([...]);\n     * </pre>\n     *\n     * To retrieve object:\n     * <code>query.fromLocalDatastore()</code> or <code>query.fromPin()</code>\n     *\n     * @param {Array} objects A list of <code>Parse.Object</code>.\n     * @returns {Promise} A promise that is fulfilled when the pin completes.\n     * @static\n     */\n  }, {\n    key: \"pinAll\",\n    value: function pinAll(objects\n    /*: Array<ParseObject>*/) /*: Promise<void>*/\n    {\n      var localDatastore = _CoreManager.default.getLocalDatastore();\n      if (!localDatastore.isEnabled) {\n        return _promise.default.reject('Parse.enableLocalDatastore() must be called first');\n      }\n      return ParseObject.pinAllWithName(_LocalDatastoreUtils.DEFAULT_PIN, objects);\n    }\n    /**\n     * Asynchronously stores the objects and every object they point to in the local datastore, recursively.\n     *\n     * If those other objects have not been fetched from Parse, they will not be stored.\n     * However, if they have changed data, all the changes will be retained.\n     *\n     * <pre>\n     * await Parse.Object.pinAllWithName(name, [obj1, obj2, ...]);\n     * </pre>\n     *\n     * To retrieve object:\n     * <code>query.fromLocalDatastore()</code> or <code>query.fromPinWithName(name)</code>\n     *\n     * @param {string} name Name of Pin.\n     * @param {Array} objects A list of <code>Parse.Object</code>.\n     * @returns {Promise} A promise that is fulfilled when the pin completes.\n     * @static\n     */\n  }, {\n    key: \"pinAllWithName\",\n    value: function pinAllWithName(name\n    /*: string*/, objects\n    /*: Array<ParseObject>*/) /*: Promise<void>*/\n    {\n      var localDatastore = _CoreManager.default.getLocalDatastore();\n      if (!localDatastore.isEnabled) {\n        return _promise.default.reject('Parse.enableLocalDatastore() must be called first');\n      }\n      return localDatastore._handlePinAllWithName(name, objects);\n    }\n    /**\n     * Asynchronously removes the objects and every object they point to in the local datastore,\n     * recursively, using a default pin name: _default.\n     *\n     * <pre>\n     * await Parse.Object.unPinAll([...]);\n     * </pre>\n     *\n     * @param {Array} objects A list of <code>Parse.Object</code>.\n     * @returns {Promise} A promise that is fulfilled when the unPin completes.\n     * @static\n     */\n  }, {\n    key: \"unPinAll\",\n    value: function unPinAll(objects\n    /*: Array<ParseObject>*/) /*: Promise<void>*/\n    {\n      var localDatastore = _CoreManager.default.getLocalDatastore();\n      if (!localDatastore.isEnabled) {\n        return _promise.default.reject('Parse.enableLocalDatastore() must be called first');\n      }\n      return ParseObject.unPinAllWithName(_LocalDatastoreUtils.DEFAULT_PIN, objects);\n    }\n    /**\n     * Asynchronously removes the objects and every object they point to in the local datastore, recursively.\n     *\n     * <pre>\n     * await Parse.Object.unPinAllWithName(name, [obj1, obj2, ...]);\n     * </pre>\n     *\n     * @param {string} name Name of Pin.\n     * @param {Array} objects A list of <code>Parse.Object</code>.\n     * @returns {Promise} A promise that is fulfilled when the unPin completes.\n     * @static\n     */\n  }, {\n    key: \"unPinAllWithName\",\n    value: function unPinAllWithName(name\n    /*: string*/, objects\n    /*: Array<ParseObject>*/) /*: Promise<void>*/\n    {\n      var localDatastore = _CoreManager.default.getLocalDatastore();\n      if (!localDatastore.isEnabled) {\n        return _promise.default.reject('Parse.enableLocalDatastore() must be called first');\n      }\n      return localDatastore._handleUnPinAllWithName(name, objects);\n    }\n    /**\n     * Asynchronously removes all objects in the local datastore using a default pin name: _default.\n     *\n     * <pre>\n     * await Parse.Object.unPinAllObjects();\n     * </pre>\n     *\n     * @returns {Promise} A promise that is fulfilled when the unPin completes.\n     * @static\n     */\n  }, {\n    key: \"unPinAllObjects\",\n    value: function unPinAllObjects() /*: Promise<void>*/\n    {\n      var localDatastore = _CoreManager.default.getLocalDatastore();\n      if (!localDatastore.isEnabled) {\n        return _promise.default.reject('Parse.enableLocalDatastore() must be called first');\n      }\n      return localDatastore.unPinWithName(_LocalDatastoreUtils.DEFAULT_PIN);\n    }\n    /**\n     * Asynchronously removes all objects with the specified pin name.\n     * Deletes the pin name also.\n     *\n     * <pre>\n     * await Parse.Object.unPinAllObjectsWithName(name);\n     * </pre>\n     *\n     * @param {string} name Name of Pin.\n     * @returns {Promise} A promise that is fulfilled when the unPin completes.\n     * @static\n     */\n  }, {\n    key: \"unPinAllObjectsWithName\",\n    value: function unPinAllObjectsWithName(name\n    /*: string*/) /*: Promise<void>*/\n    {\n      var localDatastore = _CoreManager.default.getLocalDatastore();\n      if (!localDatastore.isEnabled) {\n        return _promise.default.reject('Parse.enableLocalDatastore() must be called first');\n      }\n      return localDatastore.unPinWithName(_LocalDatastoreUtils.PIN_PREFIX + name);\n    }\n  }]);\n  return ParseObject;\n}();\nvar DefaultController = {\n  fetch: function fetch(target\n  /*: ParseObject | Array<ParseObject>*/, forceFetch\n  /*: boolean*/, options\n  /*: RequestOptions*/) /*: Promise<Array<void> | ParseObject>*/\n  {\n    var localDatastore = _CoreManager.default.getLocalDatastore();\n    if ((0, _isArray.default)(target)) {\n      if (target.length < 1) {\n        return _promise.default.resolve([]);\n      }\n      var objs = [];\n      var ids = [];\n      var className = null;\n      var results = [];\n      var error = null;\n      (0, _forEach.default)(target).call(target, function (el) {\n        if (error) {\n          return;\n        }\n        if (!className) {\n          className = el.className;\n        }\n        if (className !== el.className) {\n          error = new _ParseError.default(_ParseError.default.INVALID_CLASS_NAME, 'All objects should be of the same class');\n        }\n        if (!el.id) {\n          error = new _ParseError.default(_ParseError.default.MISSING_OBJECT_ID, 'All objects must have an ID');\n        }\n        if (forceFetch || !el.isDataAvailable()) {\n          ids.push(el.id);\n          objs.push(el);\n        }\n        results.push(el);\n      });\n      if (error) {\n        return _promise.default.reject(error);\n      }\n      var query = new _ParseQuery.default(className);\n      query.containedIn('objectId', ids);\n      if (options && options.include) {\n        query.include(options.include);\n      }\n      query._limit = ids.length;\n      return (0, _find.default)(query).call(query, options).then( /*#__PURE__*/function () {\n        var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(objects) {\n          var idMap, i, obj, _i, _obj, id, _iterator3, _step3, object;\n          return _regeneratorRuntime().wrap(function _callee6$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  idMap = {};\n                  (0, _forEach.default)(objects).call(objects, function (o) {\n                    idMap[o.id] = o;\n                  });\n                  i = 0;\n                case 3:\n                  if (!(i < objs.length)) {\n                    _context10.next = 11;\n                    break;\n                  }\n                  obj = objs[i];\n                  if (!(!obj || !obj.id || !idMap[obj.id])) {\n                    _context10.next = 8;\n                    break;\n                  }\n                  if (!forceFetch) {\n                    _context10.next = 8;\n                    break;\n                  }\n                  return _context10.abrupt(\"return\", _promise.default.reject(new _ParseError.default(_ParseError.default.OBJECT_NOT_FOUND, 'All objects must exist on the server.')));\n                case 8:\n                  i++;\n                  _context10.next = 3;\n                  break;\n                case 11:\n                  if (!singleInstance) {\n                    // If single instance objects are disabled, we need to replace the\n                    for (_i = 0; _i < results.length; _i++) {\n                      _obj = results[_i];\n                      if (_obj && _obj.id && idMap[_obj.id]) {\n                        id = _obj.id;\n                        _obj._finishFetch(idMap[id].toJSON());\n                        results[_i] = idMap[id];\n                      }\n                    }\n                  }\n                  _iterator3 = _createForOfIteratorHelper(results);\n                  _context10.prev = 13;\n                  _iterator3.s();\n                case 15:\n                  if ((_step3 = _iterator3.n()).done) {\n                    _context10.next = 21;\n                    break;\n                  }\n                  object = _step3.value;\n                  _context10.next = 19;\n                  return localDatastore._updateObjectIfPinned(object);\n                case 19:\n                  _context10.next = 15;\n                  break;\n                case 21:\n                  _context10.next = 26;\n                  break;\n                case 23:\n                  _context10.prev = 23;\n                  _context10.t0 = _context10[\"catch\"](13);\n                  _iterator3.e(_context10.t0);\n                case 26:\n                  _context10.prev = 26;\n                  _iterator3.f();\n                  return _context10.finish(26);\n                case 29:\n                  return _context10.abrupt(\"return\", _promise.default.resolve(results));\n                case 30:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee6, null, [[13, 23, 26, 29]]);\n        }));\n        return function (_x4) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    } else if (target instanceof ParseObject) {\n      if (!target.id) {\n        return _promise.default.reject(new _ParseError.default(_ParseError.default.MISSING_OBJECT_ID, 'Object does not have an ID'));\n      }\n      var RESTController = _CoreManager.default.getRESTController();\n      var params = {};\n      if (options && options.include) {\n        params.include = options.include.join();\n      }\n      return RESTController.request('GET', 'classes/' + target.className + '/' + target._getId(), params, options).then( /*#__PURE__*/function () {\n        var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(response) {\n          return _regeneratorRuntime().wrap(function _callee7$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  target._clearPendingOps();\n                  target._clearServerData();\n                  target._finishFetch(response);\n                  _context11.next = 5;\n                  return localDatastore._updateObjectIfPinned(target);\n                case 5:\n                  return _context11.abrupt(\"return\", target);\n                case 6:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee7);\n        }));\n        return function (_x5) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    }\n    return _promise.default.resolve();\n  },\n  destroy: function destroy(target\n  /*: ParseObject | Array<ParseObject>*/, options\n  /*: RequestOptions*/) /*: Promise<Array<void> | ParseObject>*/\n  {\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n      var batchSize, localDatastore, RESTController, batches, deleteCompleted, errors;\n      return _regeneratorRuntime().wrap(function _callee10$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              batchSize = options && options.batchSize ? options.batchSize : _CoreManager.default.get('REQUEST_BATCH_SIZE');\n              localDatastore = _CoreManager.default.getLocalDatastore();\n              RESTController = _CoreManager.default.getRESTController();\n              if (!(0, _isArray.default)(target)) {\n                _context14.next = 15;\n                break;\n              }\n              if (!(target.length < 1)) {\n                _context14.next = 6;\n                break;\n              }\n              return _context14.abrupt(\"return\", _promise.default.resolve([]));\n            case 6:\n              batches = [[]];\n              (0, _forEach.default)(target).call(target, function (obj) {\n                if (!obj.id) {\n                  return;\n                }\n                batches[batches.length - 1].push(obj);\n                if (batches[batches.length - 1].length >= batchSize) {\n                  batches.push([]);\n                }\n              });\n              if (batches[batches.length - 1].length === 0) {\n                // If the last batch is empty, remove it\n                batches.pop();\n              }\n              deleteCompleted = _promise.default.resolve();\n              errors = [];\n              (0, _forEach.default)(batches).call(batches, function (batch) {\n                deleteCompleted = deleteCompleted.then(function () {\n                  return RESTController.request('POST', 'batch', {\n                    requests: (0, _map.default)(batch).call(batch, function (obj) {\n                      return {\n                        method: 'DELETE',\n                        path: getServerUrlPath() + 'classes/' + obj.className + '/' + obj._getId(),\n                        body: {}\n                      };\n                    })\n                  }, options).then(function (results) {\n                    for (var i = 0; i < results.length; i++) {\n                      if (results[i] && results[i].hasOwnProperty('error')) {\n                        var err = new _ParseError.default(results[i].error.code, results[i].error.error);\n                        err.object = batch[i];\n                        errors.push(err);\n                      }\n                    }\n                  });\n                });\n              });\n              return _context14.abrupt(\"return\", deleteCompleted.then( /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n                var aggregate, _iterator4, _step4, object;\n                return _regeneratorRuntime().wrap(function _callee8$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        if (!errors.length) {\n                          _context12.next = 4;\n                          break;\n                        }\n                        aggregate = new _ParseError.default(_ParseError.default.AGGREGATE_ERROR);\n                        aggregate.errors = errors;\n                        return _context12.abrupt(\"return\", _promise.default.reject(aggregate));\n                      case 4:\n                        _iterator4 = _createForOfIteratorHelper(target);\n                        _context12.prev = 5;\n                        _iterator4.s();\n                      case 7:\n                        if ((_step4 = _iterator4.n()).done) {\n                          _context12.next = 13;\n                          break;\n                        }\n                        object = _step4.value;\n                        _context12.next = 11;\n                        return localDatastore._destroyObjectIfPinned(object);\n                      case 11:\n                        _context12.next = 7;\n                        break;\n                      case 13:\n                        _context12.next = 18;\n                        break;\n                      case 15:\n                        _context12.prev = 15;\n                        _context12.t0 = _context12[\"catch\"](5);\n                        _iterator4.e(_context12.t0);\n                      case 18:\n                        _context12.prev = 18;\n                        _iterator4.f();\n                        return _context12.finish(18);\n                      case 21:\n                        return _context12.abrupt(\"return\", _promise.default.resolve(target));\n                      case 22:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee8, null, [[5, 15, 18, 21]]);\n              }))));\n            case 15:\n              if (!(target instanceof ParseObject)) {\n                _context14.next = 17;\n                break;\n              }\n              return _context14.abrupt(\"return\", RESTController.request('DELETE', 'classes/' + target.className + '/' + target._getId(), {}, options).then( /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n                return _regeneratorRuntime().wrap(function _callee9$(_context13) {\n                  while (1) {\n                    switch (_context13.prev = _context13.next) {\n                      case 0:\n                        _context13.next = 2;\n                        return localDatastore._destroyObjectIfPinned(target);\n                      case 2:\n                        return _context13.abrupt(\"return\", _promise.default.resolve(target));\n                      case 3:\n                      case \"end\":\n                        return _context13.stop();\n                    }\n                  }\n                }, _callee9);\n              }))));\n            case 17:\n              return _context14.abrupt(\"return\", _promise.default.resolve(target));\n            case 18:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee10);\n    }))();\n  },\n  save: function save(target\n  /*: ParseObject | Array<ParseObject | ParseFile>*/, options\n  /*: RequestOptions*/) {\n    var batchSize = options && options.batchSize ? options.batchSize : _CoreManager.default.get('REQUEST_BATCH_SIZE');\n    var localDatastore = _CoreManager.default.getLocalDatastore();\n    var mapIdForPin = {};\n    var RESTController = _CoreManager.default.getRESTController();\n    var stateController = _CoreManager.default.getObjectStateController();\n    var allowCustomObjectId = _CoreManager.default.get('ALLOW_CUSTOM_OBJECT_ID');\n    options = options || {};\n    options.returnStatus = options.returnStatus || true;\n    if ((0, _isArray.default)(target)) {\n      if (target.length < 1) {\n        return _promise.default.resolve([]);\n      }\n      var unsaved = (0, _concat.default)(target).call(target);\n      for (var i = 0; i < target.length; i++) {\n        if (target[i] instanceof ParseObject) {\n          unsaved = (0, _concat.default)(unsaved).call(unsaved, (0, _unsavedChildren.default)(target[i], true));\n        }\n      }\n      unsaved = (0, _unique.default)(unsaved);\n      var filesSaved\n      /*: Array<ParseFile>*/ = [];\n      var pending\n      /*: Array<ParseObject>*/ = [];\n      (0, _forEach.default)(unsaved).call(unsaved, function (el) {\n        if (el instanceof _ParseFile.default) {\n          filesSaved.push(el.save(options));\n        } else if (el instanceof ParseObject) {\n          pending.push(el);\n        }\n      });\n      return _promise.default.all(filesSaved).then(function () {\n        var objectError = null;\n        return (0, _promiseUtils.continueWhile)(function () {\n          return pending.length > 0;\n        }, function () {\n          var batch = [];\n          var nextPending = [];\n          (0, _forEach.default)(pending).call(pending, function (el) {\n            if (allowCustomObjectId && Object.prototype.hasOwnProperty.call(el, 'id') && !el.id) {\n              throw new _ParseError.default(_ParseError.default.MISSING_OBJECT_ID, 'objectId must not be empty or null');\n            }\n            if (batch.length < batchSize && (0, _canBeSerialized.default)(el)) {\n              batch.push(el);\n            } else {\n              nextPending.push(el);\n            }\n          });\n          pending = nextPending;\n          if (batch.length < 1) {\n            return _promise.default.reject(new _ParseError.default(_ParseError.default.OTHER_CAUSE, 'Tried to save a batch with a cycle.'));\n          } // Queue up tasks for each object in the batch.\n          // When every task is ready, the API request will execute\n\n          var batchReturned = new _promiseUtils.resolvingPromise();\n          var batchReady = [];\n          var batchTasks = [];\n          (0, _forEach.default)(batch).call(batch, function (obj, index) {\n            var ready = new _promiseUtils.resolvingPromise();\n            batchReady.push(ready);\n            var task = function task() {\n              ready.resolve();\n              return batchReturned.then(function (responses) {\n                if (responses[index].hasOwnProperty('success')) {\n                  var objectId = responses[index].success.objectId;\n                  var status = responses[index]._status;\n                  delete responses[index]._status;\n                  mapIdForPin[objectId] = obj._localId;\n                  obj._handleSaveResponse(responses[index].success, status);\n                } else {\n                  if (!objectError && responses[index].hasOwnProperty('error')) {\n                    var serverError = responses[index].error;\n                    objectError = new _ParseError.default(serverError.code, serverError.error); // Cancel the rest of the save\n\n                    pending = [];\n                  }\n                  obj._handleSaveError();\n                }\n              });\n            };\n            stateController.pushPendingState(obj._getStateIdentifier());\n            batchTasks.push(stateController.enqueueTask(obj._getStateIdentifier(), task));\n          });\n          (0, _promiseUtils.when)(batchReady).then(function () {\n            // Kick off the batch request\n            return RESTController.request('POST', 'batch', {\n              requests: (0, _map.default)(batch).call(batch, function (obj) {\n                var params = obj._getSaveParams();\n                params.path = getServerUrlPath() + params.path;\n                return params;\n              })\n            }, options);\n          }).then(batchReturned.resolve, function (error) {\n            batchReturned.reject(new _ParseError.default(_ParseError.default.INCORRECT_TYPE, error.message));\n          });\n          return (0, _promiseUtils.when)(batchTasks);\n        }).then( /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n          var _iterator5, _step5, object;\n          return _regeneratorRuntime().wrap(function _callee11$(_context15) {\n            while (1) {\n              switch (_context15.prev = _context15.next) {\n                case 0:\n                  if (!objectError) {\n                    _context15.next = 2;\n                    break;\n                  }\n                  return _context15.abrupt(\"return\", _promise.default.reject(objectError));\n                case 2:\n                  _iterator5 = _createForOfIteratorHelper(target);\n                  _context15.prev = 3;\n                  _iterator5.s();\n                case 5:\n                  if ((_step5 = _iterator5.n()).done) {\n                    _context15.next = 13;\n                    break;\n                  }\n                  object = _step5.value;\n                  _context15.next = 9;\n                  return localDatastore._updateLocalIdForObject(mapIdForPin[object.id], object);\n                case 9:\n                  _context15.next = 11;\n                  return localDatastore._updateObjectIfPinned(object);\n                case 11:\n                  _context15.next = 5;\n                  break;\n                case 13:\n                  _context15.next = 18;\n                  break;\n                case 15:\n                  _context15.prev = 15;\n                  _context15.t0 = _context15[\"catch\"](3);\n                  _iterator5.e(_context15.t0);\n                case 18:\n                  _context15.prev = 18;\n                  _iterator5.f();\n                  return _context15.finish(18);\n                case 21:\n                  return _context15.abrupt(\"return\", _promise.default.resolve(target));\n                case 22:\n                case \"end\":\n                  return _context15.stop();\n              }\n            }\n          }, _callee11, null, [[3, 15, 18, 21]]);\n        })));\n      });\n    } else if (target instanceof ParseObject) {\n      if (allowCustomObjectId && Object.prototype.hasOwnProperty.call(target, 'id') && !target.id) {\n        throw new _ParseError.default(_ParseError.default.MISSING_OBJECT_ID, 'objectId must not be empty or null');\n      } // generate _localId in case if cascadeSave=false\n\n      target._getId();\n      var localId = target._localId; // copying target lets Flow guarantee the pointer isn't modified elsewhere\n\n      var targetCopy = target;\n      var task = function task() {\n        var params = targetCopy._getSaveParams();\n        return RESTController.request(params.method, params.path, params.body, options).then(function (response) {\n          var status = response._status;\n          delete response._status;\n          targetCopy._handleSaveResponse(response, status);\n        }, function (error) {\n          targetCopy._handleSaveError();\n          return _promise.default.reject(error);\n        });\n      };\n      stateController.pushPendingState(target._getStateIdentifier());\n      return stateController.enqueueTask(target._getStateIdentifier(), task).then( /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n        return _regeneratorRuntime().wrap(function _callee12$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _context16.next = 2;\n                return localDatastore._updateLocalIdForObject(localId, target);\n              case 2:\n                _context16.next = 4;\n                return localDatastore._updateObjectIfPinned(target);\n              case 4:\n                return _context16.abrupt(\"return\", target);\n              case 5:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee12);\n      })), function (error) {\n        return _promise.default.reject(error);\n      });\n    }\n    return _promise.default.resolve();\n  }\n};\n_CoreManager.default.setObjectController(DefaultController);\nvar _default = ParseObject;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","_WeakMap","_Array$isArray2","_getIteratorMethod","_Array$from","_sliceInstanceProperty","_reverseInstanceProperty","_Promise2","_Object$setPrototypeOf","_typeof3","_Object$getPrototypeOf2","_Object$create2","_Symbol","_Object$defineProperty2","_Object$defineProperties","_Object$getOwnPropertyDescriptors","_forEachInstanceProperty2","_Object$getOwnPropertyDescriptor","_filterInstanceProperty","_Object$getOwnPropertySymbols","_Object$keys2","exports","value","default","_map","_find","_toConsumableArray2","_defineProperty2","_create","_promise","_isArray","_asyncToGenerator2","_concat","_getPrototypeOf","_includes","_stringify","_forEach","_keys","_freeze","_typeof2","_classCallCheck2","_createClass2","_defineProperty3","_indexOf","_CoreManager","_canBeSerialized","_decode","_encode","_escape2","_EventuallyQueue","_ParseACL","_parseDate","_ParseError","_ParseFile","_promiseUtils","_LocalDatastoreUtils","_ParseOp","_ParseQuery","_ParseRelation","SingleInstanceStateController","_interopRequireWildcard","_unique","UniqueInstanceStateController","_unsavedChildren","_getRequireWildcardCache","nodeInterop","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","key","Object","prototype","hasOwnProperty","call","desc","set","_createForOfIteratorHelper","o","allowArrayLike","it","_unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","normalCompletion","didErr","err","step","next","_e2","return","minLen","_context21","_arrayLikeToArray","toString","constructor","name","test","arr","len","arr2","Array","_regeneratorRuntime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","_context19","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","undefined","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","__proto__","awrap","async","iter","keys","object","pop","skipTempReset","_context20","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ownKeys","enumerableOnly","symbols","sym","apply","_objectSpread","target","arguments","_context17","_context18","source","uuidv4","classMap","objectCount","singleInstance","setObjectStateController","getServerUrlPath","serverUrl","url","replace","substr","ParseObject","className","attributes","options","initialize","toSet","_objCount","_attr","stateController","getObjectStateController","estimateAttributes","_getStateIdentifier","_getServerData","createdAt","updatedAt","id","_localId","localId","_getId","getServerData","serverData","unset","_attr2","setServerData","getPendingOps","keysToClear","pending","_getPendingOps","latest","objectCache","getObjectCache","dirty","_attr3","val","json","stringified","seen","offline","toJSON","__type","dirtyObjects","_getDirtyObjectAttributes","attr","isDotNotation","field","fieldName","split","SetOp","body","_getSaveJSON","path","objectId","initializeState","decoded","_attr4","_ensureParentAndKey","commitServerChanges","existed","getState","serverId","oldState","removeState","response","status","changes","popPendingState","RelationOp","applyTo","UnsetOp","_migrateId","_setExisted","mergeFirstPendingState","seenEntry","attrs","_attr5","_attr6","other","pendingOps","_attr7","_attr8","newOps","readonly","readOnlyAttributes","k","__op","opFromJSON","relation","targetClassName","currentAttributes","newValues","_attr9","ignoreValidation","validation","validate","last","_attr10","nextOp","mergeWith","setPendingOp","amount","IncrementOp","item","AddOp","items","AddUniqueOp","RemoveOp","clone","copy","a","duplicateState","_exists","_callee","query","_callee$","_context","t0","code","OBJECT_NOT_FOUND","exists","_x","isValid","ACL","OTHER_CAUSE","_key","INVALID_KEY_NAME","getACL","acl","setACL","revert","keysToRevert","_len","_key2","_iterator","_step","_key3","_clearPendingOps","clear","erasable","_attr11","fetch","fetchOptions","useMasterKey","sessionToken","include","_context2","_context3","controller","getObjectController","fetchWithInclude","_saveEventually","_callee2","_callee2$","_context4","save","message","poll","saveEventually","_x2","arg1","arg2","arg3","_this","saveOptions","installationId","unsaved","cascadeSave","_destroyEventually","_callee3","_callee3$","_context5","destroy","destroyEventually","_x3","destroyOptions","pin","pinAllWithName","DEFAULT_PIN","unPin","unPinAllWithName","_isPinned","_callee4","localDatastore","objectKey","_callee4$","_context6","getLocalDatastore","isEnabled","getKeyForObject","fromPinWithName","isPinned","pinWithName","unPinWithName","_fetchFromLocalDatastore","_callee5","pinned","_callee5$","_context7","_serializeObject","fromJSON","_finishFetch","fetchFromLocalDatastore","_getClassMap","_clearAllState","clearAllState","fetchAll","list","queryOptions","handleIncludeOptions","fetchAllWithInclude","fetchAllIfNeededWithInclude","fetchAllIfNeeded","_context8","destroyAll","batchSize","saveAll","createWithoutData","override","otherAttributes","_attr12","preserved","_preserveFieldsOnFetch","_clearServerData","registerSubclass","unregisterSubclass","extend","protoProps","classProps","adjustedClassName","parentProto","__super__","ParseObjectSubclass","_initializers","_iterator2","_step2","initializer","prop","_context9","_prop","enableSingleInstance","disableSingleInstance","pinAll","objects","_handlePinAllWithName","unPinAll","_handleUnPinAllWithName","unPinAllObjects","unPinAllObjectsWithName","PIN_PREFIX","DefaultController","forceFetch","objs","ids","results","el","INVALID_CLASS_NAME","MISSING_OBJECT_ID","isDataAvailable","containedIn","_limit","_ref","_callee6","idMap","_i","_obj","_iterator3","_step3","_callee6$","_context10","_updateObjectIfPinned","_x4","RESTController","getRESTController","params","join","request","_ref2","_callee7","_callee7$","_context11","_x5","_callee10","batches","deleteCompleted","errors","_callee10$","_context14","batch","requests","_callee8","aggregate","_iterator4","_step4","_callee8$","_context12","AGGREGATE_ERROR","_destroyObjectIfPinned","_callee9","_callee9$","_context13","mapIdForPin","allowCustomObjectId","returnStatus","filesSaved","all","objectError","continueWhile","nextPending","batchReturned","resolvingPromise","batchReady","batchTasks","index","ready","task","responses","success","_status","_handleSaveResponse","serverError","_handleSaveError","pushPendingState","enqueueTask","when","_getSaveParams","INCORRECT_TYPE","_callee11","_iterator5","_step5","_callee11$","_context15","_updateLocalIdForObject","targetCopy","_callee12","_callee12$","_context16","setObjectController","_default"],"sources":["/Users/nnwhalen/Desktop/NOTREDAME/web dev/node_modules/parse/lib/browser/ParseObject.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _WeakMap = require(\"@babel/runtime-corejs3/core-js-stable/weak-map\");\n\nvar _Array$isArray2 = require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\");\n\nvar _getIteratorMethod = require(\"@babel/runtime-corejs3/core-js/get-iterator-method\");\n\nvar _Array$from = require(\"@babel/runtime-corejs3/core-js-stable/array/from\");\n\nvar _sliceInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\");\n\nvar _reverseInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/reverse\");\n\nvar _Promise2 = require(\"@babel/runtime-corejs3/core-js-stable/promise\");\n\nvar _Object$setPrototypeOf = require(\"@babel/runtime-corejs3/core-js-stable/object/set-prototype-of\");\n\nvar _typeof3 = require(\"@babel/runtime-corejs3/helpers/typeof\");\n\nvar _Object$getPrototypeOf2 = require(\"@babel/runtime-corejs3/core-js-stable/object/get-prototype-of\");\n\nvar _Object$create2 = require(\"@babel/runtime-corejs3/core-js-stable/object/create\");\n\nvar _Symbol = require(\"@babel/runtime-corejs3/core-js-stable/symbol\");\n\nvar _Object$defineProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _Object$defineProperties = require(\"@babel/runtime-corejs3/core-js-stable/object/define-properties\");\n\nvar _Object$getOwnPropertyDescriptors = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors\");\n\nvar _forEachInstanceProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\");\n\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor\");\n\nvar _filterInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\");\n\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols\");\n\nvar _Object$keys2 = require(\"@babel/runtime-corejs3/core-js-stable/object/keys\");\n\n_Object$defineProperty2(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/map\"));\n\nvar _find = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/find\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\"));\n\nvar _create = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/create\"));\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\n\nvar _concat = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/concat\"));\n\nvar _getPrototypeOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/get-prototype-of\"));\n\nvar _includes = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/includes\"));\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/json/stringify\"));\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\n\nvar _freeze = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/freeze\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _defineProperty3 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _canBeSerialized = _interopRequireDefault(require(\"./canBeSerialized\"));\n\nvar _decode = _interopRequireDefault(require(\"./decode\"));\n\nvar _encode = _interopRequireDefault(require(\"./encode\"));\n\nvar _escape2 = _interopRequireDefault(require(\"./escape\"));\n\nvar _EventuallyQueue = _interopRequireDefault(require(\"./EventuallyQueue\"));\n\nvar _ParseACL = _interopRequireDefault(require(\"./ParseACL\"));\n\nvar _parseDate = _interopRequireDefault(require(\"./parseDate\"));\n\nvar _ParseError = _interopRequireDefault(require(\"./ParseError\"));\n\nvar _ParseFile = _interopRequireDefault(require(\"./ParseFile\"));\n\nvar _promiseUtils = require(\"./promiseUtils\");\n\nvar _LocalDatastoreUtils = require(\"./LocalDatastoreUtils\");\n\nvar _ParseOp = require(\"./ParseOp\");\n\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\n\nvar _ParseRelation = _interopRequireDefault(require(\"./ParseRelation\"));\n\nvar SingleInstanceStateController = _interopRequireWildcard(require(\"./SingleInstanceStateController\"));\n\nvar _unique = _interopRequireDefault(require(\"./unique\"));\n\nvar UniqueInstanceStateController = _interopRequireWildcard(require(\"./UniqueInstanceStateController\"));\n\nvar _unsavedChildren = _interopRequireDefault(require(\"./unsavedChildren\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof _WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new _WeakMap();\n  var cacheNodeInterop = new _WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof3(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = _Object$defineProperty2 && _Object$getOwnPropertyDescriptor ? _Object$getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        _Object$defineProperty2(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n\n  if (!it) {\n    if (_Array$isArray2(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  var _context21;\n\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n\n  var n = _sliceInstanceProperty(_context21 = Object.prototype.toString.call(o)).call(_context21, 8, -1);\n\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  _regeneratorRuntime = function () {\n    return exports;\n  };\n\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof _Symbol ? _Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return _Object$defineProperty2(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function (obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = _Object$create2(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = _Object$getPrototypeOf2,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = _Object$create2(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    var _context19;\n\n    _forEachInstanceProperty2(_context19 = [\"next\", \"throw\", \"return\"]).call(_context19, function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof3(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], _forEachInstanceProperty2(tryLocsList).call(tryLocsList, pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return _Object$setPrototypeOf ? _Object$setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = _Object$create2(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = _Promise2);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return _reverseInstanceProperty(keys).call(keys), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function (skipTempReset) {\n      var _context20;\n\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, _forEachInstanceProperty2(_context20 = this.tryEntries).call(_context20, resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+_sliceInstanceProperty(name).call(name, 1)) && (this[name] = undefined);\n      }\n    },\n    stop: function () {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function (exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function (type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function (record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function (finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    catch: function (tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = _Object$keys2(object);\n\n  if (_Object$getOwnPropertySymbols) {\n    var symbols = _Object$getOwnPropertySymbols(object);\n\n    enumerableOnly && (symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) {\n      return _Object$getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var _context17, _context18;\n\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? _forEachInstanceProperty2(_context17 = ownKeys(Object(source), !0)).call(_context17, function (key) {\n      (0, _defineProperty3.default)(target, key, source[key]);\n    }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : _forEachInstanceProperty2(_context18 = ownKeys(Object(source))).call(_context18, function (key) {\n      _Object$defineProperty2(target, key, _Object$getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar uuidv4 = require('./uuid');\n/*:: export type Pointer = {\n  __type: string,\n  className: string,\n  objectId: string,\n};*/\n\n/*:: type SaveParams = {\n  method: string,\n  path: string,\n  body: AttributeMap,\n};*/\n\n/*:: export type SaveOptions = FullOptions & {\n  cascadeSave?: boolean,\n  context?: AttributeMap,\n};*/\n// Mapping of class names to constructors, so we can populate objects from the\n// server with appropriate subclasses of ParseObject\n\n\nvar classMap = {}; // Global counter for generating unique Ids for non-single-instance objects\n\nvar objectCount = 0; // On web clients, objects are single-instance: any two objects with the same Id\n// will have the same attributes. However, this may be dangerous default\n// behavior in a server scenario\n\nvar singleInstance = !_CoreManager.default.get('IS_NODE');\n\nif (singleInstance) {\n  _CoreManager.default.setObjectStateController(SingleInstanceStateController);\n} else {\n  _CoreManager.default.setObjectStateController(UniqueInstanceStateController);\n}\n\nfunction getServerUrlPath() {\n  var serverUrl = _CoreManager.default.get('SERVER_URL');\n\n  if (serverUrl[serverUrl.length - 1] !== '/') {\n    serverUrl += '/';\n  }\n\n  var url = serverUrl.replace(/https?:\\/\\//, '');\n  return url.substr((0, _indexOf.default)(url).call(url, '/'));\n}\n/**\n * Creates a new model with defined attributes.\n *\n * <p>You won't normally call this method directly.  It is recommended that\n * you use a subclass of <code>Parse.Object</code> instead, created by calling\n * <code>extend</code>.</p>\n *\n * <p>However, if you don't want to use a subclass, or aren't sure which\n * subclass is appropriate, you can use this form:<pre>\n *     var object = new Parse.Object(\"ClassName\");\n * </pre>\n * That is basically equivalent to:<pre>\n *     var MyClass = Parse.Object.extend(\"ClassName\");\n *     var object = new MyClass();\n * </pre></p>\n *\n * @alias Parse.Object\n */\n\n\nvar ParseObject = /*#__PURE__*/function () {\n  /**\n   * @param {string} className The class name for the object\n   * @param {object} attributes The initial set of data to store in the object.\n   * @param {object} options The options for this object instance.\n   */\n  function ParseObject(className\n  /*: ?string | { className: string, [attr: string]: mixed }*/\n  , attributes\n  /*:: ?: { [attr: string]: mixed }*/\n  , options\n  /*:: ?: { ignoreValidation: boolean }*/\n  ) {\n    (0, _classCallCheck2.default)(this, ParseObject);\n    (0, _defineProperty3.default)(this, \"id\", void 0);\n    (0, _defineProperty3.default)(this, \"_localId\", void 0);\n    (0, _defineProperty3.default)(this, \"_objCount\", void 0);\n    (0, _defineProperty3.default)(this, \"className\", void 0); // Enable legacy initializers\n\n    if (typeof this.initialize === 'function') {\n      this.initialize.apply(this, arguments);\n    }\n\n    var toSet = null;\n    this._objCount = objectCount++;\n\n    if (typeof className === 'string') {\n      this.className = className;\n\n      if (attributes && (0, _typeof2.default)(attributes) === 'object') {\n        toSet = attributes;\n      }\n    } else if (className && (0, _typeof2.default)(className) === 'object') {\n      this.className = className.className;\n      toSet = {};\n\n      for (var _attr in className) {\n        if (_attr !== 'className') {\n          toSet[_attr] = className[_attr];\n        }\n      }\n\n      if (attributes && (0, _typeof2.default)(attributes) === 'object') {\n        options = attributes;\n      }\n    }\n\n    if (toSet && !this.set(toSet, options)) {\n      throw new Error(\"Can't create an invalid Parse Object\");\n    }\n  }\n  /**\n   * The ID of this object, unique within its class.\n   *\n   * @property {string} id\n   */\n\n\n  (0, _createClass2.default)(ParseObject, [{\n    key: \"attributes\",\n    get:\n    /** Prototype getters / setters **/\n    function ()\n    /*: AttributeMap*/\n    {\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      return (0, _freeze.default)(stateController.estimateAttributes(this._getStateIdentifier()));\n    }\n    /**\n     * The first time this object was saved on the server.\n     *\n     * @property {Date} createdAt\n     * @returns {Date}\n     */\n\n  }, {\n    key: \"createdAt\",\n    get: function ()\n    /*: ?Date*/\n    {\n      return this._getServerData().createdAt;\n    }\n    /**\n     * The last time this object was updated on the server.\n     *\n     * @property {Date} updatedAt\n     * @returns {Date}\n     */\n\n  }, {\n    key: \"updatedAt\",\n    get: function ()\n    /*: ?Date*/\n    {\n      return this._getServerData().updatedAt;\n    }\n    /** Private methods **/\n\n    /**\n     * Returns a local or server Id used uniquely identify this object\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: \"_getId\",\n    value: function ()\n    /*: string*/\n    {\n      if (typeof this.id === 'string') {\n        return this.id;\n      }\n\n      if (typeof this._localId === 'string') {\n        return this._localId;\n      }\n\n      var localId = 'local' + uuidv4();\n      this._localId = localId;\n      return localId;\n    }\n    /**\n     * Returns a unique identifier used to pull data from the State Controller.\n     *\n     * @returns {Parse.Object|object}\n     */\n\n  }, {\n    key: \"_getStateIdentifier\",\n    value: function ()\n    /*: ParseObject | { id: string, className: string }*/\n    {\n      if (singleInstance) {\n        var id = this.id;\n\n        if (!id) {\n          id = this._getId();\n        }\n\n        return {\n          id: id,\n          className: this.className\n        };\n      } else {\n        return this;\n      }\n    }\n  }, {\n    key: \"_getServerData\",\n    value: function ()\n    /*: AttributeMap*/\n    {\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      return stateController.getServerData(this._getStateIdentifier());\n    }\n  }, {\n    key: \"_clearServerData\",\n    value: function () {\n      var serverData = this._getServerData();\n\n      var unset = {};\n\n      for (var _attr2 in serverData) {\n        unset[_attr2] = undefined;\n      }\n\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      stateController.setServerData(this._getStateIdentifier(), unset);\n    }\n  }, {\n    key: \"_getPendingOps\",\n    value: function ()\n    /*: Array<OpsMap>*/\n    {\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      return stateController.getPendingOps(this._getStateIdentifier());\n    }\n    /**\n     * @param {Array<string>} [keysToClear] - if specified, only ops matching\n     * these fields will be cleared\n     */\n\n  }, {\n    key: \"_clearPendingOps\",\n    value: function (keysToClear\n    /*:: ?: Array<string>*/\n    ) {\n      var pending = this._getPendingOps();\n\n      var latest = pending[pending.length - 1];\n      var keys = keysToClear || (0, _keys.default)(latest);\n      (0, _forEach.default)(keys).call(keys, function (key) {\n        delete latest[key];\n      });\n    }\n  }, {\n    key: \"_getDirtyObjectAttributes\",\n    value: function ()\n    /*: AttributeMap*/\n    {\n      var attributes = this.attributes;\n\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      var objectCache = stateController.getObjectCache(this._getStateIdentifier());\n      var dirty = {};\n\n      for (var _attr3 in attributes) {\n        var val = attributes[_attr3];\n\n        if (val && (0, _typeof2.default)(val) === 'object' && !(val instanceof ParseObject) && !(val instanceof _ParseFile.default) && !(val instanceof _ParseRelation.default)) {\n          // Due to the way browsers construct maps, the key order will not change\n          // unless the object is changed\n          try {\n            var json = (0, _encode.default)(val, false, true);\n            var stringified = (0, _stringify.default)(json);\n\n            if (objectCache[_attr3] !== stringified) {\n              dirty[_attr3] = val;\n            }\n          } catch (e) {\n            // Error occurred, possibly by a nested unsaved pointer in a mutable container\n            // No matter how it happened, it indicates a change in the attribute\n            dirty[_attr3] = val;\n          }\n        }\n      }\n\n      return dirty;\n    }\n  }, {\n    key: \"_toFullJSON\",\n    value: function (seen\n    /*:: ?: Array<any>*/\n    , offline\n    /*:: ?: boolean*/\n    )\n    /*: AttributeMap*/\n    {\n      var json\n      /*: { [key: string]: mixed }*/\n      = this.toJSON(seen, offline);\n      json.__type = 'Object';\n      json.className = this.className;\n      return json;\n    }\n  }, {\n    key: \"_getSaveJSON\",\n    value: function ()\n    /*: AttributeMap*/\n    {\n      var pending = this._getPendingOps();\n\n      var dirtyObjects = this._getDirtyObjectAttributes();\n\n      var json = {};\n\n      for (var attr in dirtyObjects) {\n        var isDotNotation = false;\n\n        for (var i = 0; i < pending.length; i += 1) {\n          for (var field in pending[i]) {\n            // Dot notation operations are handled later\n            if ((0, _includes.default)(field).call(field, '.')) {\n              var fieldName = field.split('.')[0];\n\n              if (fieldName === attr) {\n                isDotNotation = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (!isDotNotation) {\n          json[attr] = new _ParseOp.SetOp(dirtyObjects[attr]).toJSON();\n        }\n      }\n\n      for (attr in pending[0]) {\n        json[attr] = pending[0][attr].toJSON();\n      }\n\n      return json;\n    }\n  }, {\n    key: \"_getSaveParams\",\n    value: function ()\n    /*: SaveParams*/\n    {\n      var method = this.id ? 'PUT' : 'POST';\n\n      var body = this._getSaveJSON();\n\n      var path = 'classes/' + this.className;\n\n      if (_CoreManager.default.get('ALLOW_CUSTOM_OBJECT_ID')) {\n        if (!this.createdAt) {\n          method = 'POST';\n          body.objectId = this.id;\n        } else {\n          method = 'PUT';\n          path += '/' + this.id;\n        }\n      } else if (this.id) {\n        path += '/' + this.id;\n      } else if (this.className === '_User') {\n        path = 'users';\n      }\n\n      return {\n        method: method,\n        body: body,\n        path: path\n      };\n    }\n  }, {\n    key: \"_finishFetch\",\n    value: function (serverData\n    /*: AttributeMap*/\n    ) {\n      if (!this.id && serverData.objectId) {\n        this.id = serverData.objectId;\n      }\n\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      stateController.initializeState(this._getStateIdentifier());\n      var decoded = {};\n\n      for (var _attr4 in serverData) {\n        if (_attr4 === 'ACL') {\n          decoded[_attr4] = new _ParseACL.default(serverData[_attr4]);\n        } else if (_attr4 !== 'objectId') {\n          decoded[_attr4] = (0, _decode.default)(serverData[_attr4]);\n\n          if (decoded[_attr4] instanceof _ParseRelation.default) {\n            decoded[_attr4]._ensureParentAndKey(this, _attr4);\n          }\n        }\n      }\n\n      if (decoded.createdAt && typeof decoded.createdAt === 'string') {\n        decoded.createdAt = (0, _parseDate.default)(decoded.createdAt);\n      }\n\n      if (decoded.updatedAt && typeof decoded.updatedAt === 'string') {\n        decoded.updatedAt = (0, _parseDate.default)(decoded.updatedAt);\n      }\n\n      if (!decoded.updatedAt && decoded.createdAt) {\n        decoded.updatedAt = decoded.createdAt;\n      }\n\n      stateController.commitServerChanges(this._getStateIdentifier(), decoded);\n    }\n  }, {\n    key: \"_setExisted\",\n    value: function (existed\n    /*: boolean*/\n    ) {\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      var state = stateController.getState(this._getStateIdentifier());\n\n      if (state) {\n        state.existed = existed;\n      }\n    }\n  }, {\n    key: \"_migrateId\",\n    value: function (serverId\n    /*: string*/\n    ) {\n      if (this._localId && serverId) {\n        if (singleInstance) {\n          var stateController = _CoreManager.default.getObjectStateController();\n\n          var oldState = stateController.removeState(this._getStateIdentifier());\n          this.id = serverId;\n          delete this._localId;\n\n          if (oldState) {\n            stateController.initializeState(this._getStateIdentifier(), oldState);\n          }\n        } else {\n          this.id = serverId;\n          delete this._localId;\n        }\n      }\n    }\n  }, {\n    key: \"_handleSaveResponse\",\n    value: function (response\n    /*: AttributeMap*/\n    , status\n    /*: number*/\n    ) {\n      var changes = {};\n\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      var pending = stateController.popPendingState(this._getStateIdentifier());\n\n      for (var attr in pending) {\n        if (pending[attr] instanceof _ParseOp.RelationOp) {\n          changes[attr] = pending[attr].applyTo(undefined, this, attr);\n        } else if (!(attr in response)) {\n          // Only SetOps and UnsetOps should not come back with results\n          changes[attr] = pending[attr].applyTo(undefined);\n        }\n      }\n\n      for (attr in response) {\n        if ((attr === 'createdAt' || attr === 'updatedAt') && typeof response[attr] === 'string') {\n          changes[attr] = (0, _parseDate.default)(response[attr]);\n        } else if (attr === 'ACL') {\n          changes[attr] = new _ParseACL.default(response[attr]);\n        } else if (attr !== 'objectId') {\n          var val = (0, _decode.default)(response[attr]);\n\n          if (val && (0, _getPrototypeOf.default)(val) === Object.prototype) {\n            changes[attr] = _objectSpread(_objectSpread({}, this.attributes[attr]), val);\n          } else {\n            changes[attr] = val;\n          }\n\n          if (changes[attr] instanceof _ParseOp.UnsetOp) {\n            changes[attr] = undefined;\n          }\n        }\n      }\n\n      if (changes.createdAt && !changes.updatedAt) {\n        changes.updatedAt = changes.createdAt;\n      }\n\n      this._migrateId(response.objectId);\n\n      if (status !== 201) {\n        this._setExisted(true);\n      }\n\n      stateController.commitServerChanges(this._getStateIdentifier(), changes);\n    }\n  }, {\n    key: \"_handleSaveError\",\n    value: function () {\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      stateController.mergeFirstPendingState(this._getStateIdentifier());\n    }\n  }, {\n    key: \"initialize\",\n    value:\n    /** Public methods **/\n    function () {// NOOP\n    }\n    /**\n     * Returns a JSON version of the object suitable for saving to Parse.\n     *\n     * @param seen\n     * @param offline\n     * @returns {object}\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function (seen\n    /*: Array<any> | void*/\n    , offline\n    /*:: ?: boolean*/\n    )\n    /*: AttributeMap*/\n    {\n      var seenEntry = this.id ? this.className + ':' + this.id : this;\n      seen = seen || [seenEntry];\n      var json = {};\n      var attrs = this.attributes;\n\n      for (var _attr5 in attrs) {\n        if ((_attr5 === 'createdAt' || _attr5 === 'updatedAt') && attrs[_attr5].toJSON) {\n          json[_attr5] = attrs[_attr5].toJSON();\n        } else {\n          json[_attr5] = (0, _encode.default)(attrs[_attr5], false, false, seen, offline);\n        }\n      }\n\n      var pending = this._getPendingOps();\n\n      for (var _attr6 in pending[0]) {\n        json[_attr6] = pending[0][_attr6].toJSON(offline);\n      }\n\n      if (this.id) {\n        json.objectId = this.id;\n      }\n\n      return json;\n    }\n    /**\n     * Determines whether this ParseObject is equal to another ParseObject\n     *\n     * @param {object} other - An other object ot compare\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"equals\",\n    value: function (other\n    /*: mixed*/\n    )\n    /*: boolean*/\n    {\n      if (this === other) {\n        return true;\n      }\n\n      return other instanceof ParseObject && this.className === other.className && this.id === other.id && typeof this.id !== 'undefined';\n    }\n    /**\n     * Returns true if this object has been modified since its last\n     * save/refresh.  If an attribute is specified, it returns true only if that\n     * particular attribute has been modified since the last save/refresh.\n     *\n     * @param {string} attr An attribute name (optional).\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"dirty\",\n    value: function (attr\n    /*:: ?: string*/\n    )\n    /*: boolean*/\n    {\n      if (!this.id) {\n        return true;\n      }\n\n      var pendingOps = this._getPendingOps();\n\n      var dirtyObjects = this._getDirtyObjectAttributes();\n\n      if (attr) {\n        if (dirtyObjects.hasOwnProperty(attr)) {\n          return true;\n        }\n\n        for (var i = 0; i < pendingOps.length; i++) {\n          if (pendingOps[i].hasOwnProperty(attr)) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      if ((0, _keys.default)(pendingOps[0]).length !== 0) {\n        return true;\n      }\n\n      if ((0, _keys.default)(dirtyObjects).length !== 0) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Returns an array of keys that have been modified since last save/refresh\n     *\n     * @returns {string[]}\n     */\n\n  }, {\n    key: \"dirtyKeys\",\n    value: function ()\n    /*: Array<string>*/\n    {\n      var pendingOps = this._getPendingOps();\n\n      var keys = {};\n\n      for (var i = 0; i < pendingOps.length; i++) {\n        for (var _attr7 in pendingOps[i]) {\n          keys[_attr7] = true;\n        }\n      }\n\n      var dirtyObjects = this._getDirtyObjectAttributes();\n\n      for (var _attr8 in dirtyObjects) {\n        keys[_attr8] = true;\n      }\n\n      return (0, _keys.default)(keys);\n    }\n    /**\n     * Returns true if the object has been fetched.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isDataAvailable\",\n    value: function ()\n    /*: boolean*/\n    {\n      var serverData = this._getServerData();\n\n      return !!(0, _keys.default)(serverData).length;\n    }\n    /**\n     * Gets a Pointer referencing this Object.\n     *\n     * @returns {Pointer}\n     */\n\n  }, {\n    key: \"toPointer\",\n    value: function ()\n    /*: Pointer*/\n    {\n      if (!this.id) {\n        throw new Error('Cannot create a pointer to an unsaved ParseObject');\n      }\n\n      return {\n        __type: 'Pointer',\n        className: this.className,\n        objectId: this.id\n      };\n    }\n    /**\n     * Gets a Pointer referencing this Object.\n     *\n     * @returns {Pointer}\n     */\n\n  }, {\n    key: \"toOfflinePointer\",\n    value: function ()\n    /*: Pointer*/\n    {\n      if (!this._localId) {\n        throw new Error('Cannot create a offline pointer to a saved ParseObject');\n      }\n\n      return {\n        __type: 'Object',\n        className: this.className,\n        _localId: this._localId\n      };\n    }\n    /**\n     * Gets the value of an attribute.\n     *\n     * @param {string} attr The string name of an attribute.\n     * @returns {*}\n     */\n\n  }, {\n    key: \"get\",\n    value: function (attr\n    /*: string*/\n    )\n    /*: mixed*/\n    {\n      return this.attributes[attr];\n    }\n    /**\n     * Gets a relation on the given class for the attribute.\n     *\n     * @param {string} attr The attribute to get the relation for.\n     * @returns {Parse.Relation}\n     */\n\n  }, {\n    key: \"relation\",\n    value: function (attr\n    /*: string*/\n    )\n    /*: ParseRelation*/\n    {\n      var value = this.get(attr);\n\n      if (value) {\n        if (!(value instanceof _ParseRelation.default)) {\n          throw new Error('Called relation() on non-relation field ' + attr);\n        }\n\n        value._ensureParentAndKey(this, attr);\n\n        return value;\n      }\n\n      return new _ParseRelation.default(this, attr);\n    }\n    /**\n     * Gets the HTML-escaped value of an attribute.\n     *\n     * @param {string} attr The string name of an attribute.\n     * @returns {string}\n     */\n\n  }, {\n    key: \"escape\",\n    value: function (attr\n    /*: string*/\n    )\n    /*: string*/\n    {\n      var val = this.attributes[attr];\n\n      if (val == null) {\n        return '';\n      }\n\n      if (typeof val !== 'string') {\n        if (typeof val.toString !== 'function') {\n          return '';\n        }\n\n        val = val.toString();\n      }\n\n      return (0, _escape2.default)(val);\n    }\n    /**\n     * Returns <code>true</code> if the attribute contains a value that is not\n     * null or undefined.\n     *\n     * @param {string} attr The string name of the attribute.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"has\",\n    value: function (attr\n    /*: string*/\n    )\n    /*: boolean*/\n    {\n      var attributes = this.attributes;\n\n      if (attributes.hasOwnProperty(attr)) {\n        return attributes[attr] != null;\n      }\n\n      return false;\n    }\n    /**\n     * Sets a hash of model attributes on the object.\n     *\n     * <p>You can call it with an object containing keys and values, with one\n     * key and value, or dot notation.  For example:<pre>\n     *   gameTurn.set({\n     *     player: player1,\n     *     diceRoll: 2\n     *   }, {\n     *     error: function(gameTurnAgain, error) {\n     *       // The set failed validation.\n     *     }\n     *   });\n     *\n     *   game.set(\"currentPlayer\", player2, {\n     *     error: function(gameTurnAgain, error) {\n     *       // The set failed validation.\n     *     }\n     *   });\n     *\n     *   game.set(\"finished\", true);</pre></p>\n     *\n     *   game.set(\"player.score\", 10);</pre></p>\n     *\n     * @param {(string|object)} key The key to set.\n     * @param {(string|object)} value The value to give it.\n     * @param {object} options A set of options for the set.\n     *     The only supported option is <code>error</code>.\n     * @returns {(ParseObject|boolean)} true if the set succeeded.\n     */\n\n  }, {\n    key: \"set\",\n    value: function (key\n    /*: mixed*/\n    , value\n    /*: mixed*/\n    , options\n    /*:: ?: mixed*/\n    )\n    /*: ParseObject | boolean*/\n    {\n      var changes = {};\n      var newOps = {};\n\n      if (key && (0, _typeof2.default)(key) === 'object') {\n        changes = key;\n        options = value;\n      } else if (typeof key === 'string') {\n        changes[key] = value;\n      } else {\n        return this;\n      }\n\n      options = options || {};\n      var readonly = [];\n\n      if (typeof this.constructor.readOnlyAttributes === 'function') {\n        readonly = (0, _concat.default)(readonly).call(readonly, this.constructor.readOnlyAttributes());\n      }\n\n      for (var k in changes) {\n        if (k === 'createdAt' || k === 'updatedAt') {\n          // This property is read-only, but for legacy reasons we silently\n          // ignore it\n          continue;\n        }\n\n        if ((0, _indexOf.default)(readonly).call(readonly, k) > -1) {\n          throw new Error('Cannot modify readonly attribute: ' + k);\n        }\n\n        if (options.unset) {\n          newOps[k] = new _ParseOp.UnsetOp();\n        } else if (changes[k] instanceof _ParseOp.Op) {\n          newOps[k] = changes[k];\n        } else if (changes[k] && (0, _typeof2.default)(changes[k]) === 'object' && typeof changes[k].__op === 'string') {\n          newOps[k] = (0, _ParseOp.opFromJSON)(changes[k]);\n        } else if (k === 'objectId' || k === 'id') {\n          if (typeof changes[k] === 'string') {\n            this.id = changes[k];\n          }\n        } else if (k === 'ACL' && (0, _typeof2.default)(changes[k]) === 'object' && !(changes[k] instanceof _ParseACL.default)) {\n          newOps[k] = new _ParseOp.SetOp(new _ParseACL.default(changes[k]));\n        } else if (changes[k] instanceof _ParseRelation.default) {\n          var relation = new _ParseRelation.default(this, k);\n          relation.targetClassName = changes[k].targetClassName;\n          newOps[k] = new _ParseOp.SetOp(relation);\n        } else {\n          newOps[k] = new _ParseOp.SetOp(changes[k]);\n        }\n      }\n\n      var currentAttributes = this.attributes; // Calculate new values\n\n      var newValues = {};\n\n      for (var _attr9 in newOps) {\n        if (newOps[_attr9] instanceof _ParseOp.RelationOp) {\n          newValues[_attr9] = newOps[_attr9].applyTo(currentAttributes[_attr9], this, _attr9);\n        } else if (!(newOps[_attr9] instanceof _ParseOp.UnsetOp)) {\n          newValues[_attr9] = newOps[_attr9].applyTo(currentAttributes[_attr9]);\n        }\n      } // Validate changes\n\n\n      if (!options.ignoreValidation) {\n        var validation = this.validate(newValues);\n\n        if (validation) {\n          if (typeof options.error === 'function') {\n            options.error(this, validation);\n          }\n\n          return false;\n        }\n      } // Consolidate Ops\n\n\n      var pendingOps = this._getPendingOps();\n\n      var last = pendingOps.length - 1;\n\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      for (var _attr10 in newOps) {\n        var nextOp = newOps[_attr10].mergeWith(pendingOps[last][_attr10]);\n\n        stateController.setPendingOp(this._getStateIdentifier(), _attr10, nextOp);\n      }\n\n      return this;\n    }\n    /**\n     * Remove an attribute from the model. This is a noop if the attribute doesn't\n     * exist.\n     *\n     * @param {string} attr The string name of an attribute.\n     * @param options\n     * @returns {(ParseObject | boolean)}\n     */\n\n  }, {\n    key: \"unset\",\n    value: function (attr\n    /*: string*/\n    , options\n    /*:: ?: { [opt: string]: mixed }*/\n    )\n    /*: ParseObject | boolean*/\n    {\n      options = options || {};\n      options.unset = true;\n      return this.set(attr, null, options);\n    }\n    /**\n     * Atomically increments the value of the given attribute the next time the\n     * object is saved. If no amount is specified, 1 is used by default.\n     *\n     * @param attr {String} The key.\n     * @param amount {Number} The amount to increment by (optional).\n     * @returns {(ParseObject|boolean)}\n     */\n\n  }, {\n    key: \"increment\",\n    value: function (attr\n    /*: string*/\n    , amount\n    /*:: ?: number*/\n    )\n    /*: ParseObject | boolean*/\n    {\n      if (typeof amount === 'undefined') {\n        amount = 1;\n      }\n\n      if (typeof amount !== 'number') {\n        throw new Error('Cannot increment by a non-numeric amount.');\n      }\n\n      return this.set(attr, new _ParseOp.IncrementOp(amount));\n    }\n    /**\n     * Atomically decrements the value of the given attribute the next time the\n     * object is saved. If no amount is specified, 1 is used by default.\n     *\n     * @param attr {String} The key.\n     * @param amount {Number} The amount to decrement by (optional).\n     * @returns {(ParseObject | boolean)}\n     */\n\n  }, {\n    key: \"decrement\",\n    value: function (attr\n    /*: string*/\n    , amount\n    /*:: ?: number*/\n    )\n    /*: ParseObject | boolean*/\n    {\n      if (typeof amount === 'undefined') {\n        amount = 1;\n      }\n\n      if (typeof amount !== 'number') {\n        throw new Error('Cannot decrement by a non-numeric amount.');\n      }\n\n      return this.set(attr, new _ParseOp.IncrementOp(amount * -1));\n    }\n    /**\n     * Atomically add an object to the end of the array associated with a given\n     * key.\n     *\n     * @param attr {String} The key.\n     * @param item {} The item to add.\n     * @returns {(ParseObject | boolean)}\n     */\n\n  }, {\n    key: \"add\",\n    value: function (attr\n    /*: string*/\n    , item\n    /*: mixed*/\n    )\n    /*: ParseObject | boolean*/\n    {\n      return this.set(attr, new _ParseOp.AddOp([item]));\n    }\n    /**\n     * Atomically add the objects to the end of the array associated with a given\n     * key.\n     *\n     * @param attr {String} The key.\n     * @param items {Object[]} The items to add.\n     * @returns {(ParseObject | boolean)}\n     */\n\n  }, {\n    key: \"addAll\",\n    value: function (attr\n    /*: string*/\n    , items\n    /*: Array<mixed>*/\n    )\n    /*: ParseObject | boolean*/\n    {\n      return this.set(attr, new _ParseOp.AddOp(items));\n    }\n    /**\n     * Atomically add an object to the array associated with a given key, only\n     * if it is not already present in the array. The position of the insert is\n     * not guaranteed.\n     *\n     * @param attr {String} The key.\n     * @param item {} The object to add.\n     * @returns {(ParseObject | boolean)}\n     */\n\n  }, {\n    key: \"addUnique\",\n    value: function (attr\n    /*: string*/\n    , item\n    /*: mixed*/\n    )\n    /*: ParseObject | boolean*/\n    {\n      return this.set(attr, new _ParseOp.AddUniqueOp([item]));\n    }\n    /**\n     * Atomically add the objects to the array associated with a given key, only\n     * if it is not already present in the array. The position of the insert is\n     * not guaranteed.\n     *\n     * @param attr {String} The key.\n     * @param items {Object[]} The objects to add.\n     * @returns {(ParseObject | boolean)}\n     */\n\n  }, {\n    key: \"addAllUnique\",\n    value: function (attr\n    /*: string*/\n    , items\n    /*: Array<mixed>*/\n    )\n    /*: ParseObject | boolean*/\n    {\n      return this.set(attr, new _ParseOp.AddUniqueOp(items));\n    }\n    /**\n     * Atomically remove all instances of an object from the array associated\n     * with a given key.\n     *\n     * @param attr {String} The key.\n     * @param item {} The object to remove.\n     * @returns {(ParseObject | boolean)}\n     */\n\n  }, {\n    key: \"remove\",\n    value: function (attr\n    /*: string*/\n    , item\n    /*: mixed*/\n    )\n    /*: ParseObject | boolean*/\n    {\n      return this.set(attr, new _ParseOp.RemoveOp([item]));\n    }\n    /**\n     * Atomically remove all instances of the objects from the array associated\n     * with a given key.\n     *\n     * @param attr {String} The key.\n     * @param items {Object[]} The object to remove.\n     * @returns {(ParseObject | boolean)}\n     */\n\n  }, {\n    key: \"removeAll\",\n    value: function (attr\n    /*: string*/\n    , items\n    /*: Array<mixed>*/\n    )\n    /*: ParseObject | boolean*/\n    {\n      return this.set(attr, new _ParseOp.RemoveOp(items));\n    }\n    /**\n     * Returns an instance of a subclass of Parse.Op describing what kind of\n     * modification has been performed on this field since the last time it was\n     * saved. For example, after calling object.increment(\"x\"), calling\n     * object.op(\"x\") would return an instance of Parse.Op.Increment.\n     *\n     * @param attr {String} The key.\n     * @returns {Parse.Op} The operation, or undefined if none.\n     */\n\n  }, {\n    key: \"op\",\n    value: function (attr\n    /*: string*/\n    )\n    /*: ?Op*/\n    {\n      var pending = this._getPendingOps();\n\n      for (var i = pending.length; i--;) {\n        if (pending[i][attr]) {\n          return pending[i][attr];\n        }\n      }\n    }\n    /**\n     * Creates a new model with identical attributes to this one.\n     *\n     * @returns {Parse.Object}\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone()\n    /*: any*/\n    {\n      var clone = new this.constructor(this.className);\n      var attributes = this.attributes;\n\n      if (typeof this.constructor.readOnlyAttributes === 'function') {\n        var readonly = this.constructor.readOnlyAttributes() || []; // Attributes are frozen, so we have to rebuild an object,\n        // rather than delete readonly keys\n\n        var copy = {};\n\n        for (var a in attributes) {\n          if ((0, _indexOf.default)(readonly).call(readonly, a) < 0) {\n            copy[a] = attributes[a];\n          }\n        }\n\n        attributes = copy;\n      }\n\n      if (clone.set) {\n        clone.set(attributes);\n      }\n\n      return clone;\n    }\n    /**\n     * Creates a new instance of this object. Not to be confused with clone()\n     *\n     * @returns {Parse.Object}\n     */\n\n  }, {\n    key: \"newInstance\",\n    value: function ()\n    /*: any*/\n    {\n      var clone = new this.constructor(this.className);\n      clone.id = this.id;\n\n      if (singleInstance) {\n        // Just return an object with the right id\n        return clone;\n      }\n\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      if (stateController) {\n        stateController.duplicateState(this._getStateIdentifier(), clone._getStateIdentifier());\n      }\n\n      return clone;\n    }\n    /**\n     * Returns true if this object has never been saved to Parse.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isNew\",\n    value: function ()\n    /*: boolean*/\n    {\n      return !this.id;\n    }\n    /**\n     * Returns true if this object was created by the Parse server when the\n     * object might have already been there (e.g. in the case of a Facebook\n     * login)\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"existed\",\n    value: function ()\n    /*: boolean*/\n    {\n      if (!this.id) {\n        return false;\n      }\n\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      var state = stateController.getState(this._getStateIdentifier());\n\n      if (state) {\n        return state.existed;\n      }\n\n      return false;\n    }\n    /**\n     * Returns true if this object exists on the Server\n     *\n     * @param {object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     * @returns {Promise<boolean>} A boolean promise that is fulfilled if object exists.\n     */\n\n  }, {\n    key: \"exists\",\n    value: function () {\n      var _exists = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(options\n      /*:: ?: RequestOptions*/\n      ) {\n        var query;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.id) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", false);\n\n              case 2:\n                _context.prev = 2;\n                query = new _ParseQuery.default(this.className);\n                _context.next = 6;\n                return query.get(this.id, options);\n\n              case 6:\n                return _context.abrupt(\"return\", true);\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](2);\n\n                if (!(_context.t0.code === _ParseError.default.OBJECT_NOT_FOUND)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", false);\n\n              case 13:\n                throw _context.t0;\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 9]]);\n      }));\n\n      function exists(_x) {\n        return _exists.apply(this, arguments);\n      }\n\n      return exists;\n    }()\n    /**\n     * Checks if the model is currently in a valid state.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isValid\",\n    value: function isValid()\n    /*: boolean*/\n    {\n      return !this.validate(this.attributes);\n    }\n    /**\n     * You should not call this function directly unless you subclass\n     * <code>Parse.Object</code>, in which case you can override this method\n     * to provide additional validation on <code>set</code> and\n     * <code>save</code>.  Your implementation should return\n     *\n     * @param {object} attrs The current data to validate.\n     * @returns {Parse.Error|boolean} False if the data is valid.  An error object otherwise.\n     * @see Parse.Object#set\n     */\n\n  }, {\n    key: \"validate\",\n    value: function validate(attrs\n    /*: AttributeMap*/\n    )\n    /*: ParseError | boolean*/\n    {\n      if (attrs.hasOwnProperty('ACL') && !(attrs.ACL instanceof _ParseACL.default)) {\n        return new _ParseError.default(_ParseError.default.OTHER_CAUSE, 'ACL must be a Parse ACL.');\n      }\n\n      for (var _key in attrs) {\n        if (!/^[A-Za-z][0-9A-Za-z_.]*$/.test(_key)) {\n          return new _ParseError.default(_ParseError.default.INVALID_KEY_NAME);\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Returns the ACL for this object.\n     *\n     * @returns {Parse.ACL} An instance of Parse.ACL.\n     * @see Parse.Object#get\n     */\n\n  }, {\n    key: \"getACL\",\n    value: function getACL()\n    /*: ?ParseACL*/\n    {\n      var acl = this.get('ACL');\n\n      if (acl instanceof _ParseACL.default) {\n        return acl;\n      }\n\n      return null;\n    }\n    /**\n     * Sets the ACL to be used for this object.\n     *\n     * @param {Parse.ACL} acl An instance of Parse.ACL.\n     * @param {object} options\n     * @returns {(ParseObject | boolean)} Whether the set passed validation.\n     * @see Parse.Object#set\n     */\n\n  }, {\n    key: \"setACL\",\n    value: function setACL(acl\n    /*: ParseACL*/\n    , options\n    /*:: ?: mixed*/\n    )\n    /*: ParseObject | boolean*/\n    {\n      return this.set('ACL', acl, options);\n    }\n    /**\n     * Clears any (or specific) changes to this object made since the last call to save()\n     *\n     * @param {string} [keys] - specify which fields to revert\n     */\n\n  }, {\n    key: \"revert\",\n    value: function revert()\n    /*: void*/\n    {\n      var keysToRevert;\n\n      for (var _len = arguments.length, keys = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n        keys[_key2] = arguments[_key2];\n      }\n\n      if (keys.length) {\n        keysToRevert = [];\n\n        var _iterator = _createForOfIteratorHelper(keys),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _key3 = _step.value;\n\n            if (typeof _key3 === 'string') {\n              keysToRevert.push(_key3);\n            } else {\n              throw new Error('Parse.Object#revert expects either no, or a list of string, arguments.');\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      this._clearPendingOps(keysToRevert);\n    }\n    /**\n     * Clears all attributes on a model\n     *\n     * @returns {(ParseObject | boolean)}\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear()\n    /*: ParseObject | boolean*/\n    {\n      var attributes = this.attributes;\n      var erasable = {};\n      var readonly = ['createdAt', 'updatedAt'];\n\n      if (typeof this.constructor.readOnlyAttributes === 'function') {\n        readonly = (0, _concat.default)(readonly).call(readonly, this.constructor.readOnlyAttributes());\n      }\n\n      for (var _attr11 in attributes) {\n        if ((0, _indexOf.default)(readonly).call(readonly, _attr11) < 0) {\n          erasable[_attr11] = true;\n        }\n      }\n\n      return this.set(erasable, {\n        unset: true\n      });\n    }\n    /**\n     * Fetch the model from the server. If the server's representation of the\n     * model differs from its current attributes, they will be overriden.\n     *\n     * @param {object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     *   <li>include: The name(s) of the key(s) to include. Can be a string, an array of strings,\n     *       or an array of array of strings.\n     *   <li>context: A dictionary that is accessible in Cloud Code `beforeFind` trigger.\n     * </ul>\n     * @returns {Promise} A promise that is fulfilled when the fetch\n     *     completes.\n     */\n\n  }, {\n    key: \"fetch\",\n    value: function fetch(options\n    /*: RequestOptions*/\n    )\n    /*: Promise*/\n    {\n      options = options || {};\n      var fetchOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        fetchOptions.useMasterKey = options.useMasterKey;\n      }\n\n      if (options.hasOwnProperty('sessionToken')) {\n        fetchOptions.sessionToken = options.sessionToken;\n      }\n\n      if (options.hasOwnProperty('context') && (0, _typeof2.default)(options.context) === 'object') {\n        fetchOptions.context = options.context;\n      }\n\n      if (options.hasOwnProperty('include')) {\n        fetchOptions.include = [];\n\n        if ((0, _isArray.default)(options.include)) {\n          var _context2;\n\n          (0, _forEach.default)(_context2 = options.include).call(_context2, function (key) {\n            if ((0, _isArray.default)(key)) {\n              var _context3;\n\n              fetchOptions.include = (0, _concat.default)(_context3 = fetchOptions.include).call(_context3, key);\n            } else {\n              fetchOptions.include.push(key);\n            }\n          });\n        } else {\n          fetchOptions.include.push(options.include);\n        }\n      }\n\n      var controller = _CoreManager.default.getObjectController();\n\n      return controller.fetch(this, true, fetchOptions);\n    }\n    /**\n     * Fetch the model from the server. If the server's representation of the\n     * model differs from its current attributes, they will be overriden.\n     *\n     * Includes nested Parse.Objects for the provided key. You can use dot\n     * notation to specify which fields in the included object are also fetched.\n     *\n     * @param {string | Array<string | Array<string>>} keys The name(s) of the key(s) to include.\n     * @param {object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     * @returns {Promise} A promise that is fulfilled when the fetch\n     *     completes.\n     */\n\n  }, {\n    key: \"fetchWithInclude\",\n    value: function fetchWithInclude(keys\n    /*: String | Array<string | Array<string>>*/\n    , options\n    /*: RequestOptions*/\n    )\n    /*: Promise*/\n    {\n      options = options || {};\n      options.include = keys;\n      return this.fetch(options);\n    }\n    /**\n     * Saves this object to the server at some unspecified time in the future,\n     * even if Parse is currently inaccessible.\n     *\n     * Use this when you may not have a solid network connection, and don't need to know when the save completes.\n     * If there is some problem with the object such that it can't be saved, it will be silently discarded.\n     *\n     * Objects saved with this method will be stored locally in an on-disk cache until they can be delivered to Parse.\n     * They will be sent immediately if possible. Otherwise, they will be sent the next time a network connection is\n     * available. Objects saved this way will persist even after the app is closed, in which case they will be sent the\n     * next time the app is opened.\n     *\n     * @param {object} [options]\n     * Used to pass option parameters to method if arg1 and arg2 were both passed as strings.\n     * Valid options are:\n     * <ul>\n     * <li>sessionToken: A valid session token, used for making a request on\n     * behalf of a specific user.\n     * <li>cascadeSave: If `false`, nested objects will not be saved (default is `true`).\n     * <li>context: A dictionary that is accessible in Cloud Code `beforeSave` and `afterSave` triggers.\n     * </ul>\n     * @returns {Promise} A promise that is fulfilled when the save\n     * completes.\n     */\n\n  }, {\n    key: \"saveEventually\",\n    value: function () {\n      var _saveEventually = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(options\n      /*: SaveOptions*/\n      ) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return this.save(null, options);\n\n              case 3:\n                _context4.next = 11;\n                break;\n\n              case 5:\n                _context4.prev = 5;\n                _context4.t0 = _context4[\"catch\"](0);\n\n                if (!(_context4.t0.message === 'XMLHttpRequest failed: \"Unable to connect to the Parse API\"')) {\n                  _context4.next = 11;\n                  break;\n                }\n\n                _context4.next = 10;\n                return _EventuallyQueue.default.save(this, options);\n\n              case 10:\n                _EventuallyQueue.default.poll();\n\n              case 11:\n                return _context4.abrupt(\"return\", this);\n\n              case 12:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee2, this, [[0, 5]]);\n      }));\n\n      function saveEventually(_x2) {\n        return _saveEventually.apply(this, arguments);\n      }\n\n      return saveEventually;\n    }()\n    /**\n     * Set a hash of model attributes, and save the model to the server.\n     * updatedAt will be updated when the request returns.\n     * You can either call it as:<pre>\n     * object.save();</pre>\n     * or<pre>\n     * object.save(attrs);</pre>\n     * or<pre>\n     * object.save(null, options);</pre>\n     * or<pre>\n     * object.save(attrs, options);</pre>\n     * or<pre>\n     * object.save(key, value);</pre>\n     * or<pre>\n     * object.save(key, value, options);</pre>\n     *\n     * Example 1: <pre>\n     * gameTurn.save({\n     * player: \"Jake Cutter\",\n     * diceRoll: 2\n     * }).then(function(gameTurnAgain) {\n     * // The save was successful.\n     * }, function(error) {\n     * // The save failed.  Error is an instance of Parse.Error.\n     * });</pre>\n     *\n     * Example 2: <pre>\n     * gameTurn.save(\"player\", \"Jake Cutter\");</pre>\n     *\n     * @param {string | object | null} [arg1]\n     * Valid options are:<ul>\n     * <li>`Object` - Key/value pairs to update on the object.</li>\n     * <li>`String` Key - Key of attribute to update (requires arg2 to also be string)</li>\n     * <li>`null` - Passing null for arg1 allows you to save the object with options passed in arg2.</li>\n     * </ul>\n     * @param {string | object} [arg2]\n     * <ul>\n     * <li>`String` Value - If arg1 was passed as a key, arg2 is the value that should be set on that key.</li>\n     * <li>`Object` Options - Valid options are:\n     * <ul>\n     * <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     * be used for this request.\n     * <li>sessionToken: A valid session token, used for making a request on\n     * behalf of a specific user.\n     * <li>cascadeSave: If `false`, nested objects will not be saved (default is `true`).\n     * <li>context: A dictionary that is accessible in Cloud Code `beforeSave` and `afterSave` triggers.\n     * </ul>\n     * </li>\n     * </ul>\n     * @param {object} [arg3]\n     * Used to pass option parameters to method if arg1 and arg2 were both passed as strings.\n     * Valid options are:\n     * <ul>\n     * <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     * be used for this request.\n     * <li>sessionToken: A valid session token, used for making a request on\n     * behalf of a specific user.\n     * <li>cascadeSave: If `false`, nested objects will not be saved (default is `true`).\n     * <li>context: A dictionary that is accessible in Cloud Code `beforeSave` and `afterSave` triggers.\n     * </ul>\n     * @returns {Promise} A promise that is fulfilled when the save\n     * completes.\n     */\n\n  }, {\n    key: \"save\",\n    value: function save(arg1\n    /*: ?string | { [attr: string]: mixed }*/\n    , arg2\n    /*: SaveOptions | mixed*/\n    , arg3\n    /*:: ?: SaveOptions*/\n    )\n    /*: Promise*/\n    {\n      var _this = this;\n\n      var attrs;\n      var options;\n\n      if ((0, _typeof2.default)(arg1) === 'object' || typeof arg1 === 'undefined') {\n        attrs = arg1;\n\n        if ((0, _typeof2.default)(arg2) === 'object') {\n          options = arg2;\n        }\n      } else {\n        attrs = {};\n        attrs[arg1] = arg2;\n        options = arg3;\n      }\n\n      if (attrs) {\n        var validation = this.validate(attrs);\n\n        if (validation) {\n          return _promise.default.reject(validation);\n        }\n\n        this.set(attrs, options);\n      }\n\n      options = options || {};\n      var saveOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        saveOptions.useMasterKey = !!options.useMasterKey;\n      }\n\n      if (options.hasOwnProperty('sessionToken') && typeof options.sessionToken === 'string') {\n        saveOptions.sessionToken = options.sessionToken;\n      }\n\n      if (options.hasOwnProperty('installationId') && typeof options.installationId === 'string') {\n        saveOptions.installationId = options.installationId;\n      }\n\n      if (options.hasOwnProperty('context') && (0, _typeof2.default)(options.context) === 'object') {\n        saveOptions.context = options.context;\n      }\n\n      var controller = _CoreManager.default.getObjectController();\n\n      var unsaved = options.cascadeSave !== false ? (0, _unsavedChildren.default)(this) : null;\n      return controller.save(unsaved, saveOptions).then(function () {\n        return controller.save(_this, saveOptions);\n      });\n    }\n    /**\n     * Deletes this object from the server at some unspecified time in the future,\n     * even if Parse is currently inaccessible.\n     *\n     * Use this when you may not have a solid network connection,\n     * and don't need to know when the delete completes. If there is some problem with the object\n     * such that it can't be deleted, the request will be silently discarded.\n     *\n     * Delete instructions made with this method will be stored locally in an on-disk cache until they can be transmitted\n     * to Parse. They will be sent immediately if possible. Otherwise, they will be sent the next time a network connection\n     * is available. Delete requests will persist even after the app is closed, in which case they will be sent the\n     * next time the app is opened.\n     *\n     * @param {object} [options]\n     * Valid options are:<ul>\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     *   <li>context: A dictionary that is accessible in Cloud Code `beforeDelete` and `afterDelete` triggers.\n     * </ul>\n     * @returns {Promise} A promise that is fulfilled when the destroy\n     *     completes.\n     */\n\n  }, {\n    key: \"destroyEventually\",\n    value: function () {\n      var _destroyEventually = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(options\n      /*: RequestOptions*/\n      ) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return this.destroy(options);\n\n              case 3:\n                _context5.next = 11;\n                break;\n\n              case 5:\n                _context5.prev = 5;\n                _context5.t0 = _context5[\"catch\"](0);\n\n                if (!(_context5.t0.message === 'XMLHttpRequest failed: \"Unable to connect to the Parse API\"')) {\n                  _context5.next = 11;\n                  break;\n                }\n\n                _context5.next = 10;\n                return _EventuallyQueue.default.destroy(this, options);\n\n              case 10:\n                _EventuallyQueue.default.poll();\n\n              case 11:\n                return _context5.abrupt(\"return\", this);\n\n              case 12:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee3, this, [[0, 5]]);\n      }));\n\n      function destroyEventually(_x3) {\n        return _destroyEventually.apply(this, arguments);\n      }\n\n      return destroyEventually;\n    }()\n    /**\n     * Destroy this model on the server if it was already persisted.\n     *\n     * @param {object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     *   <li>context: A dictionary that is accessible in Cloud Code `beforeDelete` and `afterDelete` triggers.\n     * </ul>\n     * @returns {Promise} A promise that is fulfilled when the destroy\n     *     completes.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy(options\n    /*: RequestOptions*/\n    )\n    /*: Promise*/\n    {\n      options = options || {};\n      var destroyOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        destroyOptions.useMasterKey = options.useMasterKey;\n      }\n\n      if (options.hasOwnProperty('sessionToken')) {\n        destroyOptions.sessionToken = options.sessionToken;\n      }\n\n      if (options.hasOwnProperty('context') && (0, _typeof2.default)(options.context) === 'object') {\n        destroyOptions.context = options.context;\n      }\n\n      if (!this.id) {\n        return _promise.default.resolve();\n      }\n\n      return _CoreManager.default.getObjectController().destroy(this, destroyOptions);\n    }\n    /**\n     * Asynchronously stores the object and every object it points to in the local datastore,\n     * recursively, using a default pin name: _default.\n     *\n     * If those other objects have not been fetched from Parse, they will not be stored.\n     * However, if they have changed data, all the changes will be retained.\n     *\n     * <pre>\n     * await object.pin();\n     * </pre>\n     *\n     * To retrieve object:\n     * <code>query.fromLocalDatastore()</code> or <code>query.fromPin()</code>\n     *\n     * @returns {Promise} A promise that is fulfilled when the pin completes.\n     */\n\n  }, {\n    key: \"pin\",\n    value: function pin()\n    /*: Promise<void>*/\n    {\n      return ParseObject.pinAllWithName(_LocalDatastoreUtils.DEFAULT_PIN, [this]);\n    }\n    /**\n     * Asynchronously removes the object and every object it points to in the local datastore,\n     * recursively, using a default pin name: _default.\n     *\n     * <pre>\n     * await object.unPin();\n     * </pre>\n     *\n     * @returns {Promise} A promise that is fulfilled when the unPin completes.\n     */\n\n  }, {\n    key: \"unPin\",\n    value: function unPin()\n    /*: Promise<void>*/\n    {\n      return ParseObject.unPinAllWithName(_LocalDatastoreUtils.DEFAULT_PIN, [this]);\n    }\n    /**\n     * Asynchronously returns if the object is pinned\n     *\n     * <pre>\n     * const isPinned = await object.isPinned();\n     * </pre>\n     *\n     * @returns {Promise<boolean>} A boolean promise that is fulfilled if object is pinned.\n     */\n\n  }, {\n    key: \"isPinned\",\n    value: function () {\n      var _isPinned = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var localDatastore, objectKey, pin;\n        return _regeneratorRuntime().wrap(function _callee4$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                localDatastore = _CoreManager.default.getLocalDatastore();\n\n                if (localDatastore.isEnabled) {\n                  _context6.next = 3;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", _promise.default.reject('Parse.enableLocalDatastore() must be called first'));\n\n              case 3:\n                objectKey = localDatastore.getKeyForObject(this);\n                _context6.next = 6;\n                return localDatastore.fromPinWithName(objectKey);\n\n              case 6:\n                pin = _context6.sent;\n                return _context6.abrupt(\"return\", pin.length > 0);\n\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function isPinned() {\n        return _isPinned.apply(this, arguments);\n      }\n\n      return isPinned;\n    }()\n    /**\n     * Asynchronously stores the objects and every object they point to in the local datastore, recursively.\n     *\n     * If those other objects have not been fetched from Parse, they will not be stored.\n     * However, if they have changed data, all the changes will be retained.\n     *\n     * <pre>\n     * await object.pinWithName(name);\n     * </pre>\n     *\n     * To retrieve object:\n     * <code>query.fromLocalDatastore()</code> or <code>query.fromPinWithName(name)</code>\n     *\n     * @param {string} name Name of Pin.\n     * @returns {Promise} A promise that is fulfilled when the pin completes.\n     */\n\n  }, {\n    key: \"pinWithName\",\n    value: function pinWithName(name\n    /*: string*/\n    )\n    /*: Promise<void>*/\n    {\n      return ParseObject.pinAllWithName(name, [this]);\n    }\n    /**\n     * Asynchronously removes the object and every object it points to in the local datastore, recursively.\n     *\n     * <pre>\n     * await object.unPinWithName(name);\n     * </pre>\n     *\n     * @param {string} name Name of Pin.\n     * @returns {Promise} A promise that is fulfilled when the unPin completes.\n     */\n\n  }, {\n    key: \"unPinWithName\",\n    value: function unPinWithName(name\n    /*: string*/\n    )\n    /*: Promise<void>*/\n    {\n      return ParseObject.unPinAllWithName(name, [this]);\n    }\n    /**\n     * Asynchronously loads data from the local datastore into this object.\n     *\n     * <pre>\n     * await object.fetchFromLocalDatastore();\n     * </pre>\n     *\n     * You can create an unfetched pointer with <code>Parse.Object.createWithoutData()</code>\n     * and then call <code>fetchFromLocalDatastore()</code> on it.\n     *\n     * @returns {Promise} A promise that is fulfilled when the fetch completes.\n     */\n\n  }, {\n    key: \"fetchFromLocalDatastore\",\n    value: function () {\n      var _fetchFromLocalDatastore = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var localDatastore, objectKey, pinned, result;\n        return _regeneratorRuntime().wrap(function _callee5$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                localDatastore = _CoreManager.default.getLocalDatastore();\n\n                if (localDatastore.isEnabled) {\n                  _context7.next = 3;\n                  break;\n                }\n\n                throw new Error('Parse.enableLocalDatastore() must be called first');\n\n              case 3:\n                objectKey = localDatastore.getKeyForObject(this);\n                _context7.next = 6;\n                return localDatastore._serializeObject(objectKey);\n\n              case 6:\n                pinned = _context7.sent;\n\n                if (pinned) {\n                  _context7.next = 9;\n                  break;\n                }\n\n                throw new Error('Cannot fetch an unsaved ParseObject');\n\n              case 9:\n                result = ParseObject.fromJSON(pinned);\n\n                this._finishFetch(result.toJSON());\n\n                return _context7.abrupt(\"return\", this);\n\n              case 12:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function fetchFromLocalDatastore() {\n        return _fetchFromLocalDatastore.apply(this, arguments);\n      }\n\n      return fetchFromLocalDatastore;\n    }()\n    /** Static methods **/\n\n  }], [{\n    key: \"_getClassMap\",\n    value: function _getClassMap() {\n      return classMap;\n    }\n  }, {\n    key: \"_clearAllState\",\n    value: function _clearAllState() {\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      stateController.clearAllState();\n    }\n    /**\n     * Fetches the given list of Parse.Object.\n     * If any error is encountered, stops and calls the error handler.\n     *\n     * <pre>\n     *   Parse.Object.fetchAll([object1, object2, ...])\n     *    .then((list) => {\n     *      // All the objects were fetched.\n     *    }, (error) => {\n     *      // An error occurred while fetching one of the objects.\n     *    });\n     * </pre>\n     *\n     * @param {Array} list A list of <code>Parse.Object</code>.\n     * @param {object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     *   <li>include: The name(s) of the key(s) to include. Can be a string, an array of strings,\n     *       or an array of array of strings.\n     * </ul>\n     * @static\n     * @returns {Parse.Object[]}\n     */\n\n  }, {\n    key: \"fetchAll\",\n    value: function fetchAll(list\n    /*: Array<ParseObject>*/\n    ) {\n      var options\n      /*: RequestOptions*/\n      = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var queryOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        queryOptions.useMasterKey = options.useMasterKey;\n      }\n\n      if (options.hasOwnProperty('sessionToken')) {\n        queryOptions.sessionToken = options.sessionToken;\n      }\n\n      if (options.hasOwnProperty('include')) {\n        queryOptions.include = ParseObject.handleIncludeOptions(options);\n      }\n\n      return _CoreManager.default.getObjectController().fetch(list, true, queryOptions);\n    }\n    /**\n     * Fetches the given list of Parse.Object.\n     *\n     * Includes nested Parse.Objects for the provided key. You can use dot\n     * notation to specify which fields in the included object are also fetched.\n     *\n     * If any error is encountered, stops and calls the error handler.\n     *\n     * <pre>\n     *   Parse.Object.fetchAllWithInclude([object1, object2, ...], [pointer1, pointer2, ...])\n     *    .then((list) => {\n     *      // All the objects were fetched.\n     *    }, (error) => {\n     *      // An error occurred while fetching one of the objects.\n     *    });\n     * </pre>\n     *\n     * @param {Array} list A list of <code>Parse.Object</code>.\n     * @param {string | Array<string | Array<string>>} keys The name(s) of the key(s) to include.\n     * @param {object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     * @static\n     * @returns {Parse.Object[]}\n     */\n\n  }, {\n    key: \"fetchAllWithInclude\",\n    value: function fetchAllWithInclude(list\n    /*: Array<ParseObject>*/\n    , keys\n    /*: String | Array<string | Array<string>>*/\n    , options\n    /*: RequestOptions*/\n    ) {\n      options = options || {};\n      options.include = keys;\n      return ParseObject.fetchAll(list, options);\n    }\n    /**\n     * Fetches the given list of Parse.Object if needed.\n     * If any error is encountered, stops and calls the error handler.\n     *\n     * Includes nested Parse.Objects for the provided key. You can use dot\n     * notation to specify which fields in the included object are also fetched.\n     *\n     * If any error is encountered, stops and calls the error handler.\n     *\n     * <pre>\n     *   Parse.Object.fetchAllIfNeededWithInclude([object1, object2, ...], [pointer1, pointer2, ...])\n     *    .then((list) => {\n     *      // All the objects were fetched.\n     *    }, (error) => {\n     *      // An error occurred while fetching one of the objects.\n     *    });\n     * </pre>\n     *\n     * @param {Array} list A list of <code>Parse.Object</code>.\n     * @param {string | Array<string | Array<string>>} keys The name(s) of the key(s) to include.\n     * @param {object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     * @static\n     * @returns {Parse.Object[]}\n     */\n\n  }, {\n    key: \"fetchAllIfNeededWithInclude\",\n    value: function fetchAllIfNeededWithInclude(list\n    /*: Array<ParseObject>*/\n    , keys\n    /*: String | Array<string | Array<string>>*/\n    , options\n    /*: RequestOptions*/\n    ) {\n      options = options || {};\n      options.include = keys;\n      return ParseObject.fetchAllIfNeeded(list, options);\n    }\n    /**\n     * Fetches the given list of Parse.Object if needed.\n     * If any error is encountered, stops and calls the error handler.\n     *\n     * <pre>\n     *   Parse.Object.fetchAllIfNeeded([object1, ...])\n     *    .then((list) => {\n     *      // Objects were fetched and updated.\n     *    }, (error) => {\n     *      // An error occurred while fetching one of the objects.\n     *    });\n     * </pre>\n     *\n     * @param {Array} list A list of <code>Parse.Object</code>.\n     * @param {object} options\n     * @static\n     * @returns {Parse.Object[]}\n     */\n\n  }, {\n    key: \"fetchAllIfNeeded\",\n    value: function fetchAllIfNeeded(list\n    /*: Array<ParseObject>*/\n    , options) {\n      options = options || {};\n      var queryOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        queryOptions.useMasterKey = options.useMasterKey;\n      }\n\n      if (options.hasOwnProperty('sessionToken')) {\n        queryOptions.sessionToken = options.sessionToken;\n      }\n\n      if (options.hasOwnProperty('include')) {\n        queryOptions.include = ParseObject.handleIncludeOptions(options);\n      }\n\n      return _CoreManager.default.getObjectController().fetch(list, false, queryOptions);\n    }\n  }, {\n    key: \"handleIncludeOptions\",\n    value: function handleIncludeOptions(options) {\n      var include = [];\n\n      if ((0, _isArray.default)(options.include)) {\n        var _context8;\n\n        (0, _forEach.default)(_context8 = options.include).call(_context8, function (key) {\n          if ((0, _isArray.default)(key)) {\n            include = (0, _concat.default)(include).call(include, key);\n          } else {\n            include.push(key);\n          }\n        });\n      } else {\n        include.push(options.include);\n      }\n\n      return include;\n    }\n    /**\n     * Destroy the given list of models on the server if it was already persisted.\n     *\n     * <p>Unlike saveAll, if an error occurs while deleting an individual model,\n     * this method will continue trying to delete the rest of the models if\n     * possible, except in the case of a fatal error like a connection error.\n     *\n     * <p>In particular, the Parse.Error object returned in the case of error may\n     * be one of two types:\n     *\n     * <ul>\n     * <li>A Parse.Error.AGGREGATE_ERROR. This object's \"errors\" property is an\n     * array of other Parse.Error objects. Each error object in this array\n     * has an \"object\" property that references the object that could not be\n     * deleted (for instance, because that object could not be found).</li>\n     * <li>A non-aggregate Parse.Error. This indicates a serious error that\n     * caused the delete operation to be aborted partway through (for\n     * instance, a connection failure in the middle of the delete).</li>\n     * </ul>\n     *\n     * <pre>\n     * Parse.Object.destroyAll([object1, object2, ...])\n     * .then((list) => {\n     * // All the objects were deleted.\n     * }, (error) => {\n     * // An error occurred while deleting one or more of the objects.\n     * // If this is an aggregate error, then we can inspect each error\n     * // object individually to determine the reason why a particular\n     * // object was not deleted.\n     * if (error.code === Parse.Error.AGGREGATE_ERROR) {\n     * for (var i = 0; i < error.errors.length; i++) {\n     * console.log(\"Couldn't delete \" + error.errors[i].object.id +\n     * \"due to \" + error.errors[i].message);\n     * }\n     * } else {\n     * console.log(\"Delete aborted because of \" + error.message);\n     * }\n     * });\n     * </pre>\n     *\n     * @param {Array} list A list of <code>Parse.Object</code>.\n     * @param {object} options\n     * @static\n     * @returns {Promise} A promise that is fulfilled when the destroyAll\n     * completes.\n     */\n\n  }, {\n    key: \"destroyAll\",\n    value: function destroyAll(list\n    /*: Array<ParseObject>*/\n    ) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var destroyOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        destroyOptions.useMasterKey = options.useMasterKey;\n      }\n\n      if (options.hasOwnProperty('sessionToken')) {\n        destroyOptions.sessionToken = options.sessionToken;\n      }\n\n      if (options.hasOwnProperty('batchSize') && typeof options.batchSize === 'number') {\n        destroyOptions.batchSize = options.batchSize;\n      }\n\n      if (options.hasOwnProperty('context') && (0, _typeof2.default)(options.context) === 'object') {\n        destroyOptions.context = options.context;\n      }\n\n      return _CoreManager.default.getObjectController().destroy(list, destroyOptions);\n    }\n    /**\n     * Saves the given list of Parse.Object.\n     * If any error is encountered, stops and calls the error handler.\n     *\n     * <pre>\n     * Parse.Object.saveAll([object1, object2, ...])\n     * .then((list) => {\n     * // All the objects were saved.\n     * }, (error) => {\n     * // An error occurred while saving one of the objects.\n     * });\n     * </pre>\n     *\n     * @param {Array} list A list of <code>Parse.Object</code>.\n     * @param {object} options\n     * @static\n     * @returns {Parse.Object[]}\n     */\n\n  }, {\n    key: \"saveAll\",\n    value: function saveAll(list\n    /*: Array<ParseObject>*/\n    ) {\n      var options\n      /*: RequestOptions*/\n      = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var saveOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        saveOptions.useMasterKey = options.useMasterKey;\n      }\n\n      if (options.hasOwnProperty('sessionToken')) {\n        saveOptions.sessionToken = options.sessionToken;\n      }\n\n      if (options.hasOwnProperty('batchSize') && typeof options.batchSize === 'number') {\n        saveOptions.batchSize = options.batchSize;\n      }\n\n      if (options.hasOwnProperty('context') && (0, _typeof2.default)(options.context) === 'object') {\n        saveOptions.context = options.context;\n      }\n\n      return _CoreManager.default.getObjectController().save(list, saveOptions);\n    }\n    /**\n     * Creates a reference to a subclass of Parse.Object with the given id. This\n     * does not exist on Parse.Object, only on subclasses.\n     *\n     * <p>A shortcut for: <pre>\n     *  var Foo = Parse.Object.extend(\"Foo\");\n     *  var pointerToFoo = new Foo();\n     *  pointerToFoo.id = \"myObjectId\";\n     * </pre>\n     *\n     * @param {string} id The ID of the object to create a reference to.\n     * @static\n     * @returns {Parse.Object} A Parse.Object reference.\n     */\n\n  }, {\n    key: \"createWithoutData\",\n    value: function createWithoutData(id\n    /*: string*/\n    ) {\n      var obj = new this();\n      obj.id = id;\n      return obj;\n    }\n    /**\n     * Creates a new instance of a Parse Object from a JSON representation.\n     *\n     * @param {object} json The JSON map of the Object's data\n     * @param {boolean} override In single instance mode, all old server data\n     *   is overwritten if this is set to true\n     * @param {boolean} dirty Whether the Parse.Object should set JSON keys to dirty\n     * @static\n     * @returns {Parse.Object} A Parse.Object reference\n     */\n\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json\n    /*: any*/\n    , override\n    /*:: ?: boolean*/\n    , dirty\n    /*:: ?: boolean*/\n    ) {\n      if (!json.className) {\n        throw new Error('Cannot create an object without a className');\n      }\n\n      var constructor = classMap[json.className];\n      var o = constructor ? new constructor(json.className) : new ParseObject(json.className);\n      var otherAttributes = {};\n\n      for (var _attr12 in json) {\n        if (_attr12 !== 'className' && _attr12 !== '__type') {\n          otherAttributes[_attr12] = json[_attr12];\n\n          if (dirty) {\n            o.set(_attr12, json[_attr12]);\n          }\n        }\n      }\n\n      if (override) {\n        // id needs to be set before clearServerData can work\n        if (otherAttributes.objectId) {\n          o.id = otherAttributes.objectId;\n        }\n\n        var preserved = null;\n\n        if (typeof o._preserveFieldsOnFetch === 'function') {\n          preserved = o._preserveFieldsOnFetch();\n        }\n\n        o._clearServerData();\n\n        if (preserved) {\n          o._finishFetch(preserved);\n        }\n      }\n\n      o._finishFetch(otherAttributes);\n\n      if (json.objectId) {\n        o._setExisted(true);\n      }\n\n      return o;\n    }\n    /**\n     * Registers a subclass of Parse.Object with a specific class name.\n     * When objects of that class are retrieved from a query, they will be\n     * instantiated with this subclass.\n     * This is only necessary when using ES6 subclassing.\n     *\n     * @param {string} className The class name of the subclass\n     * @param {Function} constructor The subclass\n     */\n\n  }, {\n    key: \"registerSubclass\",\n    value: function registerSubclass(className\n    /*: string*/\n    , constructor\n    /*: any*/\n    ) {\n      if (typeof className !== 'string') {\n        throw new TypeError('The first argument must be a valid class name.');\n      }\n\n      if (typeof constructor === 'undefined') {\n        throw new TypeError('You must supply a subclass constructor.');\n      }\n\n      if (typeof constructor !== 'function') {\n        throw new TypeError('You must register the subclass constructor. ' + 'Did you attempt to register an instance of the subclass?');\n      }\n\n      classMap[className] = constructor;\n\n      if (!constructor.className) {\n        constructor.className = className;\n      }\n    }\n    /**\n     * Unegisters a subclass of Parse.Object with a specific class name.\n     *\n     * @param {string} className The class name of the subclass\n     */\n\n  }, {\n    key: \"unregisterSubclass\",\n    value: function unregisterSubclass(className\n    /*: string*/\n    ) {\n      if (typeof className !== 'string') {\n        throw new TypeError('The first argument must be a valid class name.');\n      }\n\n      delete classMap[className];\n    }\n    /**\n     * Creates a new subclass of Parse.Object for the given Parse class name.\n     *\n     * <p>Every extension of a Parse class will inherit from the most recent\n     * previous extension of that class. When a Parse.Object is automatically\n     * created by parsing JSON, it will use the most recent extension of that\n     * class.</p>\n     *\n     * <p>You should call either:<pre>\n     *     var MyClass = Parse.Object.extend(\"MyClass\", {\n     *         <i>Instance methods</i>,\n     *         initialize: function(attrs, options) {\n     *             this.someInstanceProperty = [],\n     *             <i>Other instance properties</i>\n     *         }\n     *     }, {\n     *         <i>Class properties</i>\n     *     });</pre>\n     * or, for Backbone compatibility:<pre>\n     *     var MyClass = Parse.Object.extend({\n     *         className: \"MyClass\",\n     *         <i>Instance methods</i>,\n     *         initialize: function(attrs, options) {\n     *             this.someInstanceProperty = [],\n     *             <i>Other instance properties</i>\n     *         }\n     *     }, {\n     *         <i>Class properties</i>\n     *     });</pre></p>\n     *\n     * @param {string} className The name of the Parse class backing this model.\n     * @param {object} protoProps Instance properties to add to instances of the\n     *     class returned from this method.\n     * @param {object} classProps Class properties to add the class returned from\n     *     this method.\n     * @returns {Parse.Object} A new subclass of Parse.Object.\n     */\n\n  }, {\n    key: \"extend\",\n    value: function extend(className\n    /*: any*/\n    , protoProps\n    /*: any*/\n    , classProps\n    /*: any*/\n    ) {\n      if (typeof className !== 'string') {\n        if (className && typeof className.className === 'string') {\n          return ParseObject.extend(className.className, className, protoProps);\n        } else {\n          throw new Error(\"Parse.Object.extend's first argument should be the className.\");\n        }\n      }\n\n      var adjustedClassName = className;\n\n      if (adjustedClassName === 'User' && _CoreManager.default.get('PERFORM_USER_REWRITE')) {\n        adjustedClassName = '_User';\n      }\n\n      var parentProto = ParseObject.prototype;\n\n      if (this.hasOwnProperty('__super__') && this.__super__) {\n        parentProto = this.prototype;\n      }\n\n      var ParseObjectSubclass = function ParseObjectSubclass(attributes, options) {\n        this.className = adjustedClassName;\n        this._objCount = objectCount++; // Enable legacy initializers\n\n        if (typeof this.initialize === 'function') {\n          this.initialize.apply(this, arguments);\n        }\n\n        if (this._initializers) {\n          var _iterator2 = _createForOfIteratorHelper(this._initializers),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var initializer = _step2.value;\n              initializer.apply(this, arguments);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n\n        if (attributes && (0, _typeof2.default)(attributes) === 'object') {\n          if (!this.set(attributes || {}, options)) {\n            throw new Error(\"Can't create an invalid Parse Object\");\n          }\n        }\n      };\n\n      if (classMap[adjustedClassName]) {\n        ParseObjectSubclass = classMap[adjustedClassName];\n      } else {\n        ParseObjectSubclass.extend = function (name, protoProps, classProps) {\n          if (typeof name === 'string') {\n            return ParseObject.extend.call(ParseObjectSubclass, name, protoProps, classProps);\n          }\n\n          return ParseObject.extend.call(ParseObjectSubclass, adjustedClassName, name, protoProps);\n        };\n\n        ParseObjectSubclass.createWithoutData = ParseObject.createWithoutData;\n        ParseObjectSubclass.className = adjustedClassName;\n        ParseObjectSubclass.__super__ = parentProto;\n        ParseObjectSubclass.prototype = (0, _create.default)(parentProto, {\n          constructor: {\n            value: ParseObjectSubclass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n      }\n\n      if (protoProps) {\n        for (var prop in protoProps) {\n          if (prop === 'initialize') {\n            var _context9;\n\n            (0, _defineProperty2.default)(ParseObjectSubclass.prototype, '_initializers', {\n              value: (0, _concat.default)(_context9 = []).call(_context9, (0, _toConsumableArray2.default)(ParseObjectSubclass.prototype._initializers || []), [protoProps[prop]]),\n              enumerable: false,\n              writable: true,\n              configurable: true\n            });\n            continue;\n          }\n\n          if (prop !== 'className') {\n            (0, _defineProperty2.default)(ParseObjectSubclass.prototype, prop, {\n              value: protoProps[prop],\n              enumerable: false,\n              writable: true,\n              configurable: true\n            });\n          }\n        }\n      }\n\n      if (classProps) {\n        for (var _prop in classProps) {\n          if (_prop !== 'className') {\n            (0, _defineProperty2.default)(ParseObjectSubclass, _prop, {\n              value: classProps[_prop],\n              enumerable: false,\n              writable: true,\n              configurable: true\n            });\n          }\n        }\n      }\n\n      classMap[adjustedClassName] = ParseObjectSubclass;\n      return ParseObjectSubclass;\n    }\n    /**\n     * Enable single instance objects, where any local objects with the same Id\n     * share the same attributes, and stay synchronized with each other.\n     * This is disabled by default in server environments, since it can lead to\n     * security issues.\n     *\n     * @static\n     */\n\n  }, {\n    key: \"enableSingleInstance\",\n    value: function enableSingleInstance() {\n      singleInstance = true;\n\n      _CoreManager.default.setObjectStateController(SingleInstanceStateController);\n    }\n    /**\n     * Disable single instance objects, where any local objects with the same Id\n     * share the same attributes, and stay synchronized with each other.\n     * When disabled, you can have two instances of the same object in memory\n     * without them sharing attributes.\n     *\n     * @static\n     */\n\n  }, {\n    key: \"disableSingleInstance\",\n    value: function disableSingleInstance() {\n      singleInstance = false;\n\n      _CoreManager.default.setObjectStateController(UniqueInstanceStateController);\n    }\n    /**\n     * Asynchronously stores the objects and every object they point to in the local datastore,\n     * recursively, using a default pin name: _default.\n     *\n     * If those other objects have not been fetched from Parse, they will not be stored.\n     * However, if they have changed data, all the changes will be retained.\n     *\n     * <pre>\n     * await Parse.Object.pinAll([...]);\n     * </pre>\n     *\n     * To retrieve object:\n     * <code>query.fromLocalDatastore()</code> or <code>query.fromPin()</code>\n     *\n     * @param {Array} objects A list of <code>Parse.Object</code>.\n     * @returns {Promise} A promise that is fulfilled when the pin completes.\n     * @static\n     */\n\n  }, {\n    key: \"pinAll\",\n    value: function pinAll(objects\n    /*: Array<ParseObject>*/\n    )\n    /*: Promise<void>*/\n    {\n      var localDatastore = _CoreManager.default.getLocalDatastore();\n\n      if (!localDatastore.isEnabled) {\n        return _promise.default.reject('Parse.enableLocalDatastore() must be called first');\n      }\n\n      return ParseObject.pinAllWithName(_LocalDatastoreUtils.DEFAULT_PIN, objects);\n    }\n    /**\n     * Asynchronously stores the objects and every object they point to in the local datastore, recursively.\n     *\n     * If those other objects have not been fetched from Parse, they will not be stored.\n     * However, if they have changed data, all the changes will be retained.\n     *\n     * <pre>\n     * await Parse.Object.pinAllWithName(name, [obj1, obj2, ...]);\n     * </pre>\n     *\n     * To retrieve object:\n     * <code>query.fromLocalDatastore()</code> or <code>query.fromPinWithName(name)</code>\n     *\n     * @param {string} name Name of Pin.\n     * @param {Array} objects A list of <code>Parse.Object</code>.\n     * @returns {Promise} A promise that is fulfilled when the pin completes.\n     * @static\n     */\n\n  }, {\n    key: \"pinAllWithName\",\n    value: function pinAllWithName(name\n    /*: string*/\n    , objects\n    /*: Array<ParseObject>*/\n    )\n    /*: Promise<void>*/\n    {\n      var localDatastore = _CoreManager.default.getLocalDatastore();\n\n      if (!localDatastore.isEnabled) {\n        return _promise.default.reject('Parse.enableLocalDatastore() must be called first');\n      }\n\n      return localDatastore._handlePinAllWithName(name, objects);\n    }\n    /**\n     * Asynchronously removes the objects and every object they point to in the local datastore,\n     * recursively, using a default pin name: _default.\n     *\n     * <pre>\n     * await Parse.Object.unPinAll([...]);\n     * </pre>\n     *\n     * @param {Array} objects A list of <code>Parse.Object</code>.\n     * @returns {Promise} A promise that is fulfilled when the unPin completes.\n     * @static\n     */\n\n  }, {\n    key: \"unPinAll\",\n    value: function unPinAll(objects\n    /*: Array<ParseObject>*/\n    )\n    /*: Promise<void>*/\n    {\n      var localDatastore = _CoreManager.default.getLocalDatastore();\n\n      if (!localDatastore.isEnabled) {\n        return _promise.default.reject('Parse.enableLocalDatastore() must be called first');\n      }\n\n      return ParseObject.unPinAllWithName(_LocalDatastoreUtils.DEFAULT_PIN, objects);\n    }\n    /**\n     * Asynchronously removes the objects and every object they point to in the local datastore, recursively.\n     *\n     * <pre>\n     * await Parse.Object.unPinAllWithName(name, [obj1, obj2, ...]);\n     * </pre>\n     *\n     * @param {string} name Name of Pin.\n     * @param {Array} objects A list of <code>Parse.Object</code>.\n     * @returns {Promise} A promise that is fulfilled when the unPin completes.\n     * @static\n     */\n\n  }, {\n    key: \"unPinAllWithName\",\n    value: function unPinAllWithName(name\n    /*: string*/\n    , objects\n    /*: Array<ParseObject>*/\n    )\n    /*: Promise<void>*/\n    {\n      var localDatastore = _CoreManager.default.getLocalDatastore();\n\n      if (!localDatastore.isEnabled) {\n        return _promise.default.reject('Parse.enableLocalDatastore() must be called first');\n      }\n\n      return localDatastore._handleUnPinAllWithName(name, objects);\n    }\n    /**\n     * Asynchronously removes all objects in the local datastore using a default pin name: _default.\n     *\n     * <pre>\n     * await Parse.Object.unPinAllObjects();\n     * </pre>\n     *\n     * @returns {Promise} A promise that is fulfilled when the unPin completes.\n     * @static\n     */\n\n  }, {\n    key: \"unPinAllObjects\",\n    value: function unPinAllObjects()\n    /*: Promise<void>*/\n    {\n      var localDatastore = _CoreManager.default.getLocalDatastore();\n\n      if (!localDatastore.isEnabled) {\n        return _promise.default.reject('Parse.enableLocalDatastore() must be called first');\n      }\n\n      return localDatastore.unPinWithName(_LocalDatastoreUtils.DEFAULT_PIN);\n    }\n    /**\n     * Asynchronously removes all objects with the specified pin name.\n     * Deletes the pin name also.\n     *\n     * <pre>\n     * await Parse.Object.unPinAllObjectsWithName(name);\n     * </pre>\n     *\n     * @param {string} name Name of Pin.\n     * @returns {Promise} A promise that is fulfilled when the unPin completes.\n     * @static\n     */\n\n  }, {\n    key: \"unPinAllObjectsWithName\",\n    value: function unPinAllObjectsWithName(name\n    /*: string*/\n    )\n    /*: Promise<void>*/\n    {\n      var localDatastore = _CoreManager.default.getLocalDatastore();\n\n      if (!localDatastore.isEnabled) {\n        return _promise.default.reject('Parse.enableLocalDatastore() must be called first');\n      }\n\n      return localDatastore.unPinWithName(_LocalDatastoreUtils.PIN_PREFIX + name);\n    }\n  }]);\n  return ParseObject;\n}();\n\nvar DefaultController = {\n  fetch: function fetch(target\n  /*: ParseObject | Array<ParseObject>*/\n  , forceFetch\n  /*: boolean*/\n  , options\n  /*: RequestOptions*/\n  )\n  /*: Promise<Array<void> | ParseObject>*/\n  {\n    var localDatastore = _CoreManager.default.getLocalDatastore();\n\n    if ((0, _isArray.default)(target)) {\n      if (target.length < 1) {\n        return _promise.default.resolve([]);\n      }\n\n      var objs = [];\n      var ids = [];\n      var className = null;\n      var results = [];\n      var error = null;\n      (0, _forEach.default)(target).call(target, function (el) {\n        if (error) {\n          return;\n        }\n\n        if (!className) {\n          className = el.className;\n        }\n\n        if (className !== el.className) {\n          error = new _ParseError.default(_ParseError.default.INVALID_CLASS_NAME, 'All objects should be of the same class');\n        }\n\n        if (!el.id) {\n          error = new _ParseError.default(_ParseError.default.MISSING_OBJECT_ID, 'All objects must have an ID');\n        }\n\n        if (forceFetch || !el.isDataAvailable()) {\n          ids.push(el.id);\n          objs.push(el);\n        }\n\n        results.push(el);\n      });\n\n      if (error) {\n        return _promise.default.reject(error);\n      }\n\n      var query = new _ParseQuery.default(className);\n      query.containedIn('objectId', ids);\n\n      if (options && options.include) {\n        query.include(options.include);\n      }\n\n      query._limit = ids.length;\n      return (0, _find.default)(query).call(query, options).then( /*#__PURE__*/function () {\n        var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(objects) {\n          var idMap, i, obj, _i, _obj, id, _iterator3, _step3, object;\n\n          return _regeneratorRuntime().wrap(function _callee6$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  idMap = {};\n                  (0, _forEach.default)(objects).call(objects, function (o) {\n                    idMap[o.id] = o;\n                  });\n                  i = 0;\n\n                case 3:\n                  if (!(i < objs.length)) {\n                    _context10.next = 11;\n                    break;\n                  }\n\n                  obj = objs[i];\n\n                  if (!(!obj || !obj.id || !idMap[obj.id])) {\n                    _context10.next = 8;\n                    break;\n                  }\n\n                  if (!forceFetch) {\n                    _context10.next = 8;\n                    break;\n                  }\n\n                  return _context10.abrupt(\"return\", _promise.default.reject(new _ParseError.default(_ParseError.default.OBJECT_NOT_FOUND, 'All objects must exist on the server.')));\n\n                case 8:\n                  i++;\n                  _context10.next = 3;\n                  break;\n\n                case 11:\n                  if (!singleInstance) {\n                    // If single instance objects are disabled, we need to replace the\n                    for (_i = 0; _i < results.length; _i++) {\n                      _obj = results[_i];\n\n                      if (_obj && _obj.id && idMap[_obj.id]) {\n                        id = _obj.id;\n\n                        _obj._finishFetch(idMap[id].toJSON());\n\n                        results[_i] = idMap[id];\n                      }\n                    }\n                  }\n\n                  _iterator3 = _createForOfIteratorHelper(results);\n                  _context10.prev = 13;\n\n                  _iterator3.s();\n\n                case 15:\n                  if ((_step3 = _iterator3.n()).done) {\n                    _context10.next = 21;\n                    break;\n                  }\n\n                  object = _step3.value;\n                  _context10.next = 19;\n                  return localDatastore._updateObjectIfPinned(object);\n\n                case 19:\n                  _context10.next = 15;\n                  break;\n\n                case 21:\n                  _context10.next = 26;\n                  break;\n\n                case 23:\n                  _context10.prev = 23;\n                  _context10.t0 = _context10[\"catch\"](13);\n\n                  _iterator3.e(_context10.t0);\n\n                case 26:\n                  _context10.prev = 26;\n\n                  _iterator3.f();\n\n                  return _context10.finish(26);\n\n                case 29:\n                  return _context10.abrupt(\"return\", _promise.default.resolve(results));\n\n                case 30:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee6, null, [[13, 23, 26, 29]]);\n        }));\n\n        return function (_x4) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    } else if (target instanceof ParseObject) {\n      if (!target.id) {\n        return _promise.default.reject(new _ParseError.default(_ParseError.default.MISSING_OBJECT_ID, 'Object does not have an ID'));\n      }\n\n      var RESTController = _CoreManager.default.getRESTController();\n\n      var params = {};\n\n      if (options && options.include) {\n        params.include = options.include.join();\n      }\n\n      return RESTController.request('GET', 'classes/' + target.className + '/' + target._getId(), params, options).then( /*#__PURE__*/function () {\n        var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(response) {\n          return _regeneratorRuntime().wrap(function _callee7$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  target._clearPendingOps();\n\n                  target._clearServerData();\n\n                  target._finishFetch(response);\n\n                  _context11.next = 5;\n                  return localDatastore._updateObjectIfPinned(target);\n\n                case 5:\n                  return _context11.abrupt(\"return\", target);\n\n                case 6:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee7);\n        }));\n\n        return function (_x5) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    }\n\n    return _promise.default.resolve();\n  },\n  destroy: function destroy(target\n  /*: ParseObject | Array<ParseObject>*/\n  , options\n  /*: RequestOptions*/\n  )\n  /*: Promise<Array<void> | ParseObject>*/\n  {\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n      var batchSize, localDatastore, RESTController, batches, deleteCompleted, errors;\n      return _regeneratorRuntime().wrap(function _callee10$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              batchSize = options && options.batchSize ? options.batchSize : _CoreManager.default.get('REQUEST_BATCH_SIZE');\n              localDatastore = _CoreManager.default.getLocalDatastore();\n              RESTController = _CoreManager.default.getRESTController();\n\n              if (!(0, _isArray.default)(target)) {\n                _context14.next = 15;\n                break;\n              }\n\n              if (!(target.length < 1)) {\n                _context14.next = 6;\n                break;\n              }\n\n              return _context14.abrupt(\"return\", _promise.default.resolve([]));\n\n            case 6:\n              batches = [[]];\n              (0, _forEach.default)(target).call(target, function (obj) {\n                if (!obj.id) {\n                  return;\n                }\n\n                batches[batches.length - 1].push(obj);\n\n                if (batches[batches.length - 1].length >= batchSize) {\n                  batches.push([]);\n                }\n              });\n\n              if (batches[batches.length - 1].length === 0) {\n                // If the last batch is empty, remove it\n                batches.pop();\n              }\n\n              deleteCompleted = _promise.default.resolve();\n              errors = [];\n              (0, _forEach.default)(batches).call(batches, function (batch) {\n                deleteCompleted = deleteCompleted.then(function () {\n                  return RESTController.request('POST', 'batch', {\n                    requests: (0, _map.default)(batch).call(batch, function (obj) {\n                      return {\n                        method: 'DELETE',\n                        path: getServerUrlPath() + 'classes/' + obj.className + '/' + obj._getId(),\n                        body: {}\n                      };\n                    })\n                  }, options).then(function (results) {\n                    for (var i = 0; i < results.length; i++) {\n                      if (results[i] && results[i].hasOwnProperty('error')) {\n                        var err = new _ParseError.default(results[i].error.code, results[i].error.error);\n                        err.object = batch[i];\n                        errors.push(err);\n                      }\n                    }\n                  });\n                });\n              });\n              return _context14.abrupt(\"return\", deleteCompleted.then( /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n                var aggregate, _iterator4, _step4, object;\n\n                return _regeneratorRuntime().wrap(function _callee8$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        if (!errors.length) {\n                          _context12.next = 4;\n                          break;\n                        }\n\n                        aggregate = new _ParseError.default(_ParseError.default.AGGREGATE_ERROR);\n                        aggregate.errors = errors;\n                        return _context12.abrupt(\"return\", _promise.default.reject(aggregate));\n\n                      case 4:\n                        _iterator4 = _createForOfIteratorHelper(target);\n                        _context12.prev = 5;\n\n                        _iterator4.s();\n\n                      case 7:\n                        if ((_step4 = _iterator4.n()).done) {\n                          _context12.next = 13;\n                          break;\n                        }\n\n                        object = _step4.value;\n                        _context12.next = 11;\n                        return localDatastore._destroyObjectIfPinned(object);\n\n                      case 11:\n                        _context12.next = 7;\n                        break;\n\n                      case 13:\n                        _context12.next = 18;\n                        break;\n\n                      case 15:\n                        _context12.prev = 15;\n                        _context12.t0 = _context12[\"catch\"](5);\n\n                        _iterator4.e(_context12.t0);\n\n                      case 18:\n                        _context12.prev = 18;\n\n                        _iterator4.f();\n\n                        return _context12.finish(18);\n\n                      case 21:\n                        return _context12.abrupt(\"return\", _promise.default.resolve(target));\n\n                      case 22:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee8, null, [[5, 15, 18, 21]]);\n              }))));\n\n            case 15:\n              if (!(target instanceof ParseObject)) {\n                _context14.next = 17;\n                break;\n              }\n\n              return _context14.abrupt(\"return\", RESTController.request('DELETE', 'classes/' + target.className + '/' + target._getId(), {}, options).then( /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n                return _regeneratorRuntime().wrap(function _callee9$(_context13) {\n                  while (1) {\n                    switch (_context13.prev = _context13.next) {\n                      case 0:\n                        _context13.next = 2;\n                        return localDatastore._destroyObjectIfPinned(target);\n\n                      case 2:\n                        return _context13.abrupt(\"return\", _promise.default.resolve(target));\n\n                      case 3:\n                      case \"end\":\n                        return _context13.stop();\n                    }\n                  }\n                }, _callee9);\n              }))));\n\n            case 17:\n              return _context14.abrupt(\"return\", _promise.default.resolve(target));\n\n            case 18:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee10);\n    }))();\n  },\n  save: function save(target\n  /*: ParseObject | Array<ParseObject | ParseFile>*/\n  , options\n  /*: RequestOptions*/\n  ) {\n    var batchSize = options && options.batchSize ? options.batchSize : _CoreManager.default.get('REQUEST_BATCH_SIZE');\n\n    var localDatastore = _CoreManager.default.getLocalDatastore();\n\n    var mapIdForPin = {};\n\n    var RESTController = _CoreManager.default.getRESTController();\n\n    var stateController = _CoreManager.default.getObjectStateController();\n\n    var allowCustomObjectId = _CoreManager.default.get('ALLOW_CUSTOM_OBJECT_ID');\n\n    options = options || {};\n    options.returnStatus = options.returnStatus || true;\n\n    if ((0, _isArray.default)(target)) {\n      if (target.length < 1) {\n        return _promise.default.resolve([]);\n      }\n\n      var unsaved = (0, _concat.default)(target).call(target);\n\n      for (var i = 0; i < target.length; i++) {\n        if (target[i] instanceof ParseObject) {\n          unsaved = (0, _concat.default)(unsaved).call(unsaved, (0, _unsavedChildren.default)(target[i], true));\n        }\n      }\n\n      unsaved = (0, _unique.default)(unsaved);\n      var filesSaved\n      /*: Array<ParseFile>*/\n      = [];\n      var pending\n      /*: Array<ParseObject>*/\n      = [];\n      (0, _forEach.default)(unsaved).call(unsaved, function (el) {\n        if (el instanceof _ParseFile.default) {\n          filesSaved.push(el.save(options));\n        } else if (el instanceof ParseObject) {\n          pending.push(el);\n        }\n      });\n      return _promise.default.all(filesSaved).then(function () {\n        var objectError = null;\n        return (0, _promiseUtils.continueWhile)(function () {\n          return pending.length > 0;\n        }, function () {\n          var batch = [];\n          var nextPending = [];\n          (0, _forEach.default)(pending).call(pending, function (el) {\n            if (allowCustomObjectId && Object.prototype.hasOwnProperty.call(el, 'id') && !el.id) {\n              throw new _ParseError.default(_ParseError.default.MISSING_OBJECT_ID, 'objectId must not be empty or null');\n            }\n\n            if (batch.length < batchSize && (0, _canBeSerialized.default)(el)) {\n              batch.push(el);\n            } else {\n              nextPending.push(el);\n            }\n          });\n          pending = nextPending;\n\n          if (batch.length < 1) {\n            return _promise.default.reject(new _ParseError.default(_ParseError.default.OTHER_CAUSE, 'Tried to save a batch with a cycle.'));\n          } // Queue up tasks for each object in the batch.\n          // When every task is ready, the API request will execute\n\n\n          var batchReturned = new _promiseUtils.resolvingPromise();\n          var batchReady = [];\n          var batchTasks = [];\n          (0, _forEach.default)(batch).call(batch, function (obj, index) {\n            var ready = new _promiseUtils.resolvingPromise();\n            batchReady.push(ready);\n\n            var task = function task() {\n              ready.resolve();\n              return batchReturned.then(function (responses) {\n                if (responses[index].hasOwnProperty('success')) {\n                  var objectId = responses[index].success.objectId;\n                  var status = responses[index]._status;\n                  delete responses[index]._status;\n                  mapIdForPin[objectId] = obj._localId;\n\n                  obj._handleSaveResponse(responses[index].success, status);\n                } else {\n                  if (!objectError && responses[index].hasOwnProperty('error')) {\n                    var serverError = responses[index].error;\n                    objectError = new _ParseError.default(serverError.code, serverError.error); // Cancel the rest of the save\n\n                    pending = [];\n                  }\n\n                  obj._handleSaveError();\n                }\n              });\n            };\n\n            stateController.pushPendingState(obj._getStateIdentifier());\n            batchTasks.push(stateController.enqueueTask(obj._getStateIdentifier(), task));\n          });\n          (0, _promiseUtils.when)(batchReady).then(function () {\n            // Kick off the batch request\n            return RESTController.request('POST', 'batch', {\n              requests: (0, _map.default)(batch).call(batch, function (obj) {\n                var params = obj._getSaveParams();\n\n                params.path = getServerUrlPath() + params.path;\n                return params;\n              })\n            }, options);\n          }).then(batchReturned.resolve, function (error) {\n            batchReturned.reject(new _ParseError.default(_ParseError.default.INCORRECT_TYPE, error.message));\n          });\n          return (0, _promiseUtils.when)(batchTasks);\n        }).then( /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n          var _iterator5, _step5, object;\n\n          return _regeneratorRuntime().wrap(function _callee11$(_context15) {\n            while (1) {\n              switch (_context15.prev = _context15.next) {\n                case 0:\n                  if (!objectError) {\n                    _context15.next = 2;\n                    break;\n                  }\n\n                  return _context15.abrupt(\"return\", _promise.default.reject(objectError));\n\n                case 2:\n                  _iterator5 = _createForOfIteratorHelper(target);\n                  _context15.prev = 3;\n\n                  _iterator5.s();\n\n                case 5:\n                  if ((_step5 = _iterator5.n()).done) {\n                    _context15.next = 13;\n                    break;\n                  }\n\n                  object = _step5.value;\n                  _context15.next = 9;\n                  return localDatastore._updateLocalIdForObject(mapIdForPin[object.id], object);\n\n                case 9:\n                  _context15.next = 11;\n                  return localDatastore._updateObjectIfPinned(object);\n\n                case 11:\n                  _context15.next = 5;\n                  break;\n\n                case 13:\n                  _context15.next = 18;\n                  break;\n\n                case 15:\n                  _context15.prev = 15;\n                  _context15.t0 = _context15[\"catch\"](3);\n\n                  _iterator5.e(_context15.t0);\n\n                case 18:\n                  _context15.prev = 18;\n\n                  _iterator5.f();\n\n                  return _context15.finish(18);\n\n                case 21:\n                  return _context15.abrupt(\"return\", _promise.default.resolve(target));\n\n                case 22:\n                case \"end\":\n                  return _context15.stop();\n              }\n            }\n          }, _callee11, null, [[3, 15, 18, 21]]);\n        })));\n      });\n    } else if (target instanceof ParseObject) {\n      if (allowCustomObjectId && Object.prototype.hasOwnProperty.call(target, 'id') && !target.id) {\n        throw new _ParseError.default(_ParseError.default.MISSING_OBJECT_ID, 'objectId must not be empty or null');\n      } // generate _localId in case if cascadeSave=false\n\n\n      target._getId();\n\n      var localId = target._localId; // copying target lets Flow guarantee the pointer isn't modified elsewhere\n\n      var targetCopy = target;\n\n      var task = function task() {\n        var params = targetCopy._getSaveParams();\n\n        return RESTController.request(params.method, params.path, params.body, options).then(function (response) {\n          var status = response._status;\n          delete response._status;\n\n          targetCopy._handleSaveResponse(response, status);\n        }, function (error) {\n          targetCopy._handleSaveError();\n\n          return _promise.default.reject(error);\n        });\n      };\n\n      stateController.pushPendingState(target._getStateIdentifier());\n      return stateController.enqueueTask(target._getStateIdentifier(), task).then( /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n        return _regeneratorRuntime().wrap(function _callee12$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _context16.next = 2;\n                return localDatastore._updateLocalIdForObject(localId, target);\n\n              case 2:\n                _context16.next = 4;\n                return localDatastore._updateObjectIfPinned(target);\n\n              case 4:\n                return _context16.abrupt(\"return\", target);\n\n              case 5:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee12);\n      })), function (error) {\n        return _promise.default.reject(error);\n      });\n    }\n\n    return _promise.default.resolve();\n  }\n};\n\n_CoreManager.default.setObjectController(DefaultController);\n\nvar _default = ParseObject;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}